[{"/Users/nishantrana/Desktop/doga-frontend/src/index.js":"1","/Users/nishantrana/Desktop/doga-frontend/src/reportWebVitals.js":"2","/Users/nishantrana/Desktop/doga-frontend/src/App.js":"3","/Users/nishantrana/Desktop/doga-frontend/src/Api.js":"4","/Users/nishantrana/Desktop/doga-frontend/src/styles/theme.js":"5","/Users/nishantrana/Desktop/doga-frontend/src/styles/index.js":"6","/Users/nishantrana/Desktop/doga-frontend/src/components/Header/Header.js":"7","/Users/nishantrana/Desktop/doga-frontend/src/components/Footer/Footer.js":"8","/Users/nishantrana/Desktop/doga-frontend/src/containers/Signup/Signup.js":"9","/Users/nishantrana/Desktop/doga-frontend/src/containers/Login/Login.js":"10","/Users/nishantrana/Desktop/doga-frontend/src/components/Header/AdminProfile.js":"11","/Users/nishantrana/Desktop/doga-frontend/src/containers/Dashboard/Dashboard.js":"12","/Users/nishantrana/Desktop/doga-frontend/src/containers/CreateDatabase/CreateDatabase.js":"13","/Users/nishantrana/Desktop/doga-frontend/src/components/Sidebar/Sidebar.js":"14","/Users/nishantrana/Desktop/doga-frontend/src/containers/Mysql/Mysql.js":"15","/Users/nishantrana/Desktop/doga-frontend/src/containers/Database/Database.js":"16","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/Application.js":"17","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/ApplicationNext.js":"18","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/CreateTable.js":"19","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/Content.js":"20","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/CreateAppName.js":"21","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/ContentField.js":"22","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/AppTableCreation.js":"23","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/AppTableData.js":"24","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/EditDatabase.js":"25","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/BaseJwtLogin.js":"26","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/AwsDeploy.js":"27","/Users/nishantrana/Desktop/doga-frontend/src/containers/AppHome/AppHome.js":"28","/Users/nishantrana/Desktop/doga-frontend/src/containers/AppDocs/AppDocs.js":"29","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/AwsDeploy.js":"30","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/HerokuDeploy.js":"31","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/Deploy.js":"32","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/UserCredentials.js":"33","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/UserConfig.js":"34","/Users/nishantrana/Desktop/doga-frontend/src/containers/Plugins/Twilio.js":"35","/Users/nishantrana/Desktop/doga-frontend/src/containers/Plugins/Sendgrid.js":"36","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/RdsConfig.js":"37","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/Aws.js":"38","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/CreateTableName.js":"39","/Users/nishantrana/Desktop/doga/doga-frontend/src/index.js":"40","/Users/nishantrana/Desktop/doga/doga-frontend/src/reportWebVitals.js":"41","/Users/nishantrana/Desktop/doga/doga-frontend/src/App.js":"42","/Users/nishantrana/Desktop/doga/doga-frontend/src/styles/theme.js":"43","/Users/nishantrana/Desktop/doga/doga-frontend/src/Api.js":"44","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Sidebar/Sidebar.js":"45","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Footer/Footer.js":"46","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Header/Header.js":"47","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Login/Login.js":"48","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Dashboard/Dashboard.js":"49","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Signup/Signup.js":"50","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/CreateDatabase/CreateDatabase.js":"51","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Mysql/Mysql.js":"52","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Database/Database.js":"53","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/Application.js":"54","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/Content.js":"55","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/AppHome/AppHome.js":"56","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Plugins/Twilio.js":"57","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/Deploy.js":"58","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/HerokuDeploy.js":"59","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/AppDocs/AppDocs.js":"60","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Plugins/Sendgrid.js":"61","/Users/nishantrana/Desktop/doga/doga-frontend/src/styles/index.js":"62","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Header/AdminProfile.js":"63","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/Aws.js":"64","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/AwsDeploy.js":"65","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/UserCredentials.js":"66","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/RdsConfig.js":"67","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/UserConfig.js":"68","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/AppTableCreation.js":"69","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/BaseJwtLogin.js":"70","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/AwsDeploy.js":"71","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/ContentField.js":"72","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/CreateTableName.js":"73","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/CreateTable.js":"74","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/AppTableData.js":"75","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/CreateAppName.js":"76","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/ApplicationNext.js":"77","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/EditDatabase.js":"78","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/RichTextView.js":"79","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/ImageUploadSelect/ImageUploadSelect.js":"80","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/ImageView.js":"81","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/AppHome/DoughnutChart.js":"82"},{"size":611,"mtime":1611150632812,"results":"83","hashOfConfig":"84"},{"size":362,"mtime":1609233244036,"results":"85","hashOfConfig":"84"},{"size":7194,"mtime":1619371183699,"results":"86","hashOfConfig":"84"},{"size":3686,"mtime":1619097795616,"results":"87","hashOfConfig":"84"},{"size":1924,"mtime":1609668187889,"results":"88","hashOfConfig":"84"},{"size":10980,"mtime":1618928835094,"results":"89","hashOfConfig":"84"},{"size":16578,"mtime":1619100271474,"results":"90","hashOfConfig":"84"},{"size":497,"mtime":1609247766630,"results":"91","hashOfConfig":"84"},{"size":7879,"mtime":1615745015990,"results":"92","hashOfConfig":"84"},{"size":6681,"mtime":1617132222808,"results":"93","hashOfConfig":"84"},{"size":1172,"mtime":1609787472167,"results":"94","hashOfConfig":"84"},{"size":3509,"mtime":1618929174371,"results":"95","hashOfConfig":"84"},{"size":7725,"mtime":1617126381550,"results":"96","hashOfConfig":"84"},{"size":27916,"mtime":1618924668684,"results":"97","hashOfConfig":"84"},{"size":1360,"mtime":1610052974253,"results":"98","hashOfConfig":"84"},{"size":6048,"mtime":1618859557422,"results":"99","hashOfConfig":"84"},{"size":2443,"mtime":1618515991097,"results":"100","hashOfConfig":"84"},{"size":8672,"mtime":1610825916269,"results":"101","hashOfConfig":"84"},{"size":53004,"mtime":1619114684718,"results":"102","hashOfConfig":"84"},{"size":17959,"mtime":1618917182767,"results":"103","hashOfConfig":"84"},{"size":1861,"mtime":1616528029271,"results":"104","hashOfConfig":"84"},{"size":18471,"mtime":1611862443366,"results":"105","hashOfConfig":"84"},{"size":3670,"mtime":1617109501861,"results":"106","hashOfConfig":"84"},{"size":17714,"mtime":1619356390515,"results":"107","hashOfConfig":"84"},{"size":2172,"mtime":1611696639079,"results":"108","hashOfConfig":"84"},{"size":3922,"mtime":1613422130650,"results":"109","hashOfConfig":"84"},{"size":21988,"mtime":1613131825418,"results":"110","hashOfConfig":"84"},{"size":18898,"mtime":1618924195244,"results":"111","hashOfConfig":"84"},{"size":19900,"mtime":1619111214632,"results":"112","hashOfConfig":"84"},{"size":12003,"mtime":1617101819542,"results":"113","hashOfConfig":"84"},{"size":4960,"mtime":1616395316039,"results":"114","hashOfConfig":"84"},{"size":3961,"mtime":1619371240468,"results":"115","hashOfConfig":"84"},{"size":6144,"mtime":1617042301321,"results":"116","hashOfConfig":"84"},{"size":7295,"mtime":1617046478184,"results":"117","hashOfConfig":"84"},{"size":9070,"mtime":1616013316950,"results":"118","hashOfConfig":"84"},{"size":9706,"mtime":1616013310349,"results":"119","hashOfConfig":"84"},{"size":11587,"mtime":1617101821637,"results":"120","hashOfConfig":"84"},{"size":12657,"mtime":1619371283803,"results":"121","hashOfConfig":"84"},{"size":2037,"mtime":1617107244411,"results":"122","hashOfConfig":"84"},{"size":611,"mtime":1611150632812,"results":"123","hashOfConfig":"124"},{"size":362,"mtime":1609233244036,"results":"125","hashOfConfig":"124"},{"size":6948,"mtime":1621516798918,"results":"126","hashOfConfig":"124"},{"size":1950,"mtime":1621971391592,"results":"127","hashOfConfig":"124"},{"size":5006,"mtime":1621584971332,"results":"128","hashOfConfig":"124"},{"size":27916,"mtime":1618924668684,"results":"129","hashOfConfig":"124"},{"size":497,"mtime":1609247766630,"results":"130","hashOfConfig":"124"},{"size":16578,"mtime":1619100271474,"results":"131","hashOfConfig":"124"},{"size":6681,"mtime":1617132222808,"results":"132","hashOfConfig":"124"},{"size":3513,"mtime":1621975061774,"results":"133","hashOfConfig":"124"},{"size":7879,"mtime":1615745015990,"results":"134","hashOfConfig":"124"},{"size":7725,"mtime":1617126381550,"results":"135","hashOfConfig":"124"},{"size":1360,"mtime":1610052974253,"results":"136","hashOfConfig":"124"},{"size":6048,"mtime":1618859557422,"results":"137","hashOfConfig":"124"},{"size":2443,"mtime":1618515991097,"results":"138","hashOfConfig":"124"},{"size":26899,"mtime":1622039044411,"results":"139","hashOfConfig":"124"},{"size":15910,"mtime":1621975925488,"results":"140","hashOfConfig":"124"},{"size":9554,"mtime":1622048598766,"results":"141","hashOfConfig":"124"},{"size":3961,"mtime":1619371240468,"results":"142","hashOfConfig":"124"},{"size":4960,"mtime":1616395316039,"results":"143","hashOfConfig":"124"},{"size":19900,"mtime":1619111214632,"results":"144","hashOfConfig":"124"},{"size":15842,"mtime":1622047103815,"results":"145","hashOfConfig":"124"},{"size":11270,"mtime":1622038173695,"results":"146","hashOfConfig":"124"},{"size":1172,"mtime":1609787472167,"results":"147","hashOfConfig":"124"},{"size":12657,"mtime":1619371283803,"results":"148","hashOfConfig":"124"},{"size":12003,"mtime":1617101819542,"results":"149","hashOfConfig":"124"},{"size":6144,"mtime":1617042301321,"results":"150","hashOfConfig":"124"},{"size":11587,"mtime":1617101821637,"results":"151","hashOfConfig":"124"},{"size":7295,"mtime":1617046478184,"results":"152","hashOfConfig":"124"},{"size":3670,"mtime":1617109501861,"results":"153","hashOfConfig":"124"},{"size":3922,"mtime":1613422130650,"results":"154","hashOfConfig":"124"},{"size":21988,"mtime":1613131825418,"results":"155","hashOfConfig":"124"},{"size":18471,"mtime":1611862443366,"results":"156","hashOfConfig":"124"},{"size":2037,"mtime":1617107244411,"results":"157","hashOfConfig":"124"},{"size":53404,"mtime":1622052714597,"results":"158","hashOfConfig":"124"},{"size":19847,"mtime":1621585065940,"results":"159","hashOfConfig":"124"},{"size":1861,"mtime":1616528029271,"results":"160","hashOfConfig":"124"},{"size":8672,"mtime":1610825916269,"results":"161","hashOfConfig":"124"},{"size":2172,"mtime":1611696639079,"results":"162","hashOfConfig":"124"},{"size":1993,"mtime":1619546117747,"results":"163","hashOfConfig":"124"},{"size":5673,"mtime":1620078597768,"results":"164","hashOfConfig":"124"},{"size":1882,"mtime":1620077868021,"results":"165","hashOfConfig":"124"},{"size":1615,"mtime":1621971341383,"results":"166","hashOfConfig":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},"yqpc7j",{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"169"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"169"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"169"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"169"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"169"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"169"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"169"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"169"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"169"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"169"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"169"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"169"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"169"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"169"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"169"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"169"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"169"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"169"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"169"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"169"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"169"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"169"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"169"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"169"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"169"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"169"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"169"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"169"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"169"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"169"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"169"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"169"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},"vi2dgi",{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"280"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"280"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"280"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"280"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"280"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"280"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"280"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"280"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"280"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"280"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"280"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"280"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"280"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"280"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"280"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"280"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"280"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"280"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"280"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"280"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"280"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"280"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"280"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"280"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"280"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"280"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"280"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"280"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"280"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"280"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"280"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"280"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nishantrana/Desktop/doga-frontend/src/index.js",[],["375","376"],"/Users/nishantrana/Desktop/doga-frontend/src/reportWebVitals.js",[],"/Users/nishantrana/Desktop/doga-frontend/src/App.js",["377","378","379","380","381","382","383","384","385","386","387","388"],"/Users/nishantrana/Desktop/doga-frontend/src/Api.js",[],"/Users/nishantrana/Desktop/doga-frontend/src/styles/theme.js",[],"/Users/nishantrana/Desktop/doga-frontend/src/styles/index.js",["389","390","391"],"import styled from \"@emotion/styled\";\nimport { height, variant } from \"styled-system\";\nimport { motion } from \"framer-motion\";\nimport theme from \"./theme\";\n// import ScaleLoader from \"react-spinners/ScaleLoader\";\n\nimport {\n  space,\n  layout,\n  color,\n  flexbox,\n  border,\n  typography,\n  background,\n  grid,\n  shadow,\n  position,\n  backgroundImage,\n} from \"styled-system\";\n\nexport const Box = styled.div(\n  variant({\n    prop: \"type\",\n    variants: {\n      row: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n      },\n      column: {\n        display: \"flex\",\n        flexDirection: \"column\",\n      },\n      center: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      },\n      relative: {\n        boxSizing: \"border-box\",\n        clear: \"both\",\n        fontSize: \"1rem\",\n        position: \"relative\",\n        textAlign: \"inherit\",\n      },\n      tableView: {\n        marginTop: \"1.25rem\",\n        padding: \"0.75rem\",\n        borderWidth: \"1px\",\n        borderRadius: \"12px\",\n        /* z-index: 1; */\n        background: \"white\",\n        margin: \"10px\",\n        /* width: 98%; */\n        border: \"2px solid rgb(226, 232, 240)\",\n      },\n      loader: {\n        position: \"fixed\",\n        zIndex: \"999\",\n        overflow: \"show\",\n        margin: \"auto\",\n        top: \"0\",\n        left: \"200px\",\n        bottom: \"0\",\n        right: \"0\",\n        width: \"60px\",\n        height: \"60px\",\n        color: \" #ffffff\",\n        boxShadow: \"#382e6c 0px 2px 4px 1px\",\n        background: \"#8071b3\",\n        borderRadius: \"50%\",\n        padding: \"3px\",\n      },\n      loaderText: {\n        position: \"fixed\",\n        zIndex: \"999\",\n        overflow: \"show\",\n        margin: \"auto\",\n        top: \"150px\",\n        left: \"200px\",\n        bottom: \"0\",\n        right: \"0\",\n        width: \"100px\",\n        height: \"50px\",\n\n        padding: \"13px\",\n      },\n      loaderCentered: {\n        position: \"fixed\",\n        zIndex: \"999\",\n        overflow: \"show\",\n        margin: \"auto\",\n        left: \"0\",\n        top: \"0\",\n        bottom: \"0\",\n        right: \"0\",\n        width: \"60px\",\n        height: \"60px\",\n        color: \" #ffffff\",\n        boxShadow: \"#382e6c 0px 2px 4px 1px\",\n        background: \"#8071b3\",\n        borderRadius: \"50%\",\n        padding: \"3px\",\n      },\n      heading: {\n        width: \"100%\",\n        marginLeft: \"0\",\n        marginRight: \"0\",\n        padding: \"12px 20px 10px\",\n        minHeight: \"63px\",\n        marginTop: \"2px\",\n        borderBottom: \"2px solid #8071b399\",\n        backgroundColor: \"#f7f8fb\",\n        padding: \"20px\",\n      },\n    },\n  }),\n  space,\n  color,\n  grid,\n  layout,\n  flexbox,\n  border,\n  typography,\n  shadow,\n  position,\n  background\n);\nexport const MotionBox = styled(motion.div)(\n  variant({\n    prop: \"type\",\n    variants: {\n      row: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n      },\n      column: {\n        display: \"flex\",\n        flexDirection: \"column\",\n      },\n      center: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      },\n      rowSidebar: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        \"&:hover\": {\n          color: \"purple\",\n        },\n      },\n    },\n  }),\n  space,\n  color,\n  grid,\n  layout,\n  flexbox,\n  border,\n  typography,\n  shadow,\n  position,\n  background\n);\n\nexport const Button = styled(\"button\")(\n  {\n    appearance: \"none\",\n    fontFamily: theme.fonts.DM,\n    fontWeight: theme.fontWeights.semiBold,\n    fontSize: \"15px\",\n\n    cursor: \"pointer\",\n    width: \"fit-content\",\n\n    outline: \"none\",\n    border: \"none\",\n    // boxShadow: \"0 20px 20px -15px rgba(127, 0, 255, .8)\",\n\n    userSelect: \"none\",\n    padding: \"0.75em 1.75em\",\n    borderRadius: \"5px\",\n    display: \"inline-block\",\n    color: \"#ffffff\",\n    // backgroundImage: \"linear-gradient(to right, #7f00ff, #8b008bd4)\",\n    boxShadow: \"#382e6c 0px 2px 4px 1px\",\n    background: \"#8071b3\",\n    \"&:hover\": {\n      opacity: \".8\",\n    },\n  },\n  variant({\n    prop: \"type\",\n    variants: {\n      primary: {\n        width: \"110px\",\n      },\n      secondary: {\n        // border: \"1px solid #492897\",\n        // borderRadius: \"4px 0 4px 0\",\n        // color: \"#492897\",\n        // fontSize: \"19px\",\n        // backgroundImage: \"none\",\n        // bg: \"orange\",\n        // boxShadow: \"0px 4px 14px rgba(237, 107, 101, 0.9)\",\n      },\n      tableAdd: {\n        // border: \"1px solid #492897\",\n        borderRadius: \"4px 0 4px 0\",\n        color: \"purple\",\n        backgroundColor: \"rgb(241 218 249)\",\n        width: \"-webkit-fill-available\",\n\n        backgroundImage: \"none\",\n\n        // bg: \"orange\",\n        // boxShadow: \"0px 4px 14px rgba(237, 107, 101, 0.9)\",\n      },\n      toggleTable: {\n        color: \"purple\",\n        backgroundColor: \"rgb(255 255 255)\",\n        borderRadius: \"0px\",\n        backgroundImage: \"none\",\n        \"&:hover\": {\n          opacity: \"1\",\n        },\n      },\n    },\n  }),\n  space,\n  color,\n  typography,\n  layout,\n  flexbox,\n  border\n);\nexport const Tab = styled(\"button\")(\n  {\n    appearance: \"none\",\n    fontFamily: theme.fonts.DM,\n    fontWeight: theme.fontWeights.normal,\n    fontSize: \"16px\",\n    padding: \"8px 13px\",\n    color: \"#191919\",\n    backgroundColor: \"#f2f2f2\",\n    cursor: \"pointer\",\n    borderRadius: \"15px\",\n    width: \"100%\",\n    borderColor: \"#e8e8e8\",\n  },\n  variant({\n    prop: \"type\",\n    variants: {\n      active: {\n        color: \"white\",\n        bg: \"orange\",\n        boxShadow: \"0px 4px 14px rgba(237, 107, 101, 0.9)\",\n      },\n    },\n  }),\n  space,\n  color,\n  typography,\n  layout,\n  flexbox,\n  border\n);\n\nexport const Para = styled.p(\n  {\n    fontSize: \"0.91rem\",\n    color: theme.colors.grey,\n    lineHeight: \"24px\",\n  },\n  variant({\n    prop: \"type\",\n    variants: {\n      info: {\n        fontSize: \"0.70rem\",\n        color: theme.colors.grey,\n        lineHeight: \"inherit\",\n      },\n    },\n  }),\n  space,\n  color,\n  typography,\n  position,\n  border,\n  layout\n);\n\nexport const Span = styled.span(\n  {\n    fontSize: \"theme.fontSizes[4]\",\n    color: theme.colors.grey,\n    lineHeight: \"24px\",\n  },\n  space,\n  color,\n  typography,\n  layout,\n  variant({\n    prop: \"type\",\n    variants: {\n      icon: {\n        left: \"12px\",\n\n        color: \"#dbdbdb\",\n\n        pointerEvents: \"none\",\n        position: \"absolute\",\n        top: \"8px\",\n        width: \"2.5em\",\n        zIndex: \"4\",\n      },\n      heading: {\n        color: \"#5d6c84\",\n        fontSize: \"1.2rem\",\n      },\n    },\n  })\n);\nexport const Tag = styled.span(\n  {\n    fontSize: theme.fontSizes[4],\n\n    borderRadius: \"4px 0 4px 0\",\n  },\n  space,\n  color,\n  typography,\n  layout\n);\nexport const Tags = styled.div(\n  {\n    fontSize: theme.fontSizes[4],\n    borderRadius: \"4px 0 4px 0\",\n    fontSize: \"xx-large\",\n    border: \"none\",\n  },\n  space,\n  color,\n  typography,\n  layout,\n  height,\n  border\n);\n\nexport const H1 = styled.h1(\n  {\n    fontSize: theme.fontSizes[10],\n    color: theme.colors.purple,\n    fontFamily: theme.fonts.DM,\n    fontWeight: theme.fontWeights.light,\n    lineHeight: \"64px\",\n  },\n\n  space,\n  color,\n  typography,\n  position,\n  border,\n  layout,\n  variant({\n    prop: \"type\",\n    variants: {\n      fullBorder: {\n        paddingBottom: 12,\n        borderBottom: \"4px solid\",\n        borderColor: \"rgb(127, 0, 255)\",\n      },\n      centerBorder: {\n        paddingBottom: 12,\n        borderBottom: \"4px solid\",\n        borderColor: \"rgb(127, 0, 255)\",\n        width: \"fit-content\",\n        textAlign: \"center\",\n      },\n    },\n  })\n);\nexport const H2 = styled.h2(\n  {\n    fontSize: \"2rem\",\n    color: \"#8071b3\",\n    // fontFamily: theme.fonts.DM,\n    fontWeight: \"500\",\n    lineHeight: \"18px\",\n    marginBottom: \"0.5rem\",\n  },\n  space,\n  color,\n  typography,\n  position,\n  border,\n  layout,\n  variant({\n    prop: \"type\",\n    variants: {\n      fullBorder: {\n        paddingBottom: 12,\n        borderBottom: \"4px solid\",\n        borderColor: \"#4B0082\",\n      },\n      centerBorder: {\n        paddingBottom: 12,\n        borderBottom: \"4px solid\",\n        borderColor: \"#4B0082\",\n        width: \"fit-content\",\n        textAlign: \"center\",\n      },\n    },\n  })\n);\nexport const H3 = styled.h3(\n  {\n    fontSize: theme.fontSizes[8],\n    color: theme.colors.purple,\n    fontFamily: theme.fonts.DM,\n    fontWeight: theme.fontWeights.normal,\n    lineHeight: \"36px\",\n  },\n  space,\n  color,\n  typography,\n  position,\n  border,\n  layout,\n  variant({\n    prop: \"type\",\n    variants: {\n      fullBorder: {\n        paddingBottom: 12,\n        borderBottom: \"4px solid\",\n        borderColor: \"orange\",\n      },\n      centerBorder: {\n        paddingBottom: 12,\n        borderBottom: \"4px solid\",\n        borderColor: \"orange\",\n        width: \"fit-content\",\n        textAlign: \"center\",\n      },\n    },\n  })\n);\nexport const H5 = styled.h5(\n  {\n    fontSize: theme.fontSizes[6],\n    color: theme.colors.purple,\n    fontFamily: theme.fonts.DM,\n    fontWeight: theme.fontWeights.normal,\n    lineHeight: \"26px\",\n  },\n  space,\n  color,\n  typography,\n  position,\n  border,\n  layout\n);\n\nexport const StyledLink = styled(\"a\")(\n  {\n    fontSize: theme.fontSizes[5],\n    color: theme.colors.grey,\n    lineHeight: \"24px\",\n    cursor: \"pointer\",\n  },\n  space,\n  color,\n  typography,\n  position,\n  border,\n  layout\n);\n\nexport const Image = styled.img`\n  ${space}\n  ${color}\n  ${typography}\n  ${position}\n  ${border}\n  ${shadow}\n`;\nexport const ResponsiveImage = styled.img`\n  ${space}\n  ${color}\n  ${typography}\n  ${position}\n  ${border}\n  ${shadow}\n  ${layout}\n`;\n\nexport const Input = styled(\"input\")(\n  {\n    border: \"1px solid #d3d3d3\",\n    borderRadius: 5,\n  },\n  space,\n  color,\n  typography,\n  layout,\n  position,\n  border,\n  shadow,\n  variant({\n    prop: \"inputType\",\n    variants: {\n      auth: {\n        paddingLeft: 42,\n      },\n    },\n  })\n);\nexport const Label = styled(\"label\")(\n  {\n    display: \"inline-block\",\n    fontSize: \"1rem\",\n    fontWeight: \"700\",\n    fontFamily: theme.fonts.DM,\n    marginBottom: \"6px\",\n    padding: \"0\",\n    color: \"#5d6c84\",\n  },\n  space,\n  color,\n  typography,\n  layout,\n  position,\n  border,\n  shadow,\n  variant({\n    prop: \"type\",\n    variants: {\n      auth: {\n        paddingLeft: 42,\n      },\n    },\n  })\n);\nexport const TextArea = styled(\"textArea\")(\n  {\n    border: \"1px solid #d3d3d3\",\n  },\n  space,\n  color,\n  typography,\n  layout,\n  position,\n  border,\n  shadow\n);\n\n// export function LButton({ label, type, loading, ...props }) {\n//   return (\n//     <Button {...props} type={type}>\n//       {loading ? (\n//         <ScaleLoader\n//           color={type === \"primary\" ? \"#fff\" : \"#ed6b65\"}\n//           height={16}\n//         />\n//       ) : (\n//         label\n//       )}\n//     </Button>\n//   );\n// }\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Header/Header.js",["392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"import React, { useEffect } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport {\n  NavLink,\n  Link,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  H1,\n  H2,\n  Para,\n  MotionBox,\n  H5,\n} from \"../../styles\";\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport { FaUserAlt, FaBell } from \"react-icons/fa\";\nimport { AiFillHome, AiFillCaretDown } from \"react-icons/ai\";\nimport { Tooltip } from \"@chakra-ui/react\";\nimport Trigger from \"rc-trigger\";\nimport { Icon, ChevronDownIcon } from \"@chakra-ui/react\";\nimport AdminProfile from \"./AdminProfile\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuItemOption,\n  MenuGroup,\n  MenuOptionGroup,\n  MenuIcon,\n  MenuCommand,\n  MenuDivider,\n} from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbSeparator,\n} from \"@chakra-ui/react\";\n\nconst Header = () => {\n  const location = useLocation();\n  let match = useRouteMatch();\n  console.log(match);\n\n  const [token, setToken] = useGlobal(\"token\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n\n  const { data, loading } = useQuery(APIURLS.getNotifications, {\n    enabled: !!token,\n  });\n  async function notificationRefreshHandler() {\n    try {\n      await queryClient.refetchQueries(APIURLS.getNotifications());\n      console.log(data);\n    } catch ({ response }) {}\n  }\n\n  // console.log(refreshNotifications);\n  async function handleLogout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"userEmail\");\n    localStorage.removeItem(\"userName\");\n    setToken(null);\n    console.log(\"tokie\");\n  }\n\n  async function markAllHandler() {\n    try {\n      let { data } = await Api.post(APIURLS.markAllNotifications);\n      await queryClient.refetchQueries(APIURLS.getNotifications());\n      console.log(data);\n    } catch ({ response }) {}\n  }\n  async function markIndividualHandler(id) {\n    console.log(id);\n    try {\n      let { data } = await Api.post(APIURLS.markIndividualNotifications(), {\n        id: id,\n      });\n      await queryClient.refetchQueries(APIURLS.getNotifications());\n      toast({\n        title: \"Notification Marked Read.\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      console.log();\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n    }\n  }\n\n  return (\n    <>\n      {/* <Sidebar isOpen={isOpen} onOpen={onOpen} onClose={onClose} /> */}\n      <Box\n        gridColumn={2}\n        px={4}\n        display={[\"flex\"]}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent=\"space-between\"\n        height={50}\n        background=\"white\"\n        boxShadow=\"0 2px 4px 0 rgba(0,0,0,.07)\"\n      >\n        {location.pathname === \"/dashboard\" ? (\n          <Breadcrumb\n            style={{ padding: \"25px\", paddingLeft: \"0px\", color: \"#8071b3\" }}\n          >\n            <BreadcrumbItem>\n              <Tooltip label=\"Dashboard\" placement=\"top-start\" bg=\"#8071b399\">\n                <BreadcrumbLink as={Link} to=\"/dashboard\">\n                  {\" \"}\n                  <Icon\n                    as={AiFillHome}\n                    w={5}\n                    h={5}\n                    // mr={3}\n                    mb={1}\n                    color={\"#8071b3\"}\n                  />\n                </BreadcrumbLink>\n              </Tooltip>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        ) : location.pathname === \"/database\" ? (\n          <Breadcrumb\n            style={{ padding: \"25px\", paddingLeft: \"0px\", color: \"#8071b3\" }}\n          >\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/dashboard\">\n                {\" \"}\n                <Icon\n                  as={AiFillHome}\n                  w={5}\n                  h={5}\n                  // mr={3}\n                  mb={1}\n                  color={\"#8071b3\"}\n                />\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/database\">\n                Database\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        ) : location.pathname === \"/deploy/aws\" ? (\n          <Breadcrumb\n            style={{ padding: \"25px\", paddingLeft: \"0px\", color: \"#8071b3\" }}\n          >\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/dashboard\">\n                {\" \"}\n                <Icon\n                  as={AiFillHome}\n                  w={5}\n                  h={5}\n                  // mr={3}\n                  mb={1}\n                  color={\"#8071b3\"}\n                />\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/deploy/aws\">\n                AWS\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        ) : location.pathname === \"/deploy/heroku\" ? (\n          <Breadcrumb\n            style={{ padding: \"25px\", paddingLeft: \"0px\", color: \"#8071b3\" }}\n          >\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/dashboard\">\n                {\" \"}\n                <Icon\n                  as={AiFillHome}\n                  w={5}\n                  h={5}\n                  // mr={3}\n                  mb={1}\n                  color={\"#8071b3\"}\n                />\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/deploy/heroku\">\n                Heroku\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        ) : location.pathname === \"/plugin/sendgrid\" ? (\n          <Breadcrumb\n            style={{ padding: \"25px\", paddingLeft: \"0px\", color: \"#8071b3\" }}\n          >\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/dashboard\">\n                {\" \"}\n                <Icon\n                  as={AiFillHome}\n                  w={5}\n                  h={5}\n                  // mr={3}\n                  mb={1}\n                  color={\"#8071b3\"}\n                />\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/plugin/sendgrid\">\n                Sendgrid\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        ) : location.pathname === \"/plugin/Twilio\" ? (\n          <Breadcrumb\n            style={{ padding: \"25px\", paddingLeft: \"0px\", color: \"#8071b3\" }}\n          >\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/dashboard\">\n                {\" \"}\n                <Icon\n                  as={AiFillHome}\n                  w={5}\n                  h={5}\n                  // mr={3}\n                  mb={1}\n                  color={\"#8071b3\"}\n                />\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/plugin/Twilio\">\n                Twilio\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        ) : (\n          <Breadcrumb\n            style={{ padding: \"25px\", paddingLeft: \"0px\", color: \"#8071b3\" }}\n          >\n            <BreadcrumbItem>\n              <BreadcrumbLink as={Link} to=\"/dashboard\">\n                {\" \"}\n                <Icon\n                  as={AiFillHome}\n                  w={5}\n                  h={5}\n                  // mr={3}\n                  mb={1}\n                  color={\"#8071b3\"}\n                />\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        )}\n        <Box type={[\"column\", \"row\"]} textAlign=\"center\">\n          {!token ? (\n            <>\n              {\" \"}\n              <NavLink to=\"/signup\">\n                <Button mr={4}>Sign up </Button>\n              </NavLink>\n              <NavLink to=\"/login\">\n                <Button mb={[4, 0]}>Log in</Button>\n              </NavLink>{\" \"}\n            </>\n          ) : (\n            // <Button mb={[4, 0]} onClick={handleLogout}>\n            //   Sign out\n            // </Button>\n            <>\n              <Box type=\"row\" justifyContent=\"start\" mt={2} mb={2}>\n                <Menu\n                  style={{\n                    marginRight: \"3px\",\n                  }}\n                >\n                  <Box\n                    style={{\n                      backgroundColor: \"#372e6c\",\n                      borderRadius: \"50px\",\n                    }}\n                  >\n                    <Box>\n                      <Box\n                        style={{\n                          borderRadius: \"50px\",\n                          boxShadow: \"rgb(10 10 10) 0px 2px 4px -1px\",\n                          background: \"#80808045\",\n                          height: \"40px\",\n                          width: \"40px\",\n                        }}\n                      >\n                        {\" \"}\n                        <Tooltip\n                          label=\"Click to view notifications\"\n                          placement=\"top-start\"\n                          bg=\"#8071b399\"\n                        >\n                          <MenuButton\n                            style={{ color: \"#ffffff\", padding: \"8px\" }}\n                          >\n                            {\" \"}\n                            <Icon\n                              as={FaBell}\n                              w={5}\n                              h={5}\n                              onClick={() => notificationRefreshHandler()}\n                            />\n                          </MenuButton>\n                        </Tooltip>\n                      </Box>\n                    </Box>\n                  </Box>\n\n                  <MenuList>\n                    <MotionBox\n                      bg=\"white\"\n                      boxShadow=\"invisionHover\"\n                      width=\"fit-content\"\n                      initial={{ y: -50, opacity: 0 }}\n                      animate={{\n                        y: 0,\n                        opacity: 1,\n                      }}\n                      p={4}\n                      type=\"column\"\n                      width={[\"90vw\", 350]}\n                      maxHeight=\"600px\"\n                      overflowX=\"scroll\"\n                    >\n                      <Para fontSize={6} mb={1}>\n                        Notifications\n                      </Para>\n                      <Box\n                        borderBottom=\"4px solid\"\n                        borderColor=\"purple\"\n                        mb={2}\n                      ></Box>\n\n                      {data?.length ? (\n                        data?.reverse()?.map((key) => (\n                          <Box\n                            borderBottom=\"1px solid #e1e1e1\"\n                            py={4}\n                            bg={key.mark_read ? \"white\" : \"#80808017\"}\n                            pl={1}\n                            textAlign={\"left\"}\n                            onClick={() =>\n                              key.mark_read\n                                ? markIndividualHandler(key.id)\n                                : null\n                            }\n                          >\n                            {/* <H5 fontSize={5}>{\"heading\"}</H5> */}\n                            <H5 color=\"grey\" fontSize={3} fontWeight=\"normal\">\n                              {key.message}\n                            </H5>\n                            <H5\n                              color=\"grey\"\n                              fontSize={1}\n                              fontWeight=\"normal\"\n                              mb={0}\n                            >\n                              {key.received_at}\n                            </H5>\n                          </Box>\n                        ))\n                      ) : (\n                        <Box\n                          borderBottom=\"1px solid #e1e1e1\"\n                          py={4}\n                          bg={\"#80808017\"}\n                          pl={1}\n                          textAlign={\"left\"}\n                        >\n                          <H5 color=\"grey\" fontSize={3} fontWeight=\"normal\">\n                            {\"No Notifications\"}.\n                          </H5>\n                        </Box>\n                      )}\n                      {data?.length ? (\n                        <Button width={\"100%\"} mt={2} onClick={markAllHandler}>\n                          Mark All Read\n                        </Button>\n                      ) : null}\n                    </MotionBox>\n                  </MenuList>\n                </Menu>\n\n                <Menu>\n                  <Box\n                    style={{\n                      backgroundColor: \"#372e6c\",\n                      borderRadius: \"50px\",\n                      marginLeft: \"5px\",\n                    }}\n                  >\n                    <Box>\n                      <Box\n                        style={{\n                          borderRadius: \"50px\",\n                          boxShadow: \"rgb(10 10 10) 0px 2px 4px -1px\",\n                          background: \"#80808045\",\n                          height: \"40px\",\n                          width: \"40px\",\n                        }}\n                      >\n                        <Tooltip\n                          label=\"Profile & Help\"\n                          placement=\"top-start\"\n                          bg=\"#8071b399\"\n                        >\n                          <MenuButton\n                            style={{ color: \"#ffffff\", padding: \"8px\" }}\n                          >\n                            <Icon as={AiFillCaretDown} w={5} h={5} />\n                          </MenuButton>\n                        </Tooltip>\n                      </Box>\n                    </Box>\n                  </Box>\n\n                  <MenuList>\n                    <MenuGroup title={<Para>Profile</Para>}>\n                      <MenuItem>\n                        <Para>My Account</Para>\n                      </MenuItem>\n                      <MenuItem onClick={handleLogout}>\n                        <Para>Log out</Para>\n                      </MenuItem>\n                    </MenuGroup>\n                    <MenuDivider />\n                    <MenuGroup title={<Para>Help</Para>}>\n                      <MenuItem>\n                        <Para>Docs</Para>\n                      </MenuItem>\n                      <MenuItem>\n                        <Para>FAQ</Para>\n                      </MenuItem>\n                    </MenuGroup>\n                  </MenuList>\n                </Menu>\n              </Box>\n            </>\n          )}\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nfunction UserMenu() {\n  // const router = useRouter();\n  const [token, setToken] = useGlobal(\"token\");\n  // const queryCache = useQueryCache();\n\n  // const userProfile = useQuery(APIURLS.getUserDetails, {\n  //   enabled: !!token,\n  // });\n\n  // let user = userProfile?.data?.data?.user || {};\n\n  async function handleLogout() {\n    try {\n      localStorage.clear();\n      setToken(null);\n    } catch (error) {}\n  }\n\n  // useEffect(() => {\n  //   let userId = localStorage.getItem(\"userId\");\n  //   if (userId) {\n  //     connectToPusher(userId);\n  //   }\n  // }, []);\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={[\"column\", \"row\"]}\n      justifyContent=\"space-between\"\n      alignItems={[\"flex-end\", \"center\"]}\n      ml={[0]}\n    >\n      <Box>\n        <Trigger\n          action={[\"click\", \"focus\"]}\n          destroyPopupOnHide\n          popup={\n            <AdminProfile\n              // user={user}\n              handleLogout={handleLogout}\n            />\n          }\n          popupAlign={{\n            points: [\"tl\", \"tl\"],\n            // offset: [10, 3],\n          }}\n          alignPoint\n        >\n          <Icon as={FaUserAlt} />\n        </Trigger>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Header;\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Footer/Footer.js",["416","417","418","419","420","421","422"],"import React, { useEffect } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n} from \"../../styles\";\n\nexport default function Footer() {\n  const [token] = useGlobal(\"token\");\n\n  return (\n    <Box\n      gridColumn={2}\n      px={4}\n      display={[\"flex\"]}\n      flexDirection={[\"column\", \"row\"]}\n      justifyContent=\"space-between\"\n    >\n      <Box type=\"row\">Hello</Box>\n      <Box type=\"row\">Yo</Box>\n    </Box>\n  );\n}\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Signup/Signup.js",["423","424","425","426","427","428","429","430"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { MdEmail } from \"react-icons/md\";\nimport { RiLockPasswordFill } from \"react-icons/ri\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Signup = () => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [apiErr, setApiErr] = useState(null);\n\n  async function handleSignup(params) {\n    try {\n      //   setApiErr(null);\n      setLoading(true);\n      let { data } = await Api.post(APIURLS.signup, {\n        ...params,\n      });\n\n      //   let token = data?.data.user?.accessToken;\n      //   let userId = data?.data.user?.id;\n      //   localStorage.setItem(\"token\", token);\n      //   localStorage.setItem(\"userId\", userId);\n      //   setHeader(token);\n      //   setToken(token);\n      //   router.push(\"/onboarding\");\n      setLoading(false);\n      setSuccess(true);\n\n      console.log(\"data\", data);\n    } catch ({ response }) {\n      console.log(response);\n      //   setApiErr(response?.data?.message);\n      setLoading(false);\n    }\n    console.log(params);\n  }\n\n  return (\n    <>\n      <Box\n        style={{\n          height: \"100vh\",\n\n          backgroundColor: \"#382e6c\",\n        }}\n      >\n        <MotionBox\n          display=\"flex\"\n          initial={{ y: 50, opacity: 0 }}\n          animate={{\n            y: 0,\n            opacity: 1,\n          }}\n          style={{\n            height: \"100vh\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            backgroundColor: \"#382e6c\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            style={{\n              width: \"30%\",\n              // padding: \"50px\",\n              borderRadius: \"10px\",\n              boxShadow: \"#161617 0px 2px 4px -1px\",\n              backgroundColor: \"#ffffff\",\n            }}\n          >\n            {/* <Image src=\"doga_login.png\" width=\"80px\"></Image> */}\n            {success ? (\n              <MotionBox\n                mt={6}\n                initial={{ y: 50, opacity: 0 }}\n                animate={{\n                  y: 0,\n                  opacity: 1,\n                }}\n                transition={{ ease: \"easeOut\", duration: 0.3 }}\n                style={{ padding: \"50px\" }}\n              >\n                <H2 fontSize={6}>Account created successfully.</H2>\n                <NavLink to=\"/login\">\n                  {\" \"}\n                  <Button mt={4} width=\"100%\" fontSize={18}>\n                    Login\n                  </Button>\n                </NavLink>\n              </MotionBox>\n            ) : (\n              <>\n                <Box\n                  type=\"row\"\n                  alignItems=\"center\"\n                  width=\"100%\"\n                  style={{ padding: \"50px 30px 30px 50px\" }}\n                >\n                  <H2 color={\"#8071b3\"}>Create Account</H2>\n                </Box>\n                <Box style={{ padding: \"0px 50px 30px 50px\" }}>\n                  <form onSubmit={handleSubmit(handleSignup)}>\n                    <Label>Name</Label>\n                    <Box type=\"relative\">\n                      <Input\n                        name=\"name\"\n                        color=\"grey\"\n                        required\n                        fontSize={3}\n                        p={2}\n                        //   placeholder=\"\"\n                        width=\"100%\"\n                        ref={register}\n                        mb={2}\n                        inputType=\"auth\"\n                      />\n                      <Span type=\"icon\">\n                        <i>\n                          <Icon as={FaUserAlt} />\n                        </i>\n                      </Span>\n\n                      {errors?.name && (\n                        <Span color=\"orange\" mb={4}>\n                          {errors?.name?.message}\n                        </Span>\n                      )}\n                    </Box>\n                    <Label>Email</Label>\n                    <Box type=\"relative\">\n                      <Input\n                        name=\"email\"\n                        type=\"email\"\n                        color=\"grey\"\n                        required\n                        fontSize={3}\n                        p={2}\n                        //   placeholder=\"\"\n                        width=\"100%\"\n                        ref={register}\n                        mb={2}\n                        inputType=\"auth\"\n                      />\n                      <Span type=\"icon\">\n                        <i>\n                          <Icon as={MdEmail} w={5} h={6} />\n                        </i>\n                      </Span>\n\n                      {errors?.email && (\n                        <Span color=\"orange\" mb={4}>\n                          {errors?.email?.message}\n                        </Span>\n                      )}\n                    </Box>\n                    <Label>Password</Label>\n                    <Box type=\"relative\">\n                      <Input\n                        name=\"password\"\n                        type=\"password\"\n                        color=\"grey\"\n                        fontSize={3}\n                        required\n                        p={2}\n                        //   placeholder=\"\"\n                        ref={register}\n                        width=\"100%\"\n                        mb={2}\n                        inputType=\"auth\"\n                      />\n\n                      <Span type=\"icon\">\n                        <i>\n                          <Icon as={RiLockPasswordFill} w={5} h={6} />\n                        </i>\n                      </Span>\n\n                      {errors?.password && (\n                        <Span color=\"orange\" mb={4}>\n                          {errors?.password?.message}\n                        </Span>\n                      )}\n                    </Box>\n\n                    {apiErr && (\n                      <Span color=\"orange\" mb={4}>\n                        {apiErr}\n                      </Span>\n                    )}\n\n                    <Button mt={4} width=\"100%\" fontSize={18}>\n                      {loading ? (\n                        <ClipLoader color={\"#ffffff\"} size={25} />\n                      ) : (\n                        \"Sign up\"\n                      )}\n                    </Button>\n                  </form>\n                </Box>\n                <Box\n                  type=\"row-reverse\"\n                  width=\"100%\"\n                  style={{\n                    padding: \"30px 0px 30px 0px\",\n\n                    backgroundColor: \"#f5f5f5\",\n                    borderTop: \"1px solid #ddd\",\n                    textAlign: \"center\",\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Span>\n                    {\"Already have an account?      \"}\n                    <NavLink to={`/login`}>\n                      {\" \"}\n                      <Span color=\"#8071b3\" style={{ cursor: \"pointer\" }}>\n                        {\" \"}\n                        Log In\n                      </Span>{\" \"}\n                    </NavLink>\n                  </Span>\n                </Box>\n              </>\n            )}\n          </Box>\n        </MotionBox>\n      </Box>\n    </>\n  );\n};\n\nexport default Signup;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Login/Login.js",["431","432","433","434","435","436","437","438","439"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { MdEmail } from \"react-icons/md\";\nimport { RiLockPasswordFill } from \"react-icons/ri\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\n\nconst Login = () => {\n  // const router = useRouter();\n  const [token, setToken] = useGlobal(\"token\");\n  // const [, setForgotPassword] = useGlobal(\"forgotPassword\");\n  // const [oldVersionModal, setOldVersionModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [apiErr, setApiErr] = useState(null);\n  // const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const toast = createStandaloneToast();\n  let authRedirect = null;\n  if (token) {\n    authRedirect = <Redirect to=\"/dashboard\" />;\n  }\n\n  // useEffect(() => {\n  //   // router.prefetch(\"/dashboard\");\n  // }, []);\n\n  async function handleSignup(params) {\n    try {\n      setApiErr(null);\n      setLoading(true);\n      let { data } = await Api.post(APIURLS.login, params);\n      // let version = data?.data.version;\n\n      let token = data?.access_token;\n      let userId = data?.id;\n      let userEmail = data?.email;\n      let userName = data?.name;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"userId\", userId);\n      localStorage.setItem(\"userEmail\", userEmail);\n      localStorage.setItem(\"userName\", userName);\n      setHeader(token);\n      setToken(token);\n      toast({\n        title: \"Login Successful\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      setLoading(false);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      setApiErr(response?.result);\n      setLoading(false);\n    }\n  }\n\n  return (\n    <>\n      {authRedirect}\n      <Box\n        style={{\n          height: \"100vh\",\n\n          backgroundColor: \"#382e6c\",\n        }}\n      >\n        <MotionBox\n          display=\"flex\"\n          initial={{ y: 50, opacity: 0 }}\n          animate={{\n            y: 0,\n            opacity: 1,\n          }}\n          style={{\n            height: \"100vh\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            backgroundColor: \"#382e6c\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            style={{\n              width: \"30%\",\n              // padding: \"50px\",\n              borderRadius: \"10px\",\n              boxShadow: \"#161617 0px 2px 4px -1px\",\n              backgroundColor: \"#ffffff\",\n            }}\n          >\n            <Box\n              type=\"row\"\n              alignItems=\"center\"\n              width=\"100%\"\n              style={{ padding: \"50px 30px 30px 50px\" }}\n            >\n              <H2 color={\"#8071b3\"}>Login</H2>\n            </Box>\n\n            <Box style={{ padding: \"0px 50px 30px 50px\" }}>\n              <form onSubmit={handleSubmit(handleSignup)}>\n                <Label>Email</Label>\n                <Box type=\"relative\">\n                  <Input\n                    name=\"email\"\n                    type=\"email\"\n                    color=\"grey\"\n                    required\n                    fontSize={3}\n                    p={2}\n                    //   placeholder=\"\"\n                    width=\"100%\"\n                    ref={register}\n                    mb={2}\n                    inputType=\"auth\"\n                  />\n                  <Span type=\"icon\">\n                    <i>\n                      <Icon as={MdEmail} w={5} h={6} />\n                    </i>\n                  </Span>\n\n                  {errors?.email && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.email?.message}\n                    </Span>\n                  )}\n                </Box>\n                <Label>Password</Label>\n                <Box type=\"relative\">\n                  <Input\n                    name=\"password\"\n                    type=\"password\"\n                    color=\"grey\"\n                    fontSize={3}\n                    required\n                    p={2}\n                    //   placeholder=\"\"\n                    ref={register}\n                    width=\"100%\"\n                    mb={2}\n                    inputType=\"auth\"\n                  />\n\n                  <Span type=\"icon\">\n                    <i>\n                      <Icon as={RiLockPasswordFill} w={5} h={6} />\n                    </i>\n                  </Span>\n\n                  {errors?.password && (\n                    <Span color=\"#8071b3\" mb={4}>\n                      {errors?.password?.message}\n                    </Span>\n                  )}\n                </Box>\n\n                {apiErr && (\n                  <Span color=\"#8071b3\" mb={4}>\n                    {apiErr}\n                  </Span>\n                )}\n\n                <Button mt={4} width=\"100%\" fontSize={18}>\n                  {loading ? (\n                    <ClipLoader color={\"#ffffff\"} size={25} />\n                  ) : (\n                    \"Login\"\n                  )}\n                </Button>\n              </form>\n            </Box>\n            <Box\n              type=\"row-reverse\"\n              width=\"100%\"\n              style={{\n                padding: \"30px 0px 30px 0px\",\n\n                backgroundColor: \"#f5f5f5\",\n                borderTop: \"1px solid #ddd\",\n                textAlign: \"center\",\n                borderRadius: \"10px\",\n              }}\n            >\n              <Span>\n                {\"New to Doga?               \"}\n                <NavLink to={`/signup`}>\n                  {\" \"}\n                  <Span color=\"#8071b3\" style={{ cursor: \"pointer\" }}>\n                    {\" \"}\n                    Sign Up\n                  </Span>{\" \"}\n                </NavLink>\n              </Span>\n            </Box>\n          </Box>\n        </MotionBox>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Header/AdminProfile.js",["440"],"import { MotionBox, Box, Button, Span, StyledLink } from \"../../styles\";\n// import Link from \"next/link\";\n\nconst AdminProfile = (user, handleLogout) => {\n  return (\n    <MotionBox\n      key={2}\n      bg=\"white\"\n      boxShadow=\"invisionHover\"\n      width=\"fit-content\"\n      initial={{ y: -50, opacity: 0 }}\n      animate={{\n        y: 0,\n        opacity: 1,\n      }}\n      p={4}\n      type=\"column\"\n    >\n      <Span color=\"blue\" fontSize={6} mb={2}>\n        {\"Nishant\"}\n      </Span>\n      {/* <Span>{user?.email}</Span> */}\n      <Box my={4} borderBottom=\"4px solid\" borderColor=\"orange\"></Box>\n      {/* <Link href=\"/dashboard\">\n        <StyledLink mt={4}>Dashboard</StyledLink>\n      </Link> */}\n\n      {/* <Link href=\"/account\">\n        <StyledLink mt={4}>Account</StyledLink>\n      </Link> */}\n      {/* {!isAdmin && (\n        <Link href=\"http://help.lessonbee.com/en/\">\n          <StyledLink mt={4} href=\"http://help.lessonbee.com/en/\">\n            Help\n          </StyledLink>\n        </Link>\n      )} */}\n\n      <Button type=\"link\" onClick={handleLogout} fontSize={5} mt={4}>\n        Logout\n      </Button>\n    </MotionBox>\n  );\n};\n\nexport default AdminProfile;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Dashboard/Dashboard.js",["441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n  H5,\n  Para,\n} from \"../../styles\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaUserAlt, FaDatabase } from \"react-icons/fa\";\nimport { FcAcceptDatabase } from \"react-icons/fc\";\nimport { IoAppsSharp } from \"react-icons/io5\";\nimport { SiAmazonaws } from \"react-icons/si\";\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport CreateDatabase from \"../CreateDatabase/CreateDatabase\";\nimport Application from \"../Application/Application\";\nimport AwsDeploy from \"../../components/Modal/AwsDeploy\";\nimport { useIsFetching } from \"react-query\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Dashboard = () => {\n  const queryClient = useQueryClient();\n\n  // const appsCreated = useQuery(APIURLS.dashboardInfo(app, all));\n  const appsCreated = useQuery(APIURLS.appInfo(\"app\"));\n\n  const dbConnections = useQuery(APIURLS.getDbConnections);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [openModal, setOpenModal] = useState();\n  const openModalHandler = (key) => {\n    setOpenModal(key);\n    onOpen();\n  };\n  const isFetching = useIsFetching();\n  const isFetchingApps = useIsFetching([APIURLS.getContentType]);\n  console.log(\"CONTETN\", isFetchingApps);\n  return appsCreated?.isLoading ||\n    dbConnections?.isLoading ||\n    isFetchingApps > 0 ? (\n    <>\n      {\" \"}\n      <Box type=\"loader\">\n        <ClipLoader color={\"#ffffff\"} size={55} />\n      </Box>{\" \"}\n    </>\n  ) : (\n    <>\n      <Box\n        boxShadow=\"card\"\n        p={2}\n        backgroundColor=\"white\"\n        // height=\"250px\"\n        style={{ margin: \"50px\" }}\n      >\n        <Box style={{ margin: \"25px\" }}>\n          <H2 type=\"centerBorder\" color={\"#6E798C\"}>\n            {\" \"}\n            Hi {localStorage.getItem(\"userName\")}!\n          </H2>\n          <Para mt={4}>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n          </Para>\n          <Box type=\"row\" style={{ marginTop: \"55px\" }}>\n            <NavLink to={`/create-new-app`}>\n              {\" \"}\n              <Button width=\"235px\">Create A New APP</Button>\n            </NavLink>\n\n            <NavLink to={`/deploy/aws`}>\n              <Button width=\"195px\">Deploy On AWS</Button>\n            </NavLink>\n            <NavLink to={`/deploy/heroku`}>\n              <Button width=\"195px\">Deploy On Heroku</Button>\n            </NavLink>\n            <NavLink to={`/plugin/sendgrid`}>\n              <Button width=\"195px\">Sendgrid</Button>\n            </NavLink>\n            <NavLink to={`/plugin/twilio`}>\n              <Button width=\"195px\">Twilio</Button>\n            </NavLink>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/CreateDatabase/CreateDatabase.js",["470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport { useQueryClient, useQuery } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst CreateDatabase = ({ edit, setStep, appName }) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [apiErr, setApiErr] = useState(null);\n  const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n  const [dbType, setDbType] = useState();\n\n  const { data, isLoading } = useQuery(APIURLS.getDbDefaults);\n  console.log(data);\n  async function handleSignup(params) {\n    setLoading(true);\n    try {\n      let { data } = edit\n        ? await Api.put(APIURLS.createDB, {\n            ...params,\n            database_type: dbType,\n          })\n        : await Api.post(APIURLS.createDB, {\n            ...params,\n            database_type: dbType,\n          });\n      await queryClient.refetchQueries([APIURLS.getDbConnections]);\n      console.log(params.database_name);\n      //   setSuccess(true);\n\n      toast({\n        title: \"Database created successfully.\",\n        // description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      // onClose();\n      setLoading(false);\n      setStep(3);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        // description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n      //   setApiErr(response?.data?.message);\n      setLoading(false);\n    }\n\n    console.log(params);\n  }\n\n  return loading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">Congif Databse for your App </Span>\n        {/* <Box my={2} borderBottom=\"4px solid\" borderColor=\"orange\"></Box> */}\n      </Box>\n      <Box p={\"300px\"} pt={\"50px\"}>\n        <form onSubmit={handleSubmit(handleSignup)}>\n          <Label>Database/App Name</Label>\n          <Box type=\"relative\">\n            <Input\n              name=\"database_name\"\n              color=\"grey\"\n              required\n              fontSize={3}\n              p={2}\n              defaultValue={edit ? edit.database_name : appName}\n              width=\"100%\"\n              ref={register}\n              mb={2}\n            />\n\n            {errors?.name && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.name?.message}\n              </Span>\n            )}\n          </Box>\n          {/* <Label>Database Type</Label>\n          <Box type=\"relative\">\n            <Input\n              name=\"database_type\"\n              color=\"grey\"\n              required\n              fontSize={3}\n              p={2}\n              defaultValue={edit ? edit.database_type : null}\n              width=\"100%\"\n              ref={register}\n              mb={2}\n            />\n\n            {errors?.email && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.email?.message}\n              </Span>\n            )}\n          </Box> */}\n          <Label>Database Type</Label>\n          <Box\n            style={{\n              marginBottom: \"1.5rem\",\n              color: \"#6E798C\",\n              fontSize: \"1.25rem\",\n              paddingTop: \"10px\",\n            }}\n          >\n            <Select\n              key={1}\n              onChange={({ value }) => setDbType(value)}\n              required\n              theme={CARD_ELEMENT_OPTIONS}\n              placeholder=\"database_type\"\n              options={[\n                {\n                  value: \"mysql\",\n                  label: \"mysql\",\n                },\n                {\n                  value: \"sqlite\",\n                  label: \"sqlite\",\n                },\n                {\n                  value: \"postgres\",\n                  label: \"postgres\",\n                },\n              ]}\n            />\n          </Box>\n          <Label>Host</Label>\n          <Box type=\"relative\">\n            <Input\n              name=\"host\"\n              color=\"grey\"\n              fontSize={3}\n              required\n              p={2}\n              defaultValue={edit ? edit.host : data?.host[dbType]}\n              ref={register}\n              width=\"100%\"\n              mb={2}\n            />\n\n            {errors?.password && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.password?.message}\n              </Span>\n            )}\n          </Box>\n          <Label>Port</Label>\n          <Box type=\"relative\">\n            <Input\n              name=\"port\"\n              color=\"grey\"\n              fontSize={3}\n              required\n              p={2}\n              defaultValue={edit ? edit.port : data?.port[dbType]}\n              ref={register}\n              width=\"100%\"\n              mb={2}\n            />\n\n            {errors?.password && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.password?.message}\n              </Span>\n            )}\n          </Box>\n          <Label>Username</Label>\n          <Box type=\"relative\">\n            <Input\n              name=\"username\"\n              color=\"grey\"\n              fontSize={3}\n              required\n              p={2}\n              defaultValue={edit ? edit.username : null}\n              ref={register}\n              width=\"100%\"\n              mb={2}\n            />\n\n            {errors?.password && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.password?.message}\n              </Span>\n            )}\n          </Box>\n          <Label>Password</Label>\n          <Box type=\"relative\">\n            <Input\n              name=\"password\"\n              type=\"password\"\n              color=\"grey\"\n              fontSize={3}\n              // required\n              p={2}\n              defaultValue={\"\"}\n              ref={register}\n              width=\"100%\"\n              mb={2}\n            />\n\n            {errors?.password && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.password?.message}\n              </Span>\n            )}\n          </Box>\n\n          {apiErr && (\n            <Span color=\"orange\" mb={4}>\n              {apiErr}\n            </Span>\n          )}\n          {/* <LButton\n                label=\"SIGN UP\"\n                type=\"submit\"\n                type=\"primary\"\n                width=\"100%\"\n                mt={4}\n                loading={loading}\n              /> */}\n          <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n            {edit ? \"Update\" : \"Create\"}\n          </Button>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default CreateDatabase;\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Sidebar/Sidebar.js",["493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516"],"import React, { useEffect } from \"react\";\nimport { useGlobal } from \"reactn\";\n\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaUserAlt, FaServer, FaDatabase } from \"react-icons/fa\";\nimport { IoAppsSharp } from \"react-icons/io5\";\nimport { AiFillHome, AiFillCaretDown } from \"react-icons/ai\";\nimport { GrMysql } from \"react-icons/gr\";\nimport { SiPostgresql } from \"react-icons/si\";\nimport { NavLink } from \"react-router-dom\";\nimport { Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { Avatar, AvatarBadge } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useLocation } from \"react-router-dom\";\nimport { BsAppIndicator, BsTable } from \"react-icons/bs\";\nimport { MdEmail, MdTextsms } from \"react-icons/md\";\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\nimport { SiMinutemailer } from \"react-icons/si\";\nimport { IoRocketSharp } from \"react-icons/io5\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  H1,\n  H2,\n  H5,\n  MotionBox,\n  Para,\n} from \"../../styles\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { margin, marginTop } from \"styled-system\";\nimport Api, { APIURLS } from \"../../Api\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nfunction PlacementExample(props) {\n  const [token] = useGlobal(\"token\");\n\n  const [dropMenu, setDropMenu] = React.useState([]);\n  const [deployMenu, setDeployMenu] = React.useState(false);\n  const [pluginsMenu, setPluginsMenu] = React.useState(false);\n  const [showDbOptions, setShowDbOptions] = React.useState(false);\n  const location = useLocation();\n  const { data, isLoading } = useQuery([APIURLS.getContentType], {\n    enabled: !!token,\n  });\n  console.log(data);\n  const showDbOptionsHandler = () => {\n    setShowDbOptions(!showDbOptions);\n  };\n  const dropMenuHandler = (appName) => {\n    let newDropMenuArray = [...dropMenu];\n    newDropMenuArray.push(appName);\n    setDropMenu(newDropMenuArray);\n  };\n  const RemovedropMenuHandler = (appName) => {\n    const newDropMenuArray = dropMenu.filter((index) => index != appName);\n    setDropMenu(newDropMenuArray);\n  };\n  console.log(dropMenu, \"drop\");\n  let contentTypeApps = null;\n  if (data) {\n    const formElementsArray = [];\n    if (data?.result === \"No apps and content created yet.\") {\n    } else {\n      for (let key in data) {\n        formElementsArray.push({\n          app_name: key,\n          tables: data[key],\n        });\n      }\n    }\n\n    // console.log(formElementsArray);\n    console.log(\"appssss\");\n    contentTypeApps = Object.entries(formElementsArray).map(\n      ([index, value]) => {\n        // console.log(prop, val);\n        return (\n          <>\n            <Box\n              type=\"row\"\n              justifyContent=\"space-between\"\n              style={{\n                paddingLeft: \"10px\",\n                height: \"45px\",\n                margin: \"5px\",\n                boxShadow:\n                  location.pathname === `/application/${value.app_name}`\n                    ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                    : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n                background:\n                  location.pathname === `/application/${value.app_name}`\n                    ? \"#80808045\"\n                    : \"none\",\n                borderRadius:\n                  location.pathname === `/application/${value.app_name}`\n                    ? \"10px\"\n                    : \"0px\",\n              }}\n            >\n              <NavLink to={`/application/${value.app_name}`}>\n                <Box type=\"row\" justifyContent=\"start\">\n                  <i\n                    style={{\n                      marginRight: \"5px\",\n                    }}\n                  >\n                    <Icon\n                      as={IoAppsSharp}\n                      w={5}\n                      h={5}\n                      mr={3}\n                      mb={1}\n                      color={\n                        // location.pathname === `/application/${value.app_name}`\n                        //   ? \"#4B0082\"\n                        //   : \"#6E798C\"\n                        \"#ffffff\"\n                      }\n                      // onClick={() => dropMenuHandler(index)}\n                    />\n                  </i>\n\n                  <Para\n                    style={{\n                      fontWeight: \"500\",\n                      lineHeight: \"none\",\n\n                      whiteSpace: \"nowrap\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                    }}\n                    // color={\n                    //   location.pathname === `/application/${value.app_name}`\n                    //     ? \"#4B0082\"\n                    //     : \"#6E798C\"\n                    // }\n                    color={\n                      // location.pathname === `/application/${value.app_name}`\n                      //   ? \"#4B0082\"\n                      //   : \"#6E798C\"\n                      \"#ffffff\"\n                    }\n                  >\n                    {value.app_name}\n                  </Para>\n                </Box>\n              </NavLink>\n              <Box>\n                <i\n                  style={{\n                    marginRight: \"5px\",\n                  }}\n                >\n                  {dropMenu.includes(index) ? (\n                    <Icon\n                      as={AiOutlineCaretUp}\n                      w={3}\n                      h={3}\n                      mr={3}\n                      mb={1}\n                      style={{ cursor: \"pointer\" }}\n                      // color={\n                      //   location.pathname === `/application/${value.app_name}`\n                      //     ? \"#4B0082\"\n                      //     : \"#6E798C\"\n                      // }\n                      color={\n                        // location.pathname === `/application/${value.app_name}`\n                        //   ? \"#4B0082\"\n                        //   : \"#6E798C\"\n                        \"#ffffff\"\n                      }\n                      onClick={() => RemovedropMenuHandler(index)}\n                    />\n                  ) : (\n                    <Icon\n                      as={AiOutlineCaretDown}\n                      w={3}\n                      h={3}\n                      mr={3}\n                      mb={1}\n                      style={{ cursor: \"pointer\" }}\n                      // color={\n                      //   location.pathname === `/application/${value.app_name}`\n                      //     ? \"#4B0082\"\n                      //     : \"#6E798C\"\n                      // }\n                      color={\n                        // location.pathname === `/application/${value.app_name}`\n                        //   ? \"#4B0082\"\n                        //   : \"#6E798C\"\n                        \"#ffffff\"\n                      }\n                      onClick={() => dropMenuHandler(index)}\n                    />\n                  )}\n                </i>\n              </Box>\n            </Box>\n            {Object.entries(value.tables).map(([prop, val]) => {\n              if (prop === \"jwt_info\") return true;\n              return dropMenu.includes(index) ? (\n                <NavLink to={`/application/${value.app_name}/${prop}`}>\n                  <MotionBox\n                    transition={{ ease: \"easeOut\", duration: 0.3 }}\n                    // whileHover={{\n                    //   boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n                    // }}\n                    initial={{ y: -50, opacity: 0 }}\n                    animate={{\n                      y: 0,\n                      opacity: 1,\n                    }}\n                  >\n                    <Box\n                      type=\"row\"\n                      style={{\n                        paddingLeft: \"30px\",\n                        height: \"35px\",\n                        margin: \"5px\",\n                        boxShadow:\n                          location.pathname ===\n                          `/application/${value.app_name}/${prop}`\n                            ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                            : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n                        background:\n                          location.pathname ===\n                          `/application/${value.app_name}/${prop}`\n                            ? \"#80808045\"\n                            : \"none\",\n                        borderRadius:\n                          location.pathname ===\n                          `/application/${value.app_name}/${prop}`\n                            ? \"10px\"\n                            : \"0px\",\n                      }}\n                      justifyContent=\"start\"\n                    >\n                      <i\n                        style={{\n                          marginRight: \"5px\",\n                        }}\n                      >\n                        <Icon\n                          as={BsTable}\n                          w={4}\n                          h={4}\n                          mr={3}\n                          mb={1}\n                          // color={\"#6E798C\"}\n                          color={\n                            // location.pathname ===\n                            // `/application/${value.app_name}/${prop}`\n                            //   ? \"#4B0082\"\n                            //   : \"#6E798C\"\n                            \"#ffffff\"\n                          }\n                        />\n                      </i>\n\n                      <Para\n                        style={{\n                          fontWeight: \"500\",\n                          lineHeight: \"none\",\n\n                          whiteSpace: \"nowrap\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                        }}\n                        color={\n                          // location.pathname ===\n                          // `/application/${value.app_name}/${prop}`\n                          //   ? \"#4B0082\"\n                          //   : \"#6E798C\"\n                          \"#ffffff\"\n                        }\n                      >\n                        {prop}\n                      </Para>\n                    </Box>\n                  </MotionBox>\n                </NavLink>\n              ) : null;\n            })}\n          </>\n        );\n      }\n    );\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <Box type=\"loader\">\n          <ClipLoader color={\"#ffffff\"} size={55} />\n        </Box>\n      ) : null}\n      <Box\n        type=\"column\"\n        style={{ overflowX: \"scroll\", backgroundColor: \"#372e6c\" }}\n      >\n        <Box\n          display=\"grid\"\n          gridTemplateColumns={\"1fr 3fr\"}\n          gridGap={\"0px\"}\n          style={{\n            paddingLeft: \"5px\",\n            height: \"60px\",\n            margin: \"30px 15px 20px 0px\",\n          }}\n        >\n          <i\n            style={{\n              borderRadius: \"50px\",\n              boxShadow: \"rgb(10 10 10) 0px 2px 4px -1px\",\n              background: \"#80808045\",\n              height: \"50px\",\n            }}\n          >\n            <Image\n              src=\"/maleLogo.png\"\n              style={{ height: \"50px\", padding: \"5px\" }}\n            ></Image>\n          </i>\n          <Box type=\"column\" ml={\"5px\"} pt={\"10px\"}>\n            <Para\n              style={{\n                fontWeight: \"700\",\n                lineHeight: \"normal\",\n                color: \"#ffffff\",\n\n                // location.pathname === \"/dashboard\" ? \"#4B0082\" : \"#6E798C\",\n              }}\n            >\n              {localStorage.getItem(\"userName\")}\n            </Para>\n            <Para\n              style={{\n                fontWeight: \"400\",\n                lineHeight: \"normal\",\n                color: \"#gray\",\n\n                // location.pathname === \"/dashboard\" ? \"#4B0082\" : \"#6E798C\",\n              }}\n            >\n              {localStorage.getItem(\"userEmail\")}\n            </Para>\n          </Box>\n        </Box>\n        <Box\n          type=\"row\"\n          style={{\n            paddingLeft: \"10px\",\n            marginLeft: \"5px\",\n            // height: \"45px\",\n            // margin: \"5px\",\n          }}\n          justifyContent=\"start\"\n        >\n          <Para\n            style={{\n              fontWeight: \"500\",\n              lineHeight: \"none\",\n              color:\n                // location.pathname === \"/application\" ? \"#4B0082\" : \"#6E798C\",\n                \"#6E798C\",\n            }}\n          >\n            Menu\n          </Para>\n        </Box>\n        <NavLink to=\"/dashboard\">\n          {\" \"}\n          <Box\n            type=\"row\"\n            style={{\n              paddingLeft: \"10px\",\n              height: \"45px\",\n              margin: \"5px\",\n              boxShadow:\n                location.pathname === \"/dashboard\"\n                  ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                  : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n              background:\n                location.pathname === \"/dashboard\" ? \"#80808045\" : \"none\",\n              borderRadius: location.pathname === \"/dashboard\" ? \"10px\" : \"0px\",\n            }}\n            justifyContent=\"start\"\n          >\n            <i\n              style={{\n                minWidth: \"14px\",\n                marginRight: \"5px\",\n              }}\n            >\n              <Icon\n                as={AiFillHome}\n                w={5}\n                h={5}\n                mr={3}\n                mb={1}\n                color={\"#ffffff\"}\n              />\n            </i>\n\n            <Para\n              style={{\n                fontWeight: \"500\",\n                lineHeight: \"none\",\n                color: \"#ffffff\",\n              }}\n            >\n              Dashboard\n            </Para>\n          </Box>\n        </NavLink>\n        <NavLink to=\"/database\">\n          <Box\n            type=\"row\"\n            style={{\n              paddingLeft: \"10px\",\n              height: \"45px\",\n              margin: \"5px\",\n              boxShadow:\n                location.pathname === \"/database\"\n                  ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                  : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n              background:\n                location.pathname === \"/database\" ? \"#80808045\" : \"none\",\n              borderRadius: location.pathname === \"/database\" ? \"10px\" : \"0px\",\n              // \"&:hover\": {\n              //   boxShadow: \"rgb(10 10 10) 0px 2px 4px -1px\",\n              //   background: \"#80808045\",\n              //   borderRadius: \"10px\",\n              // },\n            }}\n            justifyContent=\"start\"\n          >\n            <i\n              style={{\n                minWidth: \"14px\",\n                marginRight: \"5px\",\n              }}\n            >\n              <Icon\n                as={FaDatabase}\n                w={5}\n                h={5}\n                mr={3}\n                mb={1}\n                color={\n                  // location.pathname === \"/database\" ? \"#4B0082\" : \"#6E798C\"\n                  \"#ffffff\"\n                }\n              />\n            </i>\n\n            <Para\n              style={{\n                fontWeight: \"500\",\n                lineHeight: \"none\",\n                // color:\n                //   location.pathname === \"/database\" ? \"#4B0082\" : \"#6E798C\",\n                color: \"#ffffff\",\n              }}\n            >\n              Database\n            </Para>\n          </Box>\n        </NavLink>\n\n        <Box\n          type=\"row\"\n          style={{\n            paddingLeft: \"10px\",\n            height: \"45px\",\n            margin: \"5px\",\n            boxShadow:\n              location.pathname === \"/deploy\"\n                ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n            background: location.pathname === \"/deploy\" ? \"#80808045\" : \"none\",\n            borderRadius: location.pathname === \"/deploy\" ? \"10px\" : \"0px\",\n          }}\n          justifyContent=\"space-between\"\n          onClick={() => setDeployMenu(!deployMenu)}\n        >\n          <Box type=\"row\">\n            <i\n              style={{\n                minWidth: \"14px\",\n                marginRight: \"5px\",\n              }}\n            >\n              <Icon\n                as={IoRocketSharp}\n                w={5}\n                h={5}\n                mr={3}\n                mb={1}\n                color={\n                  // location.pathname === \"/deploy\" ? \"#4B0082\" : \"#6E798C\"\n                  \"#ffffff\"\n                }\n              />\n            </i>\n\n            <Para\n              style={{\n                fontWeight: \"500\",\n                lineHeight: \"none\",\n                // color:\n                //   location.pathname === \"/deploy\" ? \"#4B0082\" : \"#6E798C\",\n                color: \"#ffffff\",\n              }}\n            >\n              Deploy\n            </Para>\n          </Box>\n\n          <Box>\n            <i\n              style={{\n                marginRight: \"5px\",\n              }}\n            >\n              {deployMenu ? (\n                <Icon\n                  as={AiOutlineCaretUp}\n                  w={3}\n                  h={3}\n                  mr={3}\n                  mb={1}\n                  color={\"#ffffff\"}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setDeployMenu(!deployMenu)}\n                />\n              ) : (\n                <Icon\n                  as={AiOutlineCaretDown}\n                  w={3}\n                  h={3}\n                  mr={3}\n                  mb={1}\n                  color={\"#ffffff\"}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setDeployMenu(!deployMenu)}\n                />\n              )}\n            </i>\n          </Box>\n        </Box>\n        {deployMenu ? (\n          <MotionBox\n            transition={{ ease: \"easeOut\", duration: 0.3 }}\n            // whileHover={{\n            //   boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n            // }}\n            initial={{ y: -50, opacity: 0 }}\n            animate={{\n              y: 0,\n              opacity: 1,\n            }}\n          >\n            <NavLink to=\"/deploy/aws\">\n              <Box\n                type=\"row\"\n                style={{\n                  paddingLeft: \"30px\",\n                  height: \"35px\",\n                  margin: \"5px\",\n                  boxShadow:\n                    location.pathname === \"/deploy/aws\"\n                      ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                      : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n                  background:\n                    location.pathname === \"/deploy/aws\" ? \"#80808045\" : \"none\",\n                  borderRadius:\n                    location.pathname === \"/deploy/aws\" ? \"10px\" : \"0px\",\n                  cursor: \"pointer\",\n                }}\n                justifyContent=\"start\"\n              >\n                <i\n                  style={{\n                    marginRight: \"5px\",\n                  }}\n                >\n                  <Icon\n                    as={SiAmazonaws}\n                    w={5}\n                    h={5}\n                    mr={3}\n                    mb={1}\n                    // color={\"#6E798C\"}\n                    color={\"#ffffff\"}\n                  />\n                </i>\n\n                <Para\n                  style={{\n                    fontWeight: \"500\",\n                    lineHeight: \"none\",\n\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                  }}\n                  color={\"#ffffff\"}\n                >\n                  {\"AWS\"}\n                </Para>\n              </Box>\n            </NavLink>\n            <NavLink to=\"/deploy/heroku\">\n              <Box\n                type=\"row\"\n                style={{\n                  paddingLeft: \"30px\",\n                  height: \"35px\",\n                  margin: \"5px\",\n                  boxShadow:\n                    location.pathname === \"/deploy/heroku\"\n                      ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                      : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n                  background:\n                    location.pathname === \"/deploy/heroku\"\n                      ? \"#80808045\"\n                      : \"none\",\n                  borderRadius:\n                    location.pathname === \"/deploy/heroku\" ? \"10px\" : \"0px\",\n                }}\n                justifyContent=\"start\"\n              >\n                <i\n                  style={{\n                    marginRight: \"5px\",\n                  }}\n                >\n                  <Icon\n                    as={SiHeroku}\n                    w={5}\n                    h={5}\n                    mr={3}\n                    mb={1}\n                    // color={\"#6E798C\"}\n                    color={\"#ffffff\"}\n                  />\n                </i>\n\n                <Para\n                  style={{\n                    fontWeight: \"500\",\n                    lineHeight: \"none\",\n\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                  }}\n                  color={\"#ffffff\"}\n                >\n                  {\"Heroku\"}\n                </Para>\n              </Box>\n            </NavLink>\n          </MotionBox>\n        ) : null}\n\n        <Box\n          type=\"row\"\n          style={{\n            paddingLeft: \"10px\",\n            height: \"45px\",\n            margin: \"5px\",\n            boxShadow:\n              location.pathname === \"/notify\"\n                ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n            background: location.pathname === \"/notify\" ? \"#80808045\" : \"none\",\n            borderRadius: location.pathname === \"/notify\" ? \"10px\" : \"0px\",\n            cursor: \"pointer\",\n          }}\n          justifyContent=\"space-between\"\n          onClick={() => setPluginsMenu(!pluginsMenu)}\n        >\n          <Box type=\"row\">\n            <i\n              style={{\n                minWidth: \"14px\",\n                marginRight: \"5px\",\n              }}\n            >\n              <Icon\n                as={SiMinutemailer}\n                w={5}\n                h={5}\n                mr={3}\n                mb={1}\n                color={\n                  // location.pathname === \"/notify\" ? \"#4B0082\" : \"#6E798C\"\n                  \"#ffffff\"\n                }\n              />\n            </i>\n\n            <Para\n              style={{\n                fontWeight: \"500\",\n                lineHeight: \"none\",\n                // color:\n                //   location.pathname === \"/notify\" ? \"#4B0082\" : \"#6E798C\",\n                color: \"#ffffff\",\n              }}\n            >\n              Plugins\n            </Para>\n          </Box>\n\n          <Box>\n            <i\n              style={{\n                marginRight: \"5px\",\n              }}\n            >\n              {pluginsMenu ? (\n                <Icon\n                  as={AiOutlineCaretUp}\n                  w={3}\n                  h={3}\n                  mr={3}\n                  mb={1}\n                  color={\"#ffffff\"}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setPluginsMenu(!pluginsMenu)}\n                />\n              ) : (\n                <Icon\n                  as={AiOutlineCaretDown}\n                  w={3}\n                  h={3}\n                  mr={3}\n                  mb={1}\n                  color={\"#ffffff\"}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setPluginsMenu(!pluginsMenu)}\n                />\n              )}\n            </i>\n          </Box>\n        </Box>\n        {pluginsMenu ? (\n          <MotionBox\n            transition={{ ease: \"easeOut\", duration: 0.3 }}\n            // whileHover={{\n            //   boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n            // }}\n            initial={{ y: -50, opacity: 0 }}\n            animate={{\n              y: 0,\n              opacity: 1,\n            }}\n          >\n            <NavLink to=\"/plugin/sendgrid\">\n              <Box\n                type=\"row\"\n                style={{\n                  paddingLeft: \"30px\",\n                  height: \"35px\",\n                  margin: \"5px\",\n                  boxShadow:\n                    location.pathname === \"/plugin/sendgrid\"\n                      ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                      : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n                  background:\n                    location.pathname === \"/plugin/sendgrid\"\n                      ? \"#80808045\"\n                      : \"none\",\n                  borderRadius:\n                    location.pathname === \"/plugin/sendgrid\" ? \"10px\" : \"0px\",\n                }}\n                justifyContent=\"start\"\n              >\n                <i\n                  style={{\n                    marginRight: \"5px\",\n                  }}\n                >\n                  <Icon\n                    as={MdEmail}\n                    w={5}\n                    h={5}\n                    mr={3}\n                    mb={1}\n                    // color={\"#6E798C\"}\n                    color={\"#ffffff\"}\n                  />\n                </i>\n\n                <Para\n                  style={{\n                    fontWeight: \"500\",\n                    lineHeight: \"none\",\n\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                  }}\n                  color={\"#ffffff\"}\n                >\n                  {\"Sendgrid\"}\n                </Para>\n              </Box>\n            </NavLink>\n            <NavLink to=\"/plugin/Twilio\">\n              <Box\n                type=\"row\"\n                style={{\n                  paddingLeft: \"30px\",\n                  height: \"35px\",\n                  margin: \"5px\",\n                  boxShadow:\n                    location.pathname === \"/plugin/Twilio\"\n                      ? \"rgb(10 10 10) 0px 2px 4px -1px\"\n                      : \"rgb(0 0 0 / 7%) 0px 2px 4px 0px\",\n                  background:\n                    location.pathname === \"/plugin/Twilio\"\n                      ? \"#80808045\"\n                      : \"none\",\n                  borderRadius:\n                    location.pathname === \"/plugin/Twilio\" ? \"10px\" : \"0px\",\n                }}\n                justifyContent=\"start\"\n              >\n                <i\n                  style={{\n                    marginRight: \"5px\",\n                  }}\n                >\n                  <Icon\n                    as={MdTextsms}\n                    w={5}\n                    h={5}\n                    mr={3}\n                    mb={1}\n                    // color={\"#6E798C\"}\n                    color={\"#ffffff\"}\n                  />\n                </i>\n\n                <Para\n                  style={{\n                    fontWeight: \"500\",\n                    lineHeight: \"none\",\n\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                  }}\n                  color={\"#ffffff\"}\n                >\n                  {\"Twilio\"}\n                </Para>\n              </Box>\n            </NavLink>\n          </MotionBox>\n        ) : null}\n\n        <Box\n          type=\"row\"\n          style={{\n            paddingLeft: \"10px\",\n            marginLeft: \"5px\",\n            marginTop: \"15px\",\n            marginBottom: \"5px\",\n          }}\n          justifyContent=\"start\"\n        >\n          <Para\n            style={{\n              fontWeight: \"500\",\n              lineHeight: \"none\",\n              color:\n                // location.pathname === \"/application\" ? \"#4B0082\" : \"#6E798C\",\n                \"#6E798C\",\n            }}\n          >\n            Applications\n          </Para>\n        </Box>\n\n        {contentTypeApps}\n      </Box>\n    </>\n  );\n}\n\nexport default PlacementExample;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Mysql/Mysql.js",["517","518","519","520","521","522","523","524"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n} from \"@chakra-ui/react\";\nimport { useQuery } from \"react-query\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nconst Mysql = () => {\n  const dbConnections = useQuery(APIURLS.getDbConnections);\n  console.log(dbConnections);\n  return (\n    <>\n      <Table\n        variant=\"striped\"\n        colorScheme=\"teal\"\n        style={{\n          background: \"white\",\n          margin: \"10px\",\n          width: \"98%\",\n          border: \"2px solid gray\",\n        }}\n      >\n        <Thead>\n          <Tr>\n            <Th>To convert</Th>\n            <Th>into</Th>\n            <Th isNumeric>multiply by</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          <Tr>\n            <Td>inches</Td>\n            <Td>millimetres (mm)</Td>\n            <Td isNumeric>25.4</Td>\n          </Tr>\n          <Tr>\n            <Td>feet</Td>\n            <Td>centimetres (cm)</Td>\n            <Td isNumeric>30.48</Td>\n          </Tr>\n          <Tr>\n            <Td>yards</Td>\n            <Td>metres (m)</Td>\n            <Td isNumeric>0.91444</Td>\n          </Tr>\n        </Tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default Mysql;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Database/Database.js",["525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n} from \"@chakra-ui/react\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  H1,\n  H2,\n  H5,\n  MotionBox,\n  Para,\n} from \"../../styles\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuItemOption,\n  MenuGroup,\n  MenuOptionGroup,\n  MenuIcon,\n  MenuCommand,\n  MenuDivider,\n} from \"@chakra-ui/react\";\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport CreateDatabase from \"../CreateDatabase/CreateDatabase\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useQuery } from \"react-query\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport EditDatabase from \"../../components/Modal/EditDatabase\";\n\nconst Database = () => {\n  const [typeSelected, setTypeSelected] = useState();\n  const [editDbConnection, setEditDbConnection] = useState();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { data, isLoading } = useQuery(APIURLS.getDbConnections);\n  const db = data;\n\n  const editDbHandler = (key) => {\n    setEditDbConnection(key);\n    onOpen();\n  };\n  const onCloseHandler = () => {\n    setEditDbConnection();\n    onClose();\n  };\n\n  return isLoading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      {/* <EditDatabase\n        isOpen={isOpen}\n        onOpen={onOpen}\n        onClose={onCloseHandler}\n        edit={editDbConnection}\n      /> */}\n\n      <Box type=\"heading\" textAlign=\"center\">\n        {/* <Span type=\"heading\">{table}</Span> */}\n        <H2>Database</H2>\n      </Box>\n      <Box type=\"row\" flexDirection=\"row-reverse\" m={6}>\n        <Box\n          style={{\n            backgroundColor: \"white\",\n            border: \"2px solid rgb(226, 232, 240)\",\n            padding: \"8px\",\n            borderRadius: \"10px\",\n            width: \"fit-content\",\n          }}\n        >\n          <Menu>\n            <MenuButton style={{ color: \"#6E798C\" }}>\n              {typeSelected || \"DB Type\"}\n            </MenuButton>\n            <MenuList>\n              <MenuItem onClick={() => setTypeSelected(\"mysql\")}>\n                <Para>MySQL</Para>\n              </MenuItem>\n              <MenuItem onClick={() => setTypeSelected(\"sqlite\")}>\n                <Para>SQLite</Para>\n              </MenuItem>\n              <MenuItem onClick={() => setTypeSelected(\"postgresql\")}>\n                <Para>PostgreSQL</Para>\n              </MenuItem>\n              <MenuItem onClick={() => setTypeSelected()}>\n                <Para>All</Para>\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </Box>\n      </Box>\n      <Box type=\"tableView\" m={6}>\n        {\" \"}\n        <Table\n          variant=\"striped\"\n          colorScheme=\"teal\"\n          style={{\n            width: \"98%\",\n          }}\n        >\n          {/* <TableCaption>\n            <Button type=\"tableAdd\" onClick={onOpen}>\n              Create A DB Connection\n            </Button>\n          </TableCaption> */}\n          <Thead>\n            <Tr style={{ color: \"#4A5568\" }}>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                connection\n              </Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                database type\n              </Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                database\n              </Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>host</Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>port</Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                username\n              </Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                password\n              </Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}></Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {db?.map((key) => {\n              if (typeSelected && key.database_type != typeSelected) {\n                return true;\n              }\n              return (\n                <Tr style={{ color: \"#4A5568\" }}>\n                  <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    {key.connection_name}\n                  </Td>\n                  <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    {key.database_type}\n                  </Td>\n                  <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    {key.database_name}\n                  </Td>\n                  <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    {key.host}\n                  </Td>\n                  <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    {key.host}\n                  </Td>\n                  <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    {key.port}\n                  </Td>\n                  <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    {key.username}\n                  </Td>\n                  <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    {key.password}\n                  </Td>\n                  {/* <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    {\n                      // <i onClick={() => {setEditDbConnection(key) &&onOpen }}>\n                      <i onClick={() => editDbHandler(key)}>\n                        <Icon as={FaEdit} w={5} h={5} color={\"#4B0082\"} />\n                      </i>\n                    }\n                  </Td> */}\n                </Tr>\n              );\n            })}\n          </Tbody>\n        </Table>\n      </Box>\n    </>\n  );\n};\n\nexport default Database;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/Application.js",["555","556","557","558","559","560","561","562","563","564","565","566","567","568"],"import { useState } from \"react\";\nimport { Box, H2, Button, Para } from \"../../styles\";\nimport { Redirect } from \"react-router-dom\";\nimport ApplicationNext from \"./ApplicationNext\";\nimport CreateTable from \"./CreateTable\";\nimport CreateAppName from \"./CreateAppName\";\nimport CreateDatabase from \"../CreateDatabase/CreateDatabase\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useEffect } from \"reactn\";\nimport { useIsFetching } from \"react-query\";\nimport CreateTableName from \"./CreateTableName\";\n\nconst Application = ({ isOpen, onOpen, onClose }) => {\n  const [step, setStep] = useState(1);\n  const [dash, setDash] = useState(false);\n  const [fetch, setFetch] = useState();\n  const queryClient = useQueryClient();\n  const [connectionSelected, setConnectionSelected] = useState();\n  const [appName, setAppName] = useState();\n  const [tableName, setTableName] = useState();\n  const [onLoading, setOnLoading] = useState(false);\n  const isFetching = useIsFetching();\n\n  const onCloseHandler = () => {};\n\n  return (\n    <>\n      {/* <Modal isOpen={isOpen} onClose={onCloseHandler} size={\"full\"}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader></ModalHeader>\n          <ModalCloseButton />\n          <ModalBody> */}\n      <Box width=\"100%\">\n        {step === 1 && (\n          <CreateAppName setStep={setStep} setAppName={setAppName} />\n        )}\n        {step === 2 && <CreateDatabase setStep={setStep} appName={appName} />}\n        {step === 3 && (\n          <CreateTableName\n            setStep={setStep}\n            step={step}\n            setTableName={setTableName}\n          />\n        )}\n        {step === 4 && (\n          <>\n            {\" \"}\n            <CreateTable\n              step={step}\n              setStep={setStep}\n              connectionSelected={connectionSelected}\n              appName={appName}\n              onCloseHandler={onCloseHandler}\n              tableName={tableName}\n            />\n          </>\n        )}\n        {step === 5 && (\n          <>\n            <Box type=\"loader\">\n              {isFetching ? (\n                <ClipLoader color={\"#ffffff\"} size={55} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )}\n            </Box>\n          </>\n        )}\n      </Box>\n      {/* </ModalBody>\n        </ModalContent>\n      </Modal> */}\n    </>\n  );\n};\n\nexport default Application;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/ApplicationNext.js",["569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595"],"import { useState } from \"react\";\nimport { Box, H2, Button, Para, Span } from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport { useQuery } from \"react-query\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuItemOption,\n  MenuGroup,\n  MenuOptionGroup,\n  MenuIcon,\n  MenuCommand,\n  MenuDivider,\n} from \"@chakra-ui/react\";\n\nconst ApplicationNext = ({ setStep, setConnectionSelected }) => {\n  // const [step, setStep] = useState(1);\n  const [classId, setClassId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showConnectionStep, setShowConnectionStep] = useState();\n  const [dbTypeSelected, setDbTypeSelected] = useState();\n  const [selectedCollection, setSelectedCollection] = useState();\n\n  const mysqlCreated = useQuery(APIURLS.dbInfo(\"mysql\"));\n  const sqliteCreated = useQuery(APIURLS.dbInfo(\"sqlite\"));\n  const postgresCreated = useQuery(APIURLS.dbInfo(\"postgres\"));\n  //   console.log(sqliteCreated.data.result);\n\n  let sqliteOptions = [];\n  if (sqliteCreated?.data?.result) {\n    {\n      Object.entries(sqliteCreated?.data?.result).map(([prop, val]) => {\n        console.log(val);\n        return sqliteOptions.push({ value: val, label: val });\n      });\n    }\n  }\n  let mysqlOptions = [];\n  if (mysqlCreated?.data?.result) {\n    {\n      Object.entries(mysqlCreated?.data?.result).map(([prop, val]) => {\n        console.log(val);\n        return mysqlOptions.push({ value: val, label: val });\n      });\n    }\n  }\n  let postgresOptions = [];\n  if (postgresCreated?.data?.result) {\n    {\n      Object.entries(postgresCreated?.data?.result).map(([prop, val]) => {\n        console.log(val);\n        return postgresOptions.push({ value: val, label: val });\n      });\n    }\n  }\n\n  const showConnectionHandler = (key) => {\n    setShowConnectionStep(key);\n  };\n  const dbTypeSelect = (key) => {\n    setDbTypeSelected(key);\n  };\n  const applicationNextHandler = () => {\n    setConnectionSelected(selectedCollection);\n    setStep(3);\n  };\n\n  let showConnection =\n    showConnectionStep === 0 ? (\n      <>\n        <Box m={6} textAlign=\"center\">\n          <Span fontSize={6} mb={2}>\n            Select Type of Db Connection you want to make\n          </Span>\n        </Box>\n        <Box type=\"row\" flexDirection=\"row\" justifyContent=\"center\">\n          <Box\n            background={\"#6e798c38\"}\n            backgroundImage={\n              dbTypeSelected === 0\n                ? \"linear-gradient(to right, #7f00ff, #8b008bd4)\"\n                : \"#6e798c38\"\n            }\n            m={8}\n            p={6}\n            borderRadius=\"5px\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              dbTypeSelect(0);\n            }}\n          >\n            <Para\n              textAlign=\"center\"\n              color={dbTypeSelected === 0 ? \"white\" : \"blue\"}\n            >\n              MySQl\n            </Para>\n          </Box>\n          <Box\n            background={\"#6e798c38\"}\n            backgroundImage={\n              dbTypeSelected === 1\n                ? \"linear-gradient(to right, #7f00ff, #8b008bd4)\"\n                : \"#6e798c38\"\n            }\n            borderRadius=\"5px\"\n            m={8}\n            p={6}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              dbTypeSelect(1);\n            }}\n          >\n            <Para\n              textAlign=\"center\"\n              color={dbTypeSelected === 1 ? \"white\" : \"blue\"}\n            >\n              PostgreSQL\n            </Para>\n          </Box>\n          <Box\n            background={\"#6e798c38\"}\n            backgroundImage={\n              dbTypeSelected === 2\n                ? \"linear-gradient(to right, #7f00ff, #8b008bd4)\"\n                : \"#6e798c38\"\n            }\n            borderRadius=\"5px\"\n            m={8}\n            p={6}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              dbTypeSelect(2);\n            }}\n          >\n            <Para\n              textAlign=\"center\"\n              color={dbTypeSelected === 2 ? \"white\" : \"blue\"}\n            >\n              sqlite\n            </Para>\n          </Box>\n        </Box>\n      </>\n    ) : (\n      <>\n        <Box></Box>{\" \"}\n      </>\n    );\n\n  let showDBConnection =\n    dbTypeSelected === 0 ? (\n      <>\n        <Box\n          style={{\n            marginBottom: \"1.5rem\",\n            color: \"#6E798C\",\n            fontSize: \"1.25rem\",\n            width: \"40%\",\n            padding: \"45px\",\n            paddingTop: \"10px\",\n          }}\n        >\n          <Select\n            key={0}\n            onChange={({ value }) => setSelectedCollection(value)}\n            required\n            theme={CARD_ELEMENT_OPTIONS}\n            placeholder=\"Select Mysql Connection\"\n            options={mysqlOptions}\n          />\n        </Box>\n      </>\n    ) : dbTypeSelected === 1 ? (\n      <>\n        <Box\n          style={{\n            marginBottom: \"1.5rem\",\n            color: \"#6E798C\",\n            fontSize: \"1.25rem\",\n            width: \"40%\",\n            padding: \"45px\",\n            paddingTop: \"10px\",\n          }}\n        >\n          <Select\n            key={0}\n            onChange={({ value }) => setSelectedCollection(value)}\n            required\n            theme={CARD_ELEMENT_OPTIONS}\n            placeholder=\"Select PostgreSQL Connection\"\n            options={postgresOptions}\n          />\n        </Box>\n      </>\n    ) : dbTypeSelected === 2 ? (\n      <>\n        <Box\n          style={{\n            marginBottom: \"1.5rem\",\n            color: \"#6E798C\",\n            fontSize: \"1.25rem\",\n            width: \"40%\",\n            padding: \"45px\",\n            paddingTop: \"10px\",\n          }}\n        >\n          <Select\n            key={0}\n            onChange={({ value }) => setSelectedCollection(value)}\n            required\n            theme={CARD_ELEMENT_OPTIONS}\n            placeholder=\"Select Sqlite Connection\"\n            options={sqliteOptions}\n          />\n        </Box>\n      </>\n    ) : null;\n\n  return (\n    <>\n      <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={8}>\n        <Box type=\"row\" flexDirection=\"column\" justifyContent=\"center\">\n          <Box m={6} textAlign=\"center\">\n            <Span fontSize={6} mb={2}>\n              Select connection for your Application\n            </Span>\n            {/* <Box my={2} borderBottom=\"4px solid\" borderColor=\"orange\"></Box> */}\n          </Box>\n\n          <Box type=\"row\" flexDirection=\"row\" justifyContent=\"center\">\n            <Box\n              // boxShadow={!showConnectionStep ? \"orangeShadow\" : null}\n              background={\"#6e798c38\"}\n              backgroundImage={\n                !showConnectionStep\n                  ? \"linear-gradient(to right, #7f00ff, #8b008bd4)\"\n                  : \"#6e798c38\"\n              }\n              borderRadius=\"5px\"\n              m={8}\n              p={6}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                showConnectionHandler(0);\n              }}\n            >\n              <Para\n                textAlign=\"center\"\n                color={!showConnectionStep ? \"white\" : \"blue\"}\n              >\n                Choose from existing connections\n              </Para>\n            </Box>\n            <Box\n              background={\"#6e798c38\"}\n              backgroundImage={\n                showConnectionStep\n                  ? \"linear-gradient(to right, #7f00ff, #8b008bd4)\"\n                  : \"#6e798c38\"\n              }\n              m={8}\n              p={6}\n              borderRadius=\"5px\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                showConnectionHandler(1);\n              }}\n            >\n              <Para\n                textAlign=\"center\"\n                color={showConnectionStep ? \"white\" : \"blue\"}\n              >\n                create a new connection\n              </Para>\n            </Box>\n          </Box>\n          {showConnection}\n          {showDBConnection}\n\n          <Box>\n            <Button onClick={applicationNextHandler}>NEXT</Button>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default ApplicationNext;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/CreateTable.js",["596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport { Tooltip } from \"@chakra-ui/react\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Para,\n  Label,\n} from \"../../styles\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n} from \"@chakra-ui/react\";\nimport { Switch } from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport { useIsFetching } from \"react-query\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { TiRssOutline } from \"react-icons/ti\";\n\nconst CreateTable = ({\n  step,\n  connectionSelected,\n  appName,\n  onCloseHandler,\n  columnsData,\n  basejwtPresent,\n  setStep,\n  setNewStep,\n  table,\n  tableName,\n}) => {\n  //   const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [value, setValue] = useState(new Date());\n  const [editValue, setEditValue] = useState(new Date());\n  const [selectedFieldType, setSelectedFieldType] = useState();\n  const [selectedNullableType, setSelectedNullableType] = useState();\n  const [selectedBooleanType, setSelectedBooleanType] = useState();\n  const [selectedBinaryType, setSelectedBinaryType] = useState();\n  const [selectedUniqueType, setSelectedUniqueType] = useState();\n  const [selectedFieldTypeEdit, setSelectedFieldTypeEdit] = useState();\n  const [selectedNullableTypeEdit, setSelectedNullableTypeEdit] = useState();\n  const [selectedBooleanTypeEdit, setSelectedBooleanTypeEdit] = useState();\n  const [selectedBinaryTypeEdit, setSelectedBinaryTypeEdit] = useState();\n  const [selectedUniqueTypeEdit, setSelectedUniqueTypeEdit] = useState();\n  const [selectedEnumTypeEdit, setSelectedEnumTypeEdit] = useState();\n  const [selectedEnumType, setSelectedEnumType] = useState();\n  const [columns, setColumns] = useState(columnsData || []);\n  const [arrayDefault, setArrayDefault] = useState();\n  const [arrayDefaultList, setArrayDefaultList] = useState([]);\n  // const [tableName, setTableName] = useState(table || null);\n  const [edit, setEdit] = useState();\n  const [foreignKeyOptions, setForeignKeyOptions] = useState();\n  const [foreignKeyTable, setForeignKeyTable] = useState();\n  const [foreignKeyColumn, setForeignKeyColumn] = useState();\n  const [foreignKeyCheck, setForeignKeyCheck] = useState(false);\n  const [defaultValueCheck, setDefaultValueCheck] = useState(false);\n  const [relationCheck, setRelationCheck] = useState(false);\n  const [relationshipType, setRelationshipType] = useState();\n  const [relationOptions, setRelationOptions] = useState();\n  const [relatedTable, setRelatedTable] = useState();\n  const [relatedField, setRelatedField] = useState();\n  const [baseJWT, setbaseJWT] = useState(false);\n  const [restByJWT, setRestByJWT] = useState(false);\n  const [filterOpt, setFilterOpt] = useState([]);\n  //   const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  const columnTypes = useQuery(APIURLS.getColumnTypes);\n  const isFetching = useIsFetching();\n\n  async function foreignkeyfn() {\n    try {\n      let { data } = await Api.post(APIURLS.getForeignkey, {\n        app_name: appName,\n        type: selectedFieldType,\n      });\n      setForeignKeyOptions(data);\n    } catch ({ response }) {\n      console.log(response);\n    }\n  }\n\n  async function relationshipfn(value) {\n    // let relationCheckValue = relationCheck;\n    // setRelationCheck(!relationCheckValue);\n    try {\n      let { data } = await Api.post(APIURLS.getForeignkey, {\n        app_name: appName,\n        type: value || selectedFieldType,\n      });\n      setRelationOptions(data);\n    } catch ({ response }) {\n      console.log(response);\n    }\n  }\n\n  let relationTable = [];\n  if (relationOptions) {\n    {\n      Object.entries(relationOptions).map(([prop, val]) => {\n        // console.log(val);\n        return relationTable.push({ value: prop, label: prop });\n      });\n    }\n  }\n  let relationColumns = [];\n  if (relatedTable) {\n    // console.log(relationOptions[relationTable]);\n    for (let key in relationOptions[relatedTable]) {\n      console.log(relationOptions[relatedTable][key]);\n      relationColumns.push({\n        value: relationOptions[relatedTable][key],\n        label: relationOptions[relatedTable][key],\n      });\n    }\n  }\n\n  const deleteHandler = (index) => {\n    let columnArray = [...columns];\n    columnArray.splice(index, 1);\n    setColumns(columnArray);\n    setEdit();\n  };\n  const editHandler = (index) => {\n    setEdit(index);\n    setSelectedFieldTypeEdit(columns[index].type);\n    setSelectedNullableTypeEdit(columns[index].nullable);\n    setSelectedBooleanTypeEdit(columns[index].default);\n    setSelectedUniqueTypeEdit(columns[index].unique);\n    setSelectedEnumTypeEdit(columns[index].default);\n    setArrayDefaultList(columns[index].enum);\n    setValue(new Date());\n    if (columns[index].default) {\n      setDefaultValueCheck(true);\n    }\n  };\n  console.log(\"CHECKKEY\", value);\n\n  function convert(str) {\n    var mnths = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\",\n      },\n      date = str.split(\" \");\n    console.log(selectedFieldType, \"inside\");\n    if ((selectedFieldType || selectedFieldTypeEdit) === \"DateTime\") {\n      return [[date[3], mnths[date[1]], date[2]].join(\"-\"), date[4]].join(\" \");\n    } else if ((selectedFieldType || selectedFieldTypeEdit) === \"Date\") {\n      return [date[3], mnths[date[1]], date[2]].join(\"-\");\n    } else {\n      return `${date[4]}`;\n    }\n  }\n\n  const timeChangeHandler = (str) => {\n    // let date = str.split(\" \");\n    // setValue(date[4]);\n    console.log(str);\n  };\n  console.log(\"valueeeeee\", value, selectedFieldType);\n  async function handleSignup(params) {\n    console.log(\n      \"inttt1\",\n      selectedFieldType,\n      (selectedFieldType || selectedFieldTypeEdit) ===\n        (\"INTEGER\" || \"INT\" || \"integer\" || \"BigInteger\")\n    );\n    let def;\n    if (\n      (selectedFieldType || selectedFieldTypeEdit) === \"INTEGER\" ||\n      (selectedFieldType || selectedFieldTypeEdit) === \"INT\" ||\n      (selectedFieldType || selectedFieldTypeEdit) === \"Integer\" ||\n      (selectedFieldType || selectedFieldTypeEdit) === \"BigInteger\" ||\n      (selectedFieldType || selectedFieldTypeEdit) === \"Numeric\"\n    ) {\n      def = parseInt(params.default);\n      console.log(\"inttt\", def);\n    } else if (\n      (selectedFieldType || selectedFieldTypeEdit) === \"Float\" ||\n      (selectedFieldType || selectedFieldTypeEdit) === \"DECIMAL\"\n    ) {\n      def = parseFloat(params.default);\n    } else if ((selectedFieldType || selectedFieldTypeEdit) === \"Enum\") {\n      def = edit ? selectedEnumTypeEdit : selectedEnumType;\n    } else if ((selectedFieldType || selectedFieldTypeEdit) === \"Time\") {\n      def = convert(`${value}`);\n    } else if ((selectedFieldType || selectedFieldTypeEdit) === \"DateTime\") {\n      console.log(\"def1\", value);\n      def = convert(`${value}`);\n    } else if ((selectedFieldType || selectedFieldTypeEdit) === \"Date\") {\n      def = convert(`${value}`);\n    } else if (selectedFieldType === \"Boolean\") {\n      def = selectedBooleanType;\n    } else if (selectedFieldTypeEdit === \"Boolean\") {\n      def = selectedBooleanTypeEdit;\n    } else if (selectedFieldType === \"Binary\") {\n      def = selectedBinaryType;\n    } else if (selectedFieldTypeEdit === \"Binary\") {\n      def = selectedBinaryTypeEdit;\n    } else {\n      def = params.default;\n    }\n\n    console.log(\"def2\", def);\n    let column =\n      (selectedFieldType || selectedFieldTypeEdit) === \"Enum\"\n        ? {\n            name: params.name,\n            type: edit ? selectedFieldTypeEdit : selectedFieldType,\n            nullable: edit ? selectedNullableTypeEdit : selectedNullableType,\n            unique: edit ? selectedUniqueTypeEdit : selectedUniqueType,\n            ...(defaultValueCheck && { default: def }),\n            enum: arrayDefaultList,\n          }\n        : step\n        ? {\n            name: params.name,\n            type: edit ? selectedFieldTypeEdit : selectedFieldType,\n            nullable: edit ? selectedNullableTypeEdit : selectedNullableType,\n            unique: edit ? selectedUniqueTypeEdit : selectedUniqueType,\n            ...(defaultValueCheck && { default: def }),\n          }\n        : foreignkeyColumns.length != 0 &&\n          foreignKeyCheck &&\n          relationCheck &&\n          relationColumns\n        ? {\n            name: params.name,\n            type: edit ? selectedFieldTypeEdit : selectedFieldType,\n            nullable: edit ? selectedNullableTypeEdit : selectedNullableType,\n            unique: edit ? selectedUniqueTypeEdit : selectedUniqueType,\n            ...(defaultValueCheck && { default: def }),\n            foreign_key: `${foreignKeyTable}.${foreignKeyColumn}`,\n            relationship: {\n              relationship_type: relationshipType,\n              related_field: relatedField,\n              related_table: relatedTable,\n            },\n          }\n        : foreignkeyColumns.length != 0 && foreignKeyCheck\n        ? {\n            name: params.name,\n            type: edit ? selectedFieldTypeEdit : selectedFieldType,\n            nullable: edit ? selectedNullableTypeEdit : selectedNullableType,\n            unique: edit ? selectedUniqueTypeEdit : selectedUniqueType,\n            ...(defaultValueCheck && { default: def }),\n            foreign_key: `${foreignKeyTable}.${foreignKeyColumn}`,\n          }\n        : relationCheck && relationColumns.length != 0\n        ? {\n            name: params.name,\n            type: edit ? selectedFieldTypeEdit : selectedFieldType,\n            nullable: edit ? selectedNullableTypeEdit : selectedNullableType,\n            unique: edit ? selectedUniqueTypeEdit : selectedUniqueType,\n            ...(defaultValueCheck && { default: def }),\n            relationship: {\n              relationship_type: relationshipType,\n              related_field: relatedField,\n              related_table: relatedTable,\n            },\n          }\n        : {\n            name: params.name,\n            type: edit ? selectedFieldTypeEdit : selectedFieldType,\n            nullable: edit ? selectedNullableTypeEdit : selectedNullableType,\n            unique: edit ? selectedUniqueTypeEdit : selectedUniqueType,\n            ...(defaultValueCheck && { default: def }),\n          };\n    let columnArray = [...columns];\n    // setTableName(tableName);\n    if (edit) {\n      columnArray[edit] = column;\n      setEdit();\n    } else {\n      columnArray.push(column);\n    }\n\n    setColumns(columnArray);\n    console.log(\"columnArray\", columnArray);\n    setSelectedFieldType();\n    setSelectedNullableType();\n    setSelectedBooleanType();\n    setSelectedBinaryType();\n    setSelectedUniqueType();\n    setArrayDefault(\"\");\n    setArrayDefaultList([]);\n    setRelationCheck(false);\n    setForeignKeyCheck(false);\n    setDefaultValueCheck(false);\n    setRelationshipType();\n    setRelatedField();\n    setRelatedTable();\n\n    // setValue(new Date());\n    reset();\n  }\n  console.log(\"setColumns\", columns);\n\n  async function createTableRequest() {\n    setLoading(true);\n    try {\n      let { data } =\n        baseJWT && filterOpt.length !== 0 && columnsData && tableName\n          ? await Api.put(APIURLS.getContentType, {\n              table_name: tableName,\n              app_name: appName,\n              // restrict_by_jwt: false,,\n              columns: columns,\n              base_jwt: true,\n              filter_keys: filterOpt,\n              // filter_keys: [\"1\"],\n            })\n          : restByJWT && columnsData && tableName\n          ? await Api.put(APIURLS.getContentType, {\n              table_name: tableName,\n              app_name: appName,\n              restrict_by_jwt: true,\n              columns: columns,\n            })\n          : columnsData && tableName\n          ? await Api.put(APIURLS.getContentType, {\n              table_name: tableName,\n              app_name: appName,\n              restrict_by_jwt: false,\n              columns: columns,\n            })\n          : baseJWT && filterOpt.length !== 0\n          ? await Api.post(APIURLS.getContentType, {\n              table_name: tableName,\n              app_name: appName,\n              // restrict_by_jwt: false,,\n              columns: columns,\n              base_jwt: true,\n              filter_keys: filterOpt,\n              // filter_keys: [\"1\"],\n            })\n          : restByJWT\n          ? await Api.post(APIURLS.getContentType, {\n              table_name: tableName,\n              app_name: appName,\n              restrict_by_jwt: true,\n              columns: columns,\n            })\n          : await Api.post(APIURLS.getContentType, {\n              table_name: tableName,\n              app_name: appName,\n              restrict_by_jwt: false,\n              columns: columns,\n            });\n      await setTimeout(() => {\n        queryClient.refetchQueries(APIURLS.getContentType);\n\n        toast({\n          title: \"App created successfully.\",\n          description: data?.result,\n          status: \"success\",\n          duration: 9000,\n          isClosable: false,\n        });\n        // console.log(\"heretimeloop\", queryClient.isFetching());\n        // setOnLoading(true);\n\n        if (step) {\n          setStep(5);\n        }\n        if (!step) {\n          setNewStep(3);\n        }\n\n        // onCloseHandler();\n      }, 20000);\n\n      // onClose();\n      console.log(\"data\", data);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n      //   setApiErr(response?.data?.message);\n      setLoading(false);\n      // onCloseHandler();\n    }\n    // setTableName(params.name);\n  }\n\n  let filterOptions = [];\n  if (columns.length !== 0) {\n    {\n      Object.entries(columns).map(([prop, val]) => {\n        return val.nullable === \"false\" && val.unique === \"true\"\n          ? filterOptions.push({ value: val.name, label: val.name })\n          : null;\n      });\n    }\n  }\n  let nullableTypesOptions = [\n    {\n      value: \"true\",\n      label: \"true\",\n    },\n    {\n      value: \"false\",\n      label: \"false\",\n    },\n  ];\n  let booleanTypesOptions = [\n    {\n      value: \"true\",\n      label: \"true\",\n    },\n    {\n      value: \"false\",\n      label: \"false\",\n    },\n    {\n      value: 1,\n      label: 1,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  let binaryTypesOptions = [\n    {\n      value: 1,\n      label: 1,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  let uniqueTypesOptions = [\n    {\n      value: \"true\",\n      label: \"true\",\n    },\n    {\n      value: \"false\",\n      label: \"false\",\n    },\n  ];\n  console.log(\"selectedUniqueType\", selectedUniqueType);\n  let columnTypesOptions = [];\n  if (columnTypes?.data?.result) {\n    {\n      Object.entries(columnTypes?.data?.result).map(([prop, val]) => {\n        // console.log(val);\n        if (val === \"String\") {\n          return columnTypesOptions.push({\n            value: \"String(123)\",\n            label: \"String(123)\",\n          });\n        }\n        return columnTypesOptions.push({ value: val, label: val });\n      });\n    }\n  }\n  let foreignkeyTable = [];\n  if (foreignKeyOptions) {\n    {\n      Object.entries(foreignKeyOptions).map(([prop, val]) => {\n        // console.log(val);\n        return foreignkeyTable.push({ value: prop, label: prop });\n      });\n    }\n  }\n  let foreignkeyColumns = [];\n  if (foreignKeyTable) {\n    console.log(foreignKeyOptions[foreignKeyTable]);\n    for (let key in foreignKeyOptions[foreignKeyTable]) {\n      console.log(foreignKeyOptions[foreignKeyTable][key]);\n      foreignkeyColumns.push({\n        value: foreignKeyOptions[foreignKeyTable][key],\n        label: foreignKeyOptions[foreignKeyTable][key],\n      });\n    }\n  }\n\n  console.log(\"foreignkeyTable\", foreignkeyTable);\n  console.log(\"foreignKeyOptions\", foreignKeyOptions);\n  console.log(\"foreignkeyColumns\", foreignkeyColumns);\n  let contentTypeApps = Object.entries(columns).map(([prop, val]) => {\n    console.log(val);\n    return (\n      <Tr style={{ color: \"#4A5568\" }}>\n        <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>{val.name}</Td>\n        <Td\n          style={{\n            color: \"#4A5568\",\n            borderColor: \"#EDF2F7\",\n            textAlign: \"center\",\n          }}\n        >\n          {val.type}\n        </Td>\n        <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n          {val.unique}\n        </Td>\n        <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n          {val.nullable}\n        </Td>\n        <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n          {val.default}\n        </Td>\n        {/* <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n          {val.foreign_key}\n        </Td> */}\n        <Td\n          style={{\n            color: \"#4A5568\",\n            borderColor: \"#EDF2F7\",\n            textAlign: \"right\",\n          }}\n        >\n          {\n            // <i onClick={() => {setEditDbConnection(key) &&onOpen }}>\n            <i>\n              <Tooltip label=\"Edit Column\" bg=\"#8071b399\" placement=\"top\">\n                <spam>\n                  <Icon\n                    as={FaEdit}\n                    w={5}\n                    h={5}\n                    color={\"#4B0082\"}\n                    onClick={() => editHandler(prop)}\n                  />{\" \"}\n                </spam>\n              </Tooltip>\n              <Tooltip label=\"Delete Column\" bg=\"#8071b399\" placement=\"bottom\">\n                <spam>\n                  <Icon\n                    as={AiOutlineDelete}\n                    w={5}\n                    h={5}\n                    color={\"red\"}\n                    onClick={() => deleteHandler(prop)}\n                  />{\" \"}\n                </spam>\n              </Tooltip>\n            </i>\n          }\n        </Td>\n      </Tr>\n    );\n  });\n\n  const setbaseJWTHandler = (e) => {\n    // let baseJWTvalue = !baseJWT;\n    console.log(\"Valuejwt\", e);\n    // setbaseJWT(baseJWTvalue);\n  };\n\n  console.log(\"JWT\", baseJWT);\n\n  const handleMultiChange = (option) => {\n    console.log(\"jndjs\", option);\n    let array = [];\n    for (let key in option) {\n      console.log(option);\n      array.push(option[key].value);\n    }\n    console.log(array);\n    setFilterOpt(array);\n  };\n\n  // const handleEnumChange = (option) => {\n  //   console.log(\"jndjs\", option);\n  //   let array = [];\n  //   for (let key in option) {\n  //     console.log(option);\n  //     array.push(option[key].value);\n  //   }\n  //   console.log(array);\n  //   setFilterOpt(array);\n  // };\n\n  const addArrayDefaultHandler = () => {\n    let newEnumList = arrayDefaultList;\n    let newObj = {\n      value: arrayDefault,\n      label: arrayDefault,\n    };\n    newEnumList.push(newObj);\n\n    setArrayDefaultList(newEnumList);\n    setArrayDefault(\"\");\n    // setUserEmail();\n  };\n  console.log(arrayDefaultList);\n  const removeArrayDefaultHandler = (index) => {\n    let newArrayDefaultList = [];\n    for (let key in arrayDefaultList) {\n      console.log(arrayDefaultList[key], \"key\", key);\n      if (key != index) {\n        newArrayDefaultList.push(arrayDefaultList[key]);\n      }\n    }\n\n    // console.log(newArrayDefaultList);\n    setArrayDefaultList(newArrayDefaultList);\n  };\n  const relationTypeHandler = (value) => {\n    console.log(\"INSIDDDEEEEEEEEEEEEE\");\n    setRelationshipType(value);\n\n    if (relationCheck && (value === \"one-one\" || value === \"one-many\")) {\n      setSelectedUniqueType(\"true\");\n    } else if (\n      relationCheck &&\n      (value === \"many-one\" || value === \"many-many\")\n    ) {\n      setSelectedUniqueType(\"false\");\n    }\n  };\n  const fieldTypeHandler = (value) => {\n    edit ? setSelectedFieldTypeEdit(value) : setSelectedFieldType(value);\n    relationshipfn(value);\n  };\n\n  console.log(\"arrayDefaultList\", arrayDefaultList);\n  return loading || isFetching > 0 ? (\n    <Box width=\"100%\" height=\"100vh\">\n      <Box type={step ? \"loader\" : \"loaderCentered\"}>\n        <ClipLoader color={\"#ffffff\"} size={55} />\n      </Box>\n    </Box>\n  ) : (\n    <>\n      {step ? (\n        <Box type=\"heading\" textAlign=\"center\">\n          <Span type=\"heading\">Create Table for your App</Span>\n        </Box>\n      ) : null}\n      <Box\n        display=\"grid\"\n        gridTemplateColumns={\"1fr 1fr\"}\n        // mb={8}\n        // gridGap={4}\n        // style={{ margin: \"30px\", marginLeft: \"70px\", marginRight: \"70px\" }}\n      >\n        {/* <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={8} height=\"100%\"> */}\n\n        <Box type=\"row\" flexDirection=\"column\" justifyContent=\"center\">\n          {/* <Box m={6} textAlign=\"center\">\n            <Span fontSize={6} mb={2}>\n              Create A Collection type\n            </Span>\n           \n          </Box> */}\n          <Box type=\"row\" justifyContent=\"center\" m={6}>\n            <form\n              onSubmit={handleSubmit(handleSignup)}\n              style={{ width: \"28vw\" }}\n            >\n              {/* <Box type=\"relative\">\n                <Label>Table Name</Label>\n                <Input\n                  name=\"tableName\"\n                  color=\"grey\"\n                  required\n                  defaultValue={tableName}\n                  pattern=\"^([a-z]+[0-9_]*)*$\"\n                  fontSize={3}\n                  p={2}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box> */}\n              <Label>Select Field type</Label>\n              <Box\n                style={{\n                  marginBottom: \"1.5rem\",\n                  color: \"#6E798C\",\n                  fontSize: \"1.25rem\",\n\n                  paddingTop: \"10px\",\n                }}\n              >\n                <Select\n                  key={0}\n                  // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                  value={columnTypesOptions.filter((option) =>\n                    edit\n                      ? option.label === selectedFieldTypeEdit\n                      : option.label === selectedFieldType\n                  )}\n                  onChange={({ value }) => fieldTypeHandler(value)}\n                  required\n                  theme={CARD_ELEMENT_OPTIONS}\n                  placeholder=\"Select Type\"\n                  options={columnTypesOptions}\n                />\n              </Box>\n              <Label>Column Name </Label>\n              <Box type=\"relative\">\n                <Input\n                  name=\"name\"\n                  color=\"grey\"\n                  required\n                  fontSize={3}\n                  p={2}\n                  width=\"100%\"\n                  pattern=\"^([a-z]+[0-9_]*)*$\"\n                  defaultValue={edit ? `${columns[edit]?.name}` : null}\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>Nullable</Label>\n              <Box\n                style={{\n                  marginBottom: \"1.5rem\",\n                  color: \"#6E798C\",\n                  fontSize: \"1.25rem\",\n                  paddingTop: \"10px\",\n                }}\n              >\n                <Select\n                  key={0}\n                  // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                  value={nullableTypesOptions.filter((option) =>\n                    edit\n                      ? option.label === selectedNullableTypeEdit\n                      : option.label === selectedNullableType\n                  )}\n                  onChange={({ value }) =>\n                    edit\n                      ? setSelectedNullableTypeEdit(value)\n                      : setSelectedNullableType(value)\n                  }\n                  required\n                  theme={CARD_ELEMENT_OPTIONS}\n                  placeholder=\"Select Type\"\n                  options={nullableTypesOptions}\n                />\n              </Box>\n              <Label>Unique</Label>\n              <Box\n                style={{\n                  marginBottom: \"1.5rem\",\n                  color: \"#6E798C\",\n                  fontSize: \"1.25rem\",\n                  paddingTop: \"10px\",\n                }}\n              >\n                <Select\n                  key={0}\n                  // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                  // menuIsOpen={false}\n                  value={\n                    relationCheck\n                      ? {\n                          value: selectedUniqueType,\n                          label: selectedUniqueType,\n                        }\n                      : uniqueTypesOptions.filter((option) =>\n                          edit\n                            ? option.label === selectedUniqueTypeEdit\n                            : option.label === selectedUniqueType\n                        )\n                  }\n                  onChange={({ value }) =>\n                    relationCheck\n                      ? setSelectedUniqueType(selectedUniqueType)\n                      : edit\n                      ? setSelectedUniqueTypeEdit(value)\n                      : setSelectedUniqueType(value)\n                  }\n                  required\n                  theme={CARD_ELEMENT_OPTIONS}\n                  placeholder=\"Select Type\"\n                  options={uniqueTypesOptions}\n                />\n                {relationCheck ? (\n                  <Para>\n                    If you are adding Relationship, the unique constain will be\n                    True if relation is 'One to One' or 'One to Many' and False\n                    if relation is 'Many to One' or 'Many to Many'.\n                  </Para>\n                ) : null}\n              </Box>{\" \"}\n              <Box type=\"row\" justifyContent=\"start\" mb={3}>\n                <Tooltip\n                  label={\n                    !defaultValueCheck\n                      ? \"Click to add default value\"\n                      : \"Click to not add default value\"\n                  }\n                  bg=\"#8071b399\"\n                  placement=\"top\"\n                >\n                  <spam>\n                    <Switch\n                      size=\"lg\"\n                      style={{ background: \"rgb(241 218 249)\" }}\n                      // onClick={foreignkeyfn}\n                      isChecked={defaultValueCheck}\n                      onChange={(e) => setDefaultValueCheck(e.target.checked)}\n                    />\n                  </spam>\n                </Tooltip>\n                <Para ml={6}> Do you want to add Default Value</Para>{\" \"}\n              </Box>\n              <Label>Default</Label>\n              {(selectedFieldType || columns[edit]?.type) === \"Enum\" ? (\n                <>\n                  <Box\n                    style={{\n                      marginBottom: \"1.5rem\",\n                      color: \"#6E798C\",\n                      fontSize: \"1.25rem\",\n                      paddingTop: \"10px\",\n                    }}\n                  >\n                    <Select\n                      key={0}\n                      // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                      value={arrayDefaultList.filter((option) =>\n                        edit\n                          ? option.label === selectedEnumTypeEdit\n                          : option.label === selectedEnumType\n                      )}\n                      onChange={({ value }) =>\n                        edit\n                          ? setSelectedEnumTypeEdit(value)\n                          : setSelectedEnumType(value)\n                      }\n                      defaultValue={edit ? `${columns[edit]?.default}` : null}\n                      theme={CARD_ELEMENT_OPTIONS}\n                      placeholder=\"Select Type\"\n                      options={arrayDefaultList}\n                    />\n                  </Box>\n                </>\n              ) : (selectedFieldType || columns[edit]?.type) === \"Date\" ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  {\" \"}\n                  <DateTimePicker\n                    value={value}\n                    onChange={setValue}\n                    // parseDate={(str) => new Date(str)}\n                    format={\"y-MM-d\"}\n                  />{\" \"}\n                </Box>\n              ) : (selectedFieldType || columns[edit]?.type) === \"DateTime\" ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  {\" \"}\n                  <DateTimePicker\n                    value={value}\n                    onChange={setValue}\n                    format={\"y-MM-dd h:m:s\"}\n                    parseDate={(str) => new Date(str)}\n                  />{\" \"}\n                </Box>\n              ) : (selectedFieldType || columns[edit]?.type) === \"Time\" ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  {\" \"}\n                  <DateTimePicker\n                    value={value}\n                    onChange={setValue}\n                    // parseDate={(str) => new Date(str)}\n                    format={\"y-MM-dd h:m:s\"}\n                  />{\" \"}\n                </Box>\n              ) : (selectedFieldType || columns[edit]?.type) ===\n                \"BigInteger\" ? (\n                <Box type=\"relative\">\n                  <Input\n                    name=\"default\"\n                    color=\"grey\"\n                    pattern=\"^[1-9][0-9]*$\"\n                    fontSize={3}\n                    p={2}\n                    width=\"100%\"\n                    defaultValue={edit ? `${columns[edit]?.default}` : null}\n                    ref={register}\n                    mb={2}\n                  />\n\n                  {errors?.name && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.name?.message}\n                    </Span>\n                  )}\n                </Box>\n              ) : (selectedFieldType || columns[edit]?.type) === \"Numeric\" ? (\n                <Box type=\"relative\">\n                  <Input\n                    name=\"default\"\n                    color=\"grey\"\n                    pattern=\"^[0-9]+$\"\n                    fontSize={3}\n                    p={2}\n                    width=\"100%\"\n                    defaultValue={edit ? `${columns[edit]?.default}` : null}\n                    ref={register}\n                    mb={2}\n                  />\n\n                  {errors?.name && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.name?.message}\n                    </Span>\n                  )}\n                </Box>\n              ) : (selectedFieldType || columns[edit]?.type) === \"Float\" ? (\n                <Box type=\"relative\">\n                  <Input\n                    name=\"default\"\n                    color=\"grey\"\n                    pattern=\"[+-]?([0-9]*[.])?[0-9]+\"\n                    fontSize={3}\n                    p={2}\n                    width=\"100%\"\n                    defaultValue={edit ? `${columns[edit]?.default}` : null}\n                    ref={register}\n                    mb={2}\n                  />\n\n                  {errors?.name && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.name?.message}\n                    </Span>\n                  )}\n                </Box>\n              ) : (selectedFieldType || columns[edit]?.type) === \"DECIMAL\" ? (\n                <Box type=\"relative\">\n                  <Input\n                    name=\"default\"\n                    color=\"grey\"\n                    pattern=\"^(\\d+\\.?\\d*|\\.\\d+)$\"\n                    fontSize={3}\n                    p={2}\n                    width=\"100%\"\n                    defaultValue={edit ? `${columns[edit]?.default}` : null}\n                    ref={register}\n                    mb={2}\n                  />\n\n                  {errors?.name && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.name?.message}\n                    </Span>\n                  )}\n                </Box>\n              ) : (selectedFieldType || columns[edit]?.type) === \"Boolean\" ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  <Select\n                    key={0}\n                    // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                    value={booleanTypesOptions.filter((option) =>\n                      edit\n                        ? option.label === selectedBooleanTypeEdit\n                        : option.label === selectedBooleanType\n                    )}\n                    onChange={({ value }) =>\n                      edit\n                        ? setSelectedBooleanTypeEdit(value)\n                        : setSelectedBooleanType(value)\n                    }\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"Select Type\"\n                    options={booleanTypesOptions}\n                  />\n                </Box>\n              ) : (selectedFieldType || columns[edit]?.type) === \"Binary\" ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  <Select\n                    key={0}\n                    // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                    value={binaryTypesOptions.filter((option) =>\n                      edit\n                        ? option.label === selectedBinaryTypeEdit\n                        : option.label === selectedBinaryType\n                    )}\n                    onChange={({ value }) =>\n                      edit\n                        ? setSelectedBinaryTypeEdit(value)\n                        : setSelectedBinaryType(value)\n                    }\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"Select Type\"\n                    options={binaryTypesOptions}\n                  />\n                </Box>\n              ) : (\n                <Box type=\"relative\">\n                  <Input\n                    name=\"default\"\n                    color=\"grey\"\n                    fontSize={3}\n                    p={2}\n                    width=\"100%\"\n                    defaultValue={\n                      edit && columns[edit]?.default\n                        ? `${columns[edit]?.default}`\n                        : null\n                    }\n                    ref={register}\n                    mb={2}\n                  />\n\n                  {errors?.name && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.name?.message}\n                    </Span>\n                  )}\n                </Box>\n              )}\n              {(selectedFieldType || columns[edit]?.type) === \"Enum\" ? (\n                <>\n                  {\" \"}\n                  <Label>Add Values to Enum</Label>\n                  <Box type=\"relative\" style={{ display: \"flex\" }}>\n                    <Box type=\"row\" width={\"85%\"}>\n                      <Input\n                        name={\"default\"}\n                        color=\"grey\"\n                        fontSize={3}\n                        p={2}\n                        //  defaultValue={edit ? `${columns[edit]?.default}` : null}\n                        width=\"100%\"\n                        ref={register}\n                        mb={2}\n                        value={arrayDefault}\n                        onChange={(e) => setArrayDefault(e.target.value)}\n                      />\n\n                      {errors?.name && (\n                        <Span color=\"orange\" mb={4}>\n                          {errors?.name?.message}\n                        </Span>\n                      )}\n                    </Box>\n                    <Box type=\"row\" justifyContent=\"flex-start\">\n                      {\" \"}\n                      <Icon\n                        as={BsPlusCircleFill}\n                        w={\"1.5rem\"}\n                        h={\"3.5rem\"}\n                        color={\"rgb(56 46 108 / 92%)\"}\n                        style={{ marginBottom: \"5px\", marginLeft: \"20px\" }}\n                        onClick={addArrayDefaultHandler}\n                      />{\" \"}\n                    </Box>\n                  </Box>\n                  {edit\n                    ? columns[edit]?.enum.map((key, index) => {\n                        return (\n                          <Box\n                            type=\"row\"\n                            justifyContent=\"space-between\"\n                            m={4}\n                            p={2}\n                            style={{\n                              height: \"45px\",\n                              border: \"2px solid #8071b3\",\n                              borderRadius: \"5px\",\n                              marginLeft: \"0\",\n                            }}\n                          >\n                            <Box type=\"row\" justifyContent=\"flex-start\">\n                              <Para> {key[\"value\"]}</Para>\n                            </Box>\n                            <Box>\n                              <Icon\n                                as={AiOutlineDelete}\n                                w={\"1.5rem\"}\n                                h={\"1.5rem\"}\n                                color={\"red\"}\n                                onClick={() => removeArrayDefaultHandler(index)}\n                              />\n                            </Box>\n                          </Box>\n                        );\n                      })\n                    : arrayDefaultList.map((key, index) => {\n                        return (\n                          <Box\n                            type=\"row\"\n                            justifyContent=\"space-between\"\n                            m={4}\n                            p={2}\n                            style={{\n                              height: \"45px\",\n                              border: \"2px solid #8071b3\",\n                              borderRadius: \"5px\",\n                              marginLeft: \"0\",\n                            }}\n                          >\n                            <Box type=\"row\" justifyContent=\"flex-start\">\n                              <Para> {key[\"value\"]}</Para>\n                            </Box>\n                            <Box>\n                              <Icon\n                                as={AiOutlineDelete}\n                                w={\"1.5rem\"}\n                                h={\"1.5rem\"}\n                                color={\"red\"}\n                                onClick={() => removeArrayDefaultHandler(index)}\n                              />\n                            </Box>\n                          </Box>\n                        );\n                      })}\n                </>\n              ) : null}\n              <br />\n              {!step ? (\n                <Box type=\"row\" justifyContent=\"start\" mb={3}>\n                  <Tooltip\n                    label={\n                      !foreignKeyCheck\n                        ? \"Click to add foreign key\"\n                        : \"Click to not add foreign key\"\n                    }\n                    bg=\"#8071b399\"\n                    placement=\"top\"\n                  >\n                    <spam>\n                      <Switch\n                        size=\"lg\"\n                        style={{ background: \"rgb(241 218 249)\" }}\n                        onClick={foreignkeyfn}\n                        isChecked={foreignKeyCheck}\n                        onChange={(e) => setForeignKeyCheck(e.target.checked)}\n                      />\n                    </spam>\n                  </Tooltip>\n                  <Para ml={6}> Do you want to add foreign key</Para>{\" \"}\n                </Box>\n              ) : null}\n              {!step ? <Label>Select Foreign Key</Label> : null}\n              {!step ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  <Select\n                    key={1}\n                    // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                    // value={columnTypesOptions.filter((option) =>\n                    //   edit\n                    //     ? option.label === selectedFieldTypeEdit\n                    //     : option.label === selectedFieldType\n                    // )}\n                    onChange={({ value }) => setForeignKeyTable(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"Select Table\"\n                    options={foreignkeyTable}\n                  />\n                </Box>\n              ) : null}\n              {!step ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                  }}\n                >\n                  <Select\n                    key={2}\n                    onChange={({ value }) => setForeignKeyColumn(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"Select Field\"\n                    options={foreignkeyColumns}\n                  />\n                </Box>\n              ) : null}\n              {!step ? (\n                <Box type=\"row\" justifyContent=\"start\" mb={3}>\n                  <Tooltip\n                    label={\n                      !relationCheck\n                        ? \"Click to add Relations\"\n                        : \"Click to not add Relations\"\n                    }\n                    bg=\"#8071b399\"\n                    placement=\"top\"\n                  >\n                    <spam>\n                      <Switch\n                        size=\"lg\"\n                        style={{ background: \"rgb(241 218 249)\" }}\n                        onClick={() => relationshipfn()}\n                        isChecked={relationCheck}\n                        onChange={(e) => setRelationCheck(e.target.checked)}\n                      />\n                    </spam>\n                  </Tooltip>\n                  <Para ml={6}> Do you want to add Relations</Para>\n                </Box>\n              ) : null}\n              {!step ? <Label>Relations</Label> : null}\n              {!step ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  <Select\n                    key={1}\n                    value={{\n                      value: relationshipType,\n                      label: relationshipType,\n                    }}\n                    onChange={({ value }) => relationTypeHandler(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"relationship_type\"\n                    options={[\n                      {\n                        value: \"one-one\",\n                        label: \"one-one\",\n                      },\n                      {\n                        value: \"many-one\",\n                        label: \"many-one\",\n                      },\n                      {\n                        value: \"many-many\",\n                        label: \"many-many\",\n                      },\n                      {\n                        value: \"one-many\",\n                        label: \"one-many\",\n                      },\n                    ]}\n                  />\n                </Box>\n              ) : null}\n              {!step ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                  }}\n                >\n                  <Select\n                    key={2}\n                    value={{\n                      value: relatedTable,\n                      label: relatedTable,\n                    }}\n                    onChange={({ value }) => setRelatedTable(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"related_table\"\n                    options={relationTable}\n                  />\n                </Box>\n              ) : null}\n              {!step ? (\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                  }}\n                >\n                  <Select\n                    key={3}\n                    value={{\n                      value: relatedField,\n                      label: relatedField,\n                    }}\n                    onChange={({ value }) => setRelatedField(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"related_field\"\n                    options={relationColumns}\n                  />\n                </Box>\n              ) : null}\n              <Box type=\"relative\">\n                {/* <Input\n                  type=\"file\"\n                  id=\"filepicker\"\n                  name=\"fileList\"\n                  webkitdirectory\n                  multiple\n                 \n                  onChange={(event) => getfolder(event)}\n                  name=\"dirpath\"\n                  webkitdirectory\n                  webkitdirectory\n                  mozdirectory\n                  msdirectory\n                  odirectory\n                  directory\n                  multiple\n                /> */}\n              </Box>\n              {/* <input /> */}\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {edit ? \"Edit\" : \"Add\"}\n              </Button>\n            </form>\n          </Box>\n        </Box>\n        <Box>\n          <Box\n            type=\"tableView\"\n            //   m={6}\n            // style={{\n            //   width: \"80%\",\n            //   margin: \"7rem\",\n            //   marginTop: \"1.5rem\",\n            // }}\n          >\n            <Table\n              variant=\"striped\"\n              colorScheme=\"teal\"\n              // style={{\n              //   width: \"98%\",\n              // }}\n            >\n              <TableCaption>\n                {basejwtPresent ? (\n                  <Box type=\"row\" justifyContent=\"start\" mb={3}>\n                    <Tooltip\n                      label={\n                        !restByJWT\n                          ? \"Click to restrict this table by jwt\"\n                          : \"Click to not restrict this table by jwt\"\n                      }\n                      bg=\"#8071b399\"\n                      placement=\"top\"\n                    >\n                      <spam>\n                        <Switch\n                          size=\"lg\"\n                          style={{ background: \"rgb(241 218 249)\" }}\n                          isChecked={restByJWT}\n                          onChange={(e) => setRestByJWT(e.target.checked)}\n                        />\n                      </spam>\n                    </Tooltip>\n                    <Para ml={6}> restrict this table by jwt</Para>\n                  </Box>\n                ) : (\n                  <Box type=\"row\" justifyContent=\"start\" mb={3}>\n                    <Tooltip\n                      label={\n                        !baseJWT\n                          ? \"Click to make it authorization table\"\n                          : \"Click to not make it authorization table\"\n                      }\n                      bg=\"#8071b399\"\n                      placement=\"top\"\n                    >\n                      <spam>\n                        <Switch\n                          size=\"lg\"\n                          style={{ background: \"rgb(241 218 249)\" }}\n                          isChecked={baseJWT}\n                          onChange={(e) => setbaseJWT(e.target.checked)}\n                        />\n                      </spam>\n                    </Tooltip>\n                    <Para ml={6}> Use this table as a Authorization table</Para>\n                  </Box>\n                )}\n\n                {baseJWT ? (\n                  <>\n                    <Label>Select Filter Keys</Label>\n                    <Box\n                      style={{\n                        marginBottom: \"1.5rem\",\n                        marginTop: \"10px\",\n                        color: \"#6E798C\",\n                        fontSize: \"1.25rem\",\n                        paddingTop: \"10px\",\n                      }}\n                    >\n                      <Select\n                        // value={columnTypesOptions.filter((option) =>\n                        //   edit\n                        //     ? option.label === selectedFieldTypeEdit\n                        //     : option.label === selectedFieldType\n                        // )}\n                        onChange={handleMultiChange}\n                        isMulti\n                        theme={CARD_ELEMENT_OPTIONS}\n                        placeholder=\"Select Filter\"\n                        options={filterOptions}\n                      />\n                    </Box>{\" \"}\n                  </>\n                ) : null}\n                <Button width={\"100%\"} mt={4} onClick={createTableRequest}>\n                  Create Table\n                </Button>\n              </TableCaption>\n              <Thead>\n                <Tr style={{ color: \"#4A5568\" }}>\n                  <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    name\n                  </Th>\n                  <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    type\n                  </Th>\n                  <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    unique\n                  </Th>\n                  <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    nullable\n                  </Th>\n                  <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    default\n                  </Th>\n                  {/* <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                    Foreign Key\n                  </Th> */}\n\n                  <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}></Th>\n                </Tr>\n              </Thead>\n              <Tbody>{contentTypeApps}</Tbody>\n            </Table>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default CreateTable;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/Content.js",["622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  H1,\n  H2,\n  H5,\n  MotionBox,\n  Para,\n} from \"../../styles\";\nimport { Tooltip } from \"@chakra-ui/react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { useParams } from \"react-router\";\nimport Api, { ApiJwt, APIURLS } from \"../../Api\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n} from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport ContentField from \"../../components/Modal/ContentField\";\nimport AppTableCreation from \"../../components/Modal/AppTableCreation\";\nimport AppTableData from \"../../components/Modal/AppTableData\";\nimport BaseJwtLogin from \"../../components/Modal/BaseJwtLogin\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport { useIsFetching } from \"react-query\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Content = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [toggle, setToggle] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [editDataId, setEditDataId] = useState();\n  const [deleteTableToggle, setDeleteTableToggle] = useState(false);\n  const [openModal, setOpenModal] = useState();\n  let { app, table } = useParams();\n  const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n  const { data, isLoading } = useQuery(APIURLS.getContentType);\n  const isFetchingApps = useIsFetching([APIURLS.getContentType]);\n  let contentTypeApps = null;\n  let tableFieldShow = null;\n  let sendGetTableContent = null;\n  if (data != null && data[app][\"jwt_info\"]) {\n    console.log(\"Sendhing...\", localStorage.getItem(\"jwtToken\"));\n    sendGetTableContent = [APIURLS.getTableContent({ app, table }), \"jwt_info\"];\n  } else {\n    sendGetTableContent = APIURLS.getTableContent({ app, table });\n  }\n\n  const fieldData = useQuery(sendGetTableContent);\n  let fieldDataBodyArray = [];\n  // console.log(\"fuck\", data[app][\"jwt_info\"]);\n\n  async function exportAppHandler() {\n    console.log(app);\n    try {\n      let { data } = await Api.post(APIURLS.exportApp(), {\n        app_name: app,\n      });\n\n      toast({\n        title: \"Data Added.\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      // onClose();\n      console.log(\"there\", data);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n    }\n  }\n\n  if (data != null && data[app][table]) {\n    // const formElementsArray = [];\n    // for (let key in data[id]) {\n    //   formElementsArray.push({\n    //     id: key,\n    //     config: data[id][key],\n    //   });\n    // }\n    // console.log(formElementsArray[0]);\n    // let table = Object.entries(data[id]);\n    contentTypeApps = Object.entries(data[app][table]).map(([prop, val]) => {\n      console.log(prop, val);\n      return (\n        <Tr style={{ color: \"#4A5568\" }}>\n          <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n            {val.name}\n          </Td>\n          <Td\n            style={{\n              color: \"#4A5568\",\n              borderColor: \"#EDF2F7\",\n              textAlign: \"center\",\n            }}\n          >\n            {val.type}\n          </Td>\n          <Td\n            style={{\n              color: \"#4A5568\",\n              borderColor: \"#EDF2F7\",\n              textAlign: \"center\",\n            }}\n          >\n            {val.foreign_key}\n          </Td>\n\n          {/* <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n              {val.unique}\n            </Td>\n            <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n              {val.nullable}\n            </Td>\n            <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n              {val.default}\n            </Td>\n             */}\n          <Td\n            style={{\n              color: \"#4A5568\",\n              borderColor: \"#EDF2F7\",\n              textAlign: \"right\",\n            }}\n          ></Td>\n        </Tr>\n      );\n    });\n    tableFieldShow = Object.entries(data[app][table]).map(([prop, val]) => {\n      fieldDataBodyArray.push(val.name);\n      return (\n        <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>{val.name}</Th>\n      );\n    });\n  }\n\n  const editHandler = (id) => {\n    setEditDataId(id);\n    setOpenModal(1);\n\n    onOpen();\n  };\n\n  async function deleteHandler(editDataId) {\n    let deleteRow = null;\n    setLoading(true);\n    try {\n      if (data != null && data[app][\"jwt_info\"]) {\n        let { data } = await ApiJwt.delete(\n          APIURLS.getTableContentById({ app, table, editDataId })\n        );\n      } else {\n        let { data } = await Api.delete(\n          APIURLS.getTableContentById({ app, table, editDataId })\n        );\n      }\n\n      await queryClient.refetchQueries([\n        APIURLS.getTableContent({ app, table }),\n      ]);\n      // setSuccess(true);\n\n      toast({\n        title: \"Deleted.\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      onClose();\n      setLoading(false);\n      console.log(\"there\", data);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n      setLoading(false);\n    }\n  }\n  async function deleteTableHandler() {\n    setLoading(true);\n    try {\n      let { data } = await Api.delete(APIURLS.deleteTable({ app, table }));\n      await setTimeout(() => {\n        queryClient.refetchQueries(APIURLS.getContentType);\n\n        toast({\n          title: \"Deleted.\",\n          description: data?.result,\n          status: \"success\",\n          duration: 9000,\n          isClosable: false,\n        });\n\n        setDeleteTableToggle(true);\n        setLoading(false);\n      }, 15000);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n      setLoading(false);\n    }\n  }\n\n  let fieldDataBody = null;\n  if (fieldData?.data?.result) {\n    fieldDataBody = Object.entries(fieldData?.data?.result).map(\n      ([prop, val]) => {\n        return (\n          <Tr style={{ color: \"#4A5568\" }}>\n            <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n              {val[\"id\"]}\n            </Td>\n            {Object.entries(fieldDataBodyArray).map(([prop, value]) => {\n              console.log(prop, value, \"here\", val[value]);\n              return (\n                <Td style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                  {val[value] === true\n                    ? \"true\"\n                    : val[value] === false\n                    ? \"false\"\n                    : val[value]}\n                </Td>\n              );\n            })}\n\n            <Td\n              style={{\n                color: \"#4A5568\",\n                borderColor: \"#EDF2F7\",\n                textAlign: \"center\",\n              }}\n            >\n              {val[\"create_dt\"]}\n            </Td>\n            <Td\n              style={{\n                color: \"#4A5568\",\n                borderColor: \"#EDF2F7\",\n                textAlign: \"center\",\n              }}\n            >\n              {\n                // <i onClick={() => {setEditDbConnection(key) &&onOpen }}>\n                <i>\n                  <Tooltip label=\"Edit Field\" bg=\"#8071b399\" placement=\"top\">\n                    <spam>\n                      {\" \"}\n                      <Icon\n                        as={FaEdit}\n                        w={5}\n                        h={5}\n                        cursor={\"pointer\"}\n                        color={\"#4B0082\"}\n                        onClick={() => editHandler(val[\"id\"])}\n                      ></Icon>\n                    </spam>\n                  </Tooltip>\n                  <Tooltip label=\"Delete Field\" placement=\"top\" bg=\"#8071b399\">\n                    <spam>\n                      <Icon\n                        as={AiOutlineDelete}\n                        w={5}\n                        h={5}\n                        cursor={\"pointer\"}\n                        color={\"red\"}\n                        onClick={() => deleteHandler(val[\"id\"])}\n                      />\n                    </spam>\n                  </Tooltip>\n                </i>\n              }\n            </Td>\n          </Tr>\n        );\n      }\n    );\n  }\n  let captionButtonData = null;\n  if (data) {\n    captionButtonData = (\n      <Box type=\"row\">\n        {data[app][\"jwt_info\"]?.base_table === table ? (\n          <Button width={\"100%\"} mr={4} onClick={() => openModalHandler(5)}>\n            Login\n          </Button>\n        ) : null}\n        <Button width={\"100%\"} onClick={() => openModalHandler(1)}>\n          Add Values to {data ? table : null}{\" \"}\n        </Button>\n      </Box>\n    );\n  }\n  let captionButtonField = null;\n  if (data) {\n    captionButtonField = (\n      <Button width={\"100%\"} onClick={() => openModalHandler(4)}>\n        Add Fields to {data ? table : null}{\" \"}\n      </Button>\n    );\n  }\n  let CreateTable,\n    exportTable = null;\n  // if (data) {\n  //   CreateTable = (\n  //     <Button onClick={() => openModalHandler(3)} mr={6}>\n  //       Create New Table\n  //     </Button>\n  //   );\n  //   exportTable = (\n  //     <Button onClick={() => exportAppHandler()}>Export App</Button>\n  //   );\n  // }\n  let editTable = null;\n  // if (data) {\n  //   editTable = (\n  //     <Button }>Create New Table</Button>\n  //   );\n  // }\n  let modal = null;\n  const openModalHandler = (key) => {\n    setOpenModal(key);\n\n    onOpen();\n  };\n\n  // let modal = null;\n  // if (data) {\n  //   modal = (\n  //\n  //   );\n  // }\n\n  // let createTableModal = null;\n  // if (data) {\n\n  // }\n\n  return loading || isLoading ? (\n    <Box width=\"100%\" height=\"100vh\">\n      <Box type={\"loaderCentered\"}>\n        <ClipLoader color={\"#ffffff\"} size={55} />\n      </Box>\n    </Box>\n  ) : (\n    <>\n      {deleteTableToggle ? <Redirect to=\"/dashboard\" /> : null}\n      {openModal === 3 ? (\n        <AppTableCreation\n          isOpen={isOpen}\n          onOpen={onOpen}\n          onClose={onClose}\n          appName={app}\n          basejwtPresent={\n            data != null && data[app][\"jwt_info\"] && data[app][\"jwt_info\"]\n              ? data[app][\"jwt_info\"]\n              : null\n          }\n\n          // connectionSelected={data[id].connection_name}\n          // columns={data[id].columns}\n        />\n      ) : openModal === 2 ? (\n        <ContentField\n          isOpen={isOpen}\n          onOpen={onOpen}\n          onClose={onClose}\n          appName={app}\n          tablename={table}\n          columns={data[app][table]}\n        />\n      ) : openModal === 1 ? (\n        <AppTableData\n          isOpen={isOpen}\n          onOpen={onOpen}\n          onClose={onClose}\n          app={app}\n          table={table}\n          columns={data[app][table]}\n          basejwt={data[app][\"jwt_info\"] ? data[app][\"jwt_info\"] : null}\n          editDataId={editDataId}\n          restrictByJwt={\n            data != null &&\n            data[app][\"jwt_info\"] &&\n            data[app][\"jwt_info\"][\"restricted_tables\"]\n              ? data[app][\"jwt_info\"][\"restricted_tables\"].includes(table)\n              : null\n          }\n        />\n      ) : openModal === 4 ? (\n        <AppTableCreation\n          isOpen={isOpen}\n          onOpen={onOpen}\n          onClose={onClose}\n          appName={app}\n          columns={data[app][table]}\n          tableNamePassed={table}\n          edit={true}\n        />\n      ) : openModal === 5 ? (\n        <BaseJwtLogin\n          isOpen={isOpen}\n          onOpen={onOpen}\n          onClose={onClose}\n          app={app}\n          table={table}\n          basejwt={data[app][\"jwt_info\"] ? data[app][\"jwt_info\"] : null}\n        />\n      ) : null}\n      {/* <Box type=\"row\" justifyContent=\"spacing-around\" margin={6}>\n        {data ? <H2>{table}</H2> : null}\n        <Box type=\"row\">\n          {CreateTable}\n          {exportTable}\n        </Box>\n      </Box> */}\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">{table}</Span>\n      </Box>\n      <Box type=\"row\" justifyContent=\"center\" mt={8}>\n        <Button\n          type=\"toggleTable\"\n          style={{\n            width: \"20vw\",\n            color: toggle ? \"white\" : \"#392e6c\",\n            backgroundImage: toggle\n              ? \"linear-gradient(to right, rgb(56 46 108), rgb(56 46 108)\"\n              : \"none\",\n          }}\n          onClick={() => {\n            setToggle(true);\n          }}\n        >\n          Data\n        </Button>\n        <Button\n          type=\"toggleTable\"\n          style={{\n            width: \"20vw\",\n            color: !toggle ? \"white\" : \"#392e6c\",\n            backgroundImage: !toggle\n              ? \"linear-gradient(to right, rgb(56 46 108), rgb(56 46 108))\"\n              : \"none\",\n          }}\n          onClick={() => {\n            setToggle(false);\n          }}\n        >\n          Fields\n        </Button>{\" \"}\n      </Box>\n      {!toggle ? (\n        <Box\n          type=\"tableView\"\n          //   m={6}\n          style={{\n            width: \"80%\",\n            margin: \"7rem\",\n            marginTop: \"1.5rem\",\n          }}\n        >\n          <Table\n            variant=\"striped\"\n            colorScheme=\"teal\"\n            style={{\n              width: \"98%\",\n            }}\n          >\n            <TableCaption>{captionButtonField}</TableCaption>\n            <Thead>\n              <Tr style={{ color: \"#4A5568\" }}>\n                <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                  Fields\n                </Th>\n                <Th\n                  style={{\n                    color: \"#4A5568\",\n                    borderColor: \"#EDF2F7\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Type\n                </Th>\n                <Th\n                  style={{\n                    color: \"#4A5568\",\n                    borderColor: \"#EDF2F7\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Foreign Key\n                </Th>\n                <Th\n                  style={{\n                    color: \"#4A5568\",\n                    borderColor: \"#EDF2F7\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  {\n                    // <i onClick={() => {setEditDbConnection(key) &&onOpen }}>\n                    <i>\n                      <Tooltip\n                        label=\"Edit Table\"\n                        bg=\"#8071b399\"\n                        placement=\"top\"\n                      >\n                        <spam>\n                          <Icon\n                            as={FaEdit}\n                            w={5}\n                            h={5}\n                            cursor={\"pointer\"}\n                            color={\"#4B0082\"}\n                            onClick={() => openModalHandler(4)}\n                          ></Icon>\n                        </spam>\n                      </Tooltip>\n                      <Tooltip\n                        label=\"Delete Table\"\n                        bg=\"#8071b399\"\n                        placement=\"top\"\n                      >\n                        <spam>\n                          <Icon\n                            as={AiOutlineDelete}\n                            w={5}\n                            h={5}\n                            cursor={\"pointer\"}\n                            color={\"red\"}\n                            onClick={() => deleteTableHandler()}\n                          />\n                        </spam>\n                      </Tooltip>\n                    </i>\n                  }\n                </Th>\n                {/* <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>type</Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                unique\n              </Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                nullable\n              </Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                default\n              </Th>\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>\n                Foreign Key\n              </Th>\n\n              <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}></Th> */}\n              </Tr>\n            </Thead>\n            <Tbody>{contentTypeApps}</Tbody>\n          </Table>\n        </Box>\n      ) : (\n        <Box type=\"tableView\" m={6}>\n          {\" \"}\n          <Table\n            variant=\"striped\"\n            colorScheme=\"teal\"\n            style={{\n              width: \"98%\",\n            }}\n          >\n            <TableCaption>{captionButtonData}</TableCaption>\n            <Thead>\n              <Tr style={{ color: \"#4A5568\" }}>\n                <Th style={{ color: \"#4A5568\", borderColor: \"#EDF2F7\" }}>Id</Th>\n                {tableFieldShow}\n\n                <Th\n                  style={{\n                    color: \"#4A5568\",\n                    borderColor: \"#EDF2F7\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Created_at\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>{fieldDataBody}</Tbody>\n          </Table>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Content;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/CreateAppName.js",["641","642","643","644","645","646","647","648"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport { useForm } from \"react-hook-form\";\n\nconst CreateAppName = ({ setStep, setAppName }) => {\n  const { handleSubmit, register, errors } = useForm();\n\n  async function handleSignup(params) {\n    setAppName(params.appName);\n    setStep(2);\n  }\n\n  return (\n    <>\n      <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={8} height=\"100%\">\n        <Box type=\"row\" flexDirection=\"column\" justifyContent=\"center\">\n          <Box type=\"heading\" textAlign=\"center\">\n            <Span type=\"heading\">Create New App </Span>\n            {/* <Box my={2} borderBottom=\"4px solid\" borderColor=\"orange\"></Box> */}\n          </Box>\n\n          <Box type=\"row\" justifyContent=\"center\" m={6} mt={\"50px\"}>\n            <form\n              onSubmit={handleSubmit(handleSignup)}\n              style={{ width: \"35vw\" }}\n            >\n              <Label>App Name </Label>\n              <Box type=\"relative\">\n                <Input\n                  name=\"appName\"\n                  color=\"grey\"\n                  required\n                  pattern=\"^([a-z]+[0-9_]*)*$\"\n                  fontSize={3}\n                  p={2}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {\"Next\"}\n              </Button>\n            </form>\n          </Box>\n          {/* </Box> */}\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default CreateAppName;\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/ContentField.js",["649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { Checkbox, CheckboxGroup } from \"@chakra-ui/react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { Switch } from \"@chakra-ui/react\";\n// import { useQueryClient } from \"react-query\";\n// import { useToast, createStandaloneToast } from \"@chakra-ui/react\";\n// import Api, { setHeader, APIURLS } from \"../../Api\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport Select from \"react-select\";\n\nconst ContentField = ({\n  isOpen,\n  onOpen,\n  onClose,\n  appName,\n  connectionSelected,\n  columns,\n  tablename,\n}) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [selectedFieldType, setSelectedFieldType] = useState();\n  const [foreignKeyOptions, setForeignKeyOptions] = useState();\n  const [relationOptions, setRelationOptions] = useState();\n  const [foreignKeyTable, setForeignKeyTable] = useState();\n  const [foreignKeyColumn, setForeignKeyColumn] = useState();\n  const [foreignKeyCheck, setForeignKeyCheck] = useState(false);\n  const [relationCheck, setRelationCheck] = useState(false);\n  const [relationshipType, setRelationshipType] = useState();\n  const [relatedTable, setRelatedTable] = useState();\n  const [relatedField, setRelatedField] = useState();\n  const [value, setValue] = React.useState(\"1\");\n  //   const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  const columnTypes = useQuery(APIURLS.getColumnTypes);\n  const contentType = useQuery(APIURLS.getContentType);\n  //   const [loading, setLoading] = useState(false);\n  //   const [success, setSuccess] = useState(false);\n  //   const [apiErr, setApiErr] = useState(null);\n  //   const queryClient = useQueryClient();\n  //   const toast = createStandaloneToast();\n\n  async function foreignkeyfn() {\n    let foreignKeyCheckValue = foreignKeyCheck;\n    setForeignKeyCheck(!foreignKeyCheckValue);\n    try {\n      let { data } = await Api.post(APIURLS.getForeignkey, {\n        app_name: appName,\n        type: selectedFieldType,\n      });\n      setForeignKeyOptions(data);\n    } catch ({ response }) {\n      console.log(response);\n    }\n  }\n\n  async function relationshipfn() {\n    let relationCheckValue = relationCheck;\n    setRelationCheck(!relationCheckValue);\n    try {\n      let { data } = await Api.post(APIURLS.getForeignkey, {\n        app_name: appName,\n        type: \"\",\n      });\n      setRelationOptions(data);\n    } catch ({ response }) {\n      console.log(response);\n    }\n  }\n\n  console.log(\"here\", columns);\n  let columnTypesOptions = [];\n\n  if (columnTypes?.data?.result) {\n    {\n      Object.entries(columnTypes?.data?.result).map(([prop, val]) => {\n        // console.log(val);\n        return columnTypesOptions.push({ value: val, label: val });\n      });\n    }\n  }\n\n  let foreignkeyTable = [];\n  if (foreignKeyOptions) {\n    {\n      Object.entries(foreignKeyOptions).map(([prop, val]) => {\n        // console.log(val);\n        return foreignkeyTable.push({ value: prop, label: prop });\n      });\n    }\n  }\n  let foreignkeyColumns = [];\n  if (foreignKeyTable) {\n    console.log(foreignKeyOptions[foreignKeyTable]);\n    for (let key in foreignKeyOptions[foreignKeyTable]) {\n      console.log(foreignKeyOptions[foreignKeyTable][key]);\n      foreignkeyColumns.push({\n        value: foreignKeyOptions[foreignKeyTable][key],\n        label: foreignKeyOptions[foreignKeyTable][key],\n      });\n    }\n  }\n  let relationTable = [];\n  if (relationOptions) {\n    {\n      Object.entries(relationOptions).map(([prop, val]) => {\n        // console.log(val);\n        return relationTable.push({ value: prop, label: prop });\n      });\n    }\n  }\n  let relationColumns = [];\n  if (relatedTable) {\n    // console.log(relationOptions[relationTable]);\n    for (let key in relationOptions[relatedTable]) {\n      console.log(relationOptions[relatedTable][key]);\n      relationColumns.push({\n        value: relationOptions[relatedTable][key],\n        label: relationOptions[relatedTable][key],\n      });\n    }\n  }\n\n  console.log(\"foreignkeyTable\", relationTable);\n  console.log(\"foreignKeyOptions\", relationOptions);\n  console.log(\"foreignkeyColumns\", relationColumns);\n  console.log(\"sds\", foreignKeyCheck);\n\n  async function handleSignup(params) {\n    // console.log(params);\n    try {\n      let def = params.default;\n      if (selectedFieldType === (\"INTEGER\" || \"INT\" || \"Integer\")) {\n        console.log(\"inttt\");\n        def = parseInt(params.default);\n      }\n      if (foreignkeyColumns && foreignKeyCheck) {\n        columns.push({\n          name: params.name,\n          type: selectedFieldType,\n          nullable: params.nullable,\n          unique: params.unique,\n          default: def,\n          foreign_key: `${foreignKeyTable}.${foreignKeyColumn}`,\n        });\n      } else if (relationCheck && relationColumns) {\n        columns.push({\n          name: params.name,\n          type: selectedFieldType,\n          nullable: params.nullable,\n          unique: params.unique,\n          default: def,\n          relationship: {\n            relationship_type: relationshipType,\n            related_field: relatedField,\n            related_table: relatedTable,\n          },\n        });\n      } else {\n        columns.push({\n          name: params.name,\n          type: selectedFieldType,\n          nullable: params.nullable,\n          unique: params.unique,\n          default: def,\n        });\n      }\n\n      let { data } = await Api.put(APIURLS.getContentType, {\n        table_name: tablename,\n        app_name: appName,\n        // restrict_by_jwt: false,\n        columns: columns,\n      });\n\n      await queryClient.refetchQueries([APIURLS.getContentType]);\n      // setSuccess(true);\n\n      toast({\n        title: \"Database created successfully.\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      onClose();\n      console.log(\"there\", columns);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n      //   setApiErr(response?.data?.message);\n      //   setLoading(false);`\n    }\n    // setTableName(params.name);\n    // setStep(3);\n  }\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            {\" \"}\n            <Label>Create Field </Label>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Box type=\"row\" justifyContent=\"center\" m={6}>\n              <form\n                onSubmit={handleSubmit(handleSignup)}\n                style={{ width: \"35vw\" }}\n              >\n                {/* <Box type=\"relative\"> */}\n                {/* <Input\n                  name=\"tableName\"\n                  color=\"grey\"\n                  required\n                  fontSize={3}\n                  p={2}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )} */}\n                <Label>Select Field type</Label>\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  <Select\n                    key={0}\n                    onChange={({ value }) => setSelectedFieldType(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"Select Type\"\n                    options={columnTypesOptions}\n                  />\n                </Box>\n                <Label>Column Name </Label>\n                <Box type=\"relative\">\n                  <Input\n                    name=\"name\"\n                    color=\"grey\"\n                    required\n                    fontSize={3}\n                    p={2}\n                    width=\"100%\"\n                    ref={register}\n                    mb={2}\n                  />\n\n                  {errors?.name && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.name?.message}\n                    </Span>\n                  )}\n                </Box>\n                <Label>nullable</Label>\n                <Box type=\"relative\">\n                  <Input\n                    name=\"nullable\"\n                    color=\"grey\"\n                    required\n                    fontSize={3}\n                    p={2}\n                    width=\"100%\"\n                    ref={register}\n                    mb={2}\n                  />\n\n                  {errors?.name && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.name?.message}\n                    </Span>\n                  )}\n                </Box>\n                <Label>unique</Label>\n                <Box type=\"relative\">\n                  <Input\n                    name=\"unique\"\n                    color=\"grey\"\n                    required\n                    fontSize={3}\n                    p={2}\n                    width=\"100%\"\n                    ref={register}\n                    mb={2}\n                  />\n\n                  {errors?.name && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.name?.message}\n                    </Span>\n                  )}\n                </Box>\n                <Label>default</Label>\n                <Box type=\"relative\">\n                  <Input\n                    name=\"default\"\n                    color=\"grey\"\n                    required\n                    fontSize={3}\n                    p={2}\n                    width=\"100%\"\n                    ref={register}\n                    mb={2}\n                  />\n\n                  {errors?.name && (\n                    <Span color=\"orange\" mb={4}>\n                      {errors?.name?.message}\n                    </Span>\n                  )}\n                </Box>\n\n                {/* <Checkbox\n                  isChecked={foreignKeyCheck}\n                  // isIndeterminate={foreignKeyCheck}\n                  onChange={(e) => setForeignKeyCheck(e.target.checked)}\n                  // value={true}\n                  // isIndeterminate={isIndeterminate}\n                  // onChange={(e) => setCheckedItems([e.target.checked, e.target.checked])}\n                  onClick={foreignkeyfn}\n                >\n                  Do you want to add foreign key\n                </Checkbox> */}\n                <Box>\n                  <Switch\n                    size=\"lg\"\n                    style={{ background: \"rgb(241 218 249)\" }}\n                    onClick={foreignkeyfn}\n                  />\n                  <Para> Do you want to add foreign key</Para>\n                </Box>\n\n                <br />\n                <Label>foreign_key</Label>\n\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  <Select\n                    key={1}\n                    style={{ marginBottom: \"5px\" }}\n                    // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                    // value={columnTypesOptions.filter((option) =>\n                    //   edit\n                    //     ? option.label === selectedFieldTypeEdit\n                    //     : option.label === selectedFieldType\n                    // )}\n                    onChange={({ value }) => setForeignKeyTable(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"Select Table\"\n                    options={foreignkeyTable}\n                  />\n                </Box>\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                  }}\n                >\n                  <Select\n                    key={2}\n                    // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                    // value={columnTypesOptions.filter((option) =>\n                    //   edit\n                    //     ? option.label === selectedFieldTypeEdit\n                    //     : option.label === selectedFieldType\n                    // )}\n                    // onChange={({ value }) =>\n                    //   edit\n                    //     ? setSelectedFieldTypeEdit(value)\n                    //     : setSelectedFieldType(value)\n                    // }\n                    onChange={({ value }) => setForeignKeyColumn(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"Select Field\"\n                    options={foreignkeyColumns}\n                  />\n                </Box>\n                <Box>\n                  <Switch\n                    size=\"lg\"\n                    style={{ background: \"rgb(241 218 249)\" }}\n                    onClick={relationshipfn}\n                  />\n                  <Para> Do you want to add Relations</Para>\n                </Box>\n                <Label>Relations</Label>\n\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  <Select\n                    key={1}\n                    // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                    // value={columnTypesOptions.filter((option) =>\n                    //   edit\n                    //     ? option.label === selectedFieldTypeEdit\n                    //     : option.label === selectedFieldType\n                    // )}\n                    onChange={({ value }) => setRelationshipType(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"relationship_type\"\n                    options={[\n                      {\n                        value: \"one-one\",\n                        label: \"one-one\",\n                      },\n                      {\n                        value: \"many-one\",\n                        label: \"many-one\",\n                      },\n                      {\n                        value: \"many-many\",\n                        label: \"many-many\",\n                      },\n                      {\n                        value: \"one-many\",\n                        label: \"one-many\",\n                      },\n                    ]}\n                  />\n                </Box>\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                  }}\n                >\n                  <Select\n                    key={2}\n                    // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                    // value={columnTypesOptions.filter((option) =>\n                    //   edit\n                    //     ? option.label === selectedFieldTypeEdit\n                    //     : option.label === selectedFieldType\n                    // )}\n                    // onChange={({ value }) =>\n                    //   edit\n                    //     ? setSelectedFieldTypeEdit(value)\n                    //     : setSelectedFieldType(value)\n                    // }\n                    onChange={({ value }) => setRelatedTable(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"related_table\"\n                    options={relationTable}\n                  />\n                </Box>\n                <Box\n                  style={{\n                    marginBottom: \"1.5rem\",\n                    color: \"#6E798C\",\n                    fontSize: \"1.25rem\",\n                  }}\n                >\n                  <Select\n                    key={3}\n                    // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                    // value={columnTypesOptions.filter((option) =>\n                    //   edit\n                    //     ? option.label === selectedFieldTypeEdit\n                    //     : option.label === selectedFieldType\n                    // )}\n                    // onChange={({ value }) =>\n                    //   edit\n                    //     ? setSelectedFieldTypeEdit(value)\n                    //     : setSelectedFieldType(value)\n                    // }\n                    onChange={({ value }) => setRelatedField(value)}\n                    required\n                    theme={CARD_ELEMENT_OPTIONS}\n                    placeholder=\"related_field\"\n                    options={relationColumns}\n                  />\n                </Box>\n                <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                  {\"Create\"}\n                </Button>\n              </form>\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default ContentField;\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/AppTableCreation.js",["670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useIsFetching } from \"react-query\";\nimport CreateTable from \"../../containers/Application/CreateTable\";\nimport CreateTableName from \"../../containers/Application/CreateTableName\";\n\nconst AppTableCreation = ({\n  isOpen,\n  onOpen,\n  onClose,\n  appName,\n  columns,\n  basejwtPresent,\n  tableNamePassed,\n  edit,\n}) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [selectedFieldType, setSelectedFieldType] = useState();\n  const [tableName, setTableName] = useState(tableNamePassed || null);\n  const [newStep, setNewStep] = useState();\n  const queryClient = useQueryClient();\n  // const isFetching = useIsFetching();\n  const isFetching = useIsFetching();\n  // const isFetchingApps = useIsFetching([APIURLS.getContentType]);\n  useEffect(() => {\n    if (edit) {\n      setNewStep(2);\n    } else {\n      setNewStep(1);\n    }\n  }, [edit]);\n\n  async function onCloseHandler() {\n    setTableName();\n\n    if (edit) {\n      setNewStep(2);\n    } else {\n      setNewStep(1);\n    }\n    onClose();\n  }\n  console.log(\n    \"step\",\n    newStep,\n    \"tableNmae\",\n    tableName,\n    \"tableNamePassed\",\n    tableNamePassed\n  );\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onCloseHandler} size={\"10xl\"}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            <Label>Create New Table </Label>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {newStep === 1 && (\n              <CreateTableName\n                setNewStep={setNewStep}\n                setTableName={setTableName}\n              />\n            )}\n            {newStep === 2 && (\n              <>\n                <CreateTable\n                  appName={appName}\n                  onCloseHandler={onCloseHandler}\n                  columnsData={columns}\n                  basejwtPresent={basejwtPresent}\n                  setNewStep={setNewStep}\n                  tableName={tableName}\n                />\n              </>\n            )}\n            {newStep === 3 && (\n              <>\n                <Box type=\"loader\">\n                  {isFetching ? (\n                    <ClipLoader color={\"#ffffff\"} size={55} />\n                  ) : (\n                    <Redirect to=\"/dashboard\" />\n                  )}\n                </Box>\n              </>\n            )}\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\n// const CARD_ELEMENT_OPTIONS = {\n//   style: {\n//     base: {\n//       color: \"#32325d\",\n//       fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n//       fontSmoothing: \"antialiased\",\n//       fontSize: \"18px\",\n//       \"::placeholder\": {\n//         color: \"#aab7c4\",\n//       },\n//     },\n//     invalid: {\n//       color: \"#fa755a\",\n//       iconColor: \"#fa755a\",\n//     },\n//   },\n// };\n\nexport default AppTableCreation;\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/AppTableData.js",["696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, setJwtHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport Select from \"react-select\";\n\nconst AppTableData = ({\n  isOpen,\n  onOpen,\n  onClose,\n  app,\n  columns,\n  table,\n  editDataId,\n  basejwt,\n  restrictByJwt,\n}) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [selectedFieldType, setSelectedFieldType] = useState();\n  const [value, setValue] = useState({});\n  const [selectedBooleanType, setSelectedBooleanType] = useState({});\n  const [selectedBinaryType, setSelectedBinaryType] = useState({});\n  const [jwtToken, setJwtToken] = useGlobal(\"jwtToken\");\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  const columnTypes = useQuery(APIURLS.getColumnTypes);\n  const contentType = useQuery([APIURLS.getContentType], {\n    enabled: !!token,\n  });\n  const { data, isFetching } = useQuery(\n    [APIURLS.getTableContentById({ app, table, editDataId }), basejwt],\n    {\n      enabled: !!token,\n    }\n  );\n  console.log(data?.result);\n  //   const [loading, setLoading] = useState(false);\n  //   const [success, setSuccess] = useState(false);\n  //   const [apiErr, setApiErr] = useState(null);\n  //   const queryClient = useQueryClient();\n  //   const toast = createStandaloneToast();\n  useEffect(() => {\n    let token = Object.entries(columns).map(([prop, val]) => {\n      console.log(val);\n      console.log(\"here\", value, [val?.type], val?.name);\n      if (\n        val.type === \"DATETIME\" ||\n        val.type === \"TIME\" ||\n        val.type === \"DATE\"\n      ) {\n        let obj = value;\n        obj[val?.name] = new Date();\n        setValue(obj);\n      }\n      if (val.type === \"BOOLEAN\") {\n        let obj = selectedBooleanType;\n        obj[val?.name] = \"\";\n\n        setSelectedBooleanType(obj);\n      }\n      if (val.type === \"BLOB\") {\n        let obj = selectedBinaryType;\n        obj[val?.name] = \"\";\n        console.log(obj, \"setSelectedBinaryType\");\n        setSelectedBinaryType(obj);\n      }\n    });\n  }, []);\n\n  console.log(selectedBooleanType, \"selectedBooleanType\");\n\n  let booleanTypesOptions = [\n    {\n      value: \"true\",\n      label: \"true\",\n    },\n    {\n      value: \"false\",\n      label: \"false\",\n    },\n    {\n      value: 1,\n      label: 1,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  let binaryTypesOptions = [\n    {\n      value: 1,\n      label: 1,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  const setValueHandler = (e, name) => {\n    let obj = value;\n    obj[name] = e;\n    setValue(obj);\n\n    console.log(name);\n    console.log(obj);\n    console.log(e);\n  };\n  console.log(value);\n  let fields = null;\n  fields = Object.entries(columns).map(([prop, val]) => {\n    console.log(val);\n    console.log(\"here\", val.name);\n\n    // if (val.type === \"DATETIME\" || val.type === \"TIME\" || val.type === \"DATE\") {\n    //   setValue({ ...value, [val?.type]: val?.name });\n    // }\n    return (\n      <>\n        <Label>{val.name}</Label>\n        <Box type=\"relative\">\n          {val.type === \"INTEGER\" ||\n          val.type === \"Integer\" ||\n          val.type === \"INT\" ? (\n            <Input\n              type=\"number\"\n              name={val.name}\n              color=\"grey\"\n              required\n              fontSize={3}\n              p={2}\n              defaultValue={editDataId ? data?.result[val.name] : null}\n              width=\"100%\"\n              ref={register}\n              mb={2}\n            />\n          ) : val.type === \"Enum\" ? (\n            <>\n              {/* <Box\n                    style={{\n                      marginBottom: \"1.5rem\",\n                      color: \"#6E798C\",\n                      fontSize: \"1.25rem\",\n                      paddingTop: \"10px\",\n                    }}\n                  >\n                    <Select\n                      key={0}\n                      // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                      value={arrayDefaultList.filter((option) =>\n                        edit\n                          ? option.label === selectedEnumTypeEdit\n                          : option.label === selectedEnumType\n                      )}\n                      onChange={({ value }) =>\n                        edit\n                          ? setSelectedEnumTypeEdit(value)\n                          : setSelectedEnumType(value)\n                      }\n                      defaultValue={edit ? `${columns[edit]?.default}` : null}\n                      required\n                      theme={CARD_ELEMENT_OPTIONS}\n                      placeholder=\"Select Type\"\n                      options={arrayDefaultList}\n                    />\n                  </Box> */}\n            </>\n          ) : val.type === \"DATE\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              {\" \"}\n              <DateTimePicker\n                value={value[val.name]}\n                onChange={(e) => setValue({ ...value, [val.name]: e })}\n                // parseDate={(str) => new Date(str)}\n                format={\"y-MM-d\"}\n              />{\" \"}\n            </Box>\n          ) : val.type === \"DATETIME\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              {\" \"}\n              <DateTimePicker\n                value={value[val.name]}\n                onChange={(e) => setValue({ ...value, [val.name]: e })}\n                format={\"y-MM-dd h:m:s\"}\n                parseDate={(str) => new Date(str)}\n              />{\" \"}\n            </Box>\n          ) : val.type === \"TIME\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              {\" \"}\n              <DateTimePicker\n                value={value[val.name]}\n                onChange={(e) => setValue({ ...value, [val.name]: e })}\n                // parseDate={(str) => new Date(str)}\n                format={\"y-MM-dd h:m:s\"}\n              />{\" \"}\n            </Box>\n          ) : val.type === \"BIGINT\" ? (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                pattern=\"^[1-9][0-9]*$\"\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          ) : val.type === \"NUMERIC\" ? (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                pattern=\"^[0-9]+$\"\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          ) : val.type === \"DECIMAL\" ? (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                pattern=\"^(\\d+\\.?\\d*|\\.\\d+)$\"\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          ) : val.type === \"FLOAT\" ? (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                pattern=\"[+-]?([0-9]*[.])?[0-9]+\"\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          ) : val.type === \"BOOLEAN\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              <Select\n                key={0}\n                // value={selectedBooleanType[val.name]}\n                // onChange={(e) => setValue()}\n                // value={selectedBooleanType}\n                value={booleanTypesOptions.filter(\n                  (option) => option.label === selectedBooleanType[val.name]\n                )}\n                onChange={({ value }) =>\n                  setSelectedBooleanType({\n                    ...selectedBooleanType,\n                    [val.name]: value,\n                  })\n                }\n                required\n                theme={CARD_ELEMENT_OPTIONS}\n                placeholder=\"Select Type\"\n                options={booleanTypesOptions}\n              />\n            </Box>\n          ) : val.type === \"BLOB\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              <Select\n                key={0}\n                value={binaryTypesOptions.filter(\n                  (option) => option.label === selectedBinaryType[val.name]\n                )}\n                onChange={({ value }) =>\n                  setSelectedBinaryType({\n                    ...selectedBinaryType,\n                    [val.name]: value,\n                  })\n                }\n                required\n                theme={CARD_ELEMENT_OPTIONS}\n                placeholder=\"Select Type\"\n                options={binaryTypesOptions}\n              />\n            </Box>\n          ) : (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          )}\n          {/* {errors?.name && (\n            <Span color=\"orange\" mb={4}>\n              {errors?.name?.message}\n            </Span>\n          )} */}\n        </Box>{\" \"}\n      </>\n    );\n  });\n\n  function convert(str, type) {\n    var mnths = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\",\n      },\n      date = str.split(\" \");\n    console.log(type, \"inside\", str);\n    if (type === \"DATETIME\") {\n      return [[date[3], mnths[date[1]], date[2]].join(\"-\"), date[4]].join(\" \");\n    } else if (type === \"DATE\") {\n      return [date[3], mnths[date[1]], date[2]].join(\"-\");\n    } else {\n      return `${date[4]}`;\n    }\n  }\n\n  async function handleSignup(params) {\n    console.log(params);\n    console.log(\"see1\", selectedBooleanType);\n    for (let key in columns) {\n      console.log(key, columns, columns[key][\"type\"]);\n      if (\n        columns[key][\"type\"] === \"INTEGER\" ||\n        columns[key][\"type\"] === \"Integer\" ||\n        columns[key][\"type\"] === \"INT\" ||\n        columns[key][\"type\"] === \"BIGINT\" ||\n        columns[key][\"type\"] === \"NUMERIC\"\n      ) {\n        let name = columns[key][\"name\"];\n        params[name] = parseInt(params[name]);\n      } else if (\n        columns[key][\"type\"] === \"DECIMAL\" ||\n        columns[key][\"type\"] === \"FLOAT\"\n      ) {\n        let name = columns[key][\"name\"];\n        params[name] = parseFloat(params[name]);\n      } else if (columns[key][\"type\"] === \"TIME\") {\n        let name = columns[key][\"name\"];\n        params[name] = convert(`${value[name]}`, columns[key][\"type\"]);\n      } else if (columns[key][\"type\"] === \"DATETIME\") {\n        let name = columns[key][\"name\"];\n        console.log(\"def1\", value.name);\n        params[name] = convert(`${value[name]}`, columns[key][\"type\"]);\n      } else if (columns[key][\"type\"] === \"DATE\") {\n        let name = columns[key][\"name\"];\n        params[name] = convert(`${value[name]}`, columns[key][\"type\"]);\n      } else if (columns[key][\"type\"] === \"BOOLEAN\") {\n        let name = columns[key][\"name\"];\n        params[name] =\n          selectedBooleanType[name] === \"true\"\n            ? true\n            : selectedBooleanType[name] === \"false\"\n            ? false\n            : selectedBooleanType[name];\n      } else if (columns[key][\"type\"] === \"BLOB\") {\n        let name = columns[key][\"name\"];\n        params[name] = selectedBinaryType[name];\n      }\n    }\n    console.log(params, value);\n    try {\n      let { data } =\n        basejwt && restrictByJwt && editDataId\n          ? await ApiJwt.put(\n              APIURLS.getTableContentById({ app, table, editDataId }),\n              {\n                ...params,\n              }\n            )\n          : basejwt && editDataId\n          ? await ApiJwt.put(\n              APIURLS.getTableContentById({ app, table, editDataId }),\n              {\n                ...params,\n              }\n            )\n          : basejwt && restrictByJwt\n          ? await ApiJwt.post(APIURLS.getTableContent({ app, table }), {\n              ...params,\n            })\n          : basejwt && basejwt.base_table === table\n          ? await Api.post(APIURLS.postRegisterTableData({ app, table }), {\n              ...params,\n            })\n          : editDataId\n          ? await Api.put(\n              APIURLS.getTableContentById({ app, table, editDataId }),\n              {\n                ...params,\n              }\n            )\n          : await Api.post(APIURLS.getTableContent({ app, table }), {\n              ...params,\n            });\n      if (basejwt) {\n        let jwtToken = data?.access_token;\n        localStorage.setItem(\"jwtToken\", jwtToken);\n        setJwtHeader(jwtToken);\n        setJwtToken(jwtToken);\n        await queryClient.refetchQueries([\n          APIURLS.getTableContent({ app, table }),\n          \"jwt_info\",\n        ]);\n      } else {\n        await queryClient.refetchQueries([\n          APIURLS.getTableContent({ app, table }),\n        ]);\n      }\n      console.log(\"see2\", queryClient.isFetching());\n      toast({\n        title: \"Data Added.\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      onClose();\n      console.log(\"there\", data);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n    }\n  }\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            {\" \"}\n            <Label>Create Field </Label>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Box type=\"row\" justifyContent=\"center\" m={6}>\n              <form\n                onSubmit={handleSubmit(handleSignup)}\n                style={{ width: \"35vw\" }}\n              >\n                {fields}\n                <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                  {\"Create\"}\n                </Button>\n              </form>\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default AppTableData;\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/EditDatabase.js",["717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\n// import { useQueryClient } from \"react-query\";\n// import { useToast, createStandaloneToast } from \"@chakra-ui/react\";\n// import Api, { setHeader, APIURLS } from \"../../Api\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport Select from \"react-select\";\nimport CreateTable from \"../../containers/Application/CreateTable\";\nimport CreateDatabase from \"../../containers/CreateDatabase/CreateDatabase\";\n\nconst EditDatabase = ({ isOpen, onOpen, onClose, edit }) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [selectedFieldType, setSelectedFieldType] = useState();\n\n  const queryClient = useQueryClient();\n\n  const onCloseHandler = () => {\n    onClose();\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onCloseHandler}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            {\" \"}\n            <Label>EDIT</Label>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <CreateDatabase edit={edit} />\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\n// const CARD_ELEMENT_OPTIONS = {\n//   style: {\n//     base: {\n//       color: \"#32325d\",\n//       fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n//       fontSmoothing: \"antialiased\",\n//       fontSize: \"18px\",\n//       \"::placeholder\": {\n//         color: \"#aab7c4\",\n//       },\n//     },\n//     invalid: {\n//       color: \"#fa755a\",\n//       iconColor: \"#fa755a\",\n//     },\n//   },\n// };\n\nexport default EditDatabase;\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/BaseJwtLogin.js",["746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n// import { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport { useGlobal } from \"reactn\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setJwtHeader, APIURLS } from \"../../Api\";\nimport Select from \"react-select\";\n\nconst BaseJwtLogin = ({ isOpen, onOpen, onClose, app, table, basejwt }) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [selectedFieldType, setSelectedFieldType] = useState();\n  const [jwtToken, setJwtToken] = useGlobal(\"jwtToken\");\n  const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n  let fields = null;\n  if (basejwt) {\n    fields = Object.entries(basejwt?.filter_keys).map(([prop, val]) => {\n      return (\n        <>\n          <Label>{val}</Label>\n          <Box type=\"relative\">\n            <Input\n              name={val}\n              color=\"grey\"\n              required\n              fontSize={3}\n              p={2}\n              // defaultValue={editDataId ? data?.result[val.name] : null}\n              width=\"100%\"\n              ref={register}\n              mb={2}\n            />\n\n            {errors?.name && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.name?.message}\n              </Span>\n            )}\n          </Box>{\" \"}\n        </>\n      );\n    });\n  }\n\n  async function handleSignup(params) {\n    console.log(params);\n    try {\n      console.log(\"Here\");\n      let { data } = await Api.post(\n        APIURLS.baseJwtLogin({ app, table }),\n        params\n      );\n      console.log(data);\n      let jwtToken = data?.access_token;\n\n      localStorage.setItem(\"jwtToken\", jwtToken);\n\n      setJwtHeader(jwtToken);\n      setJwtToken(jwtToken);\n\n      toast({\n        title: \"Success\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      await queryClient.refetchQueries([\n        APIURLS.getTableContent({ app, table }),\n        \"jwt_info\",\n      ]);\n      onClose();\n      console.log(\"there\", data);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n    }\n  }\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            {\" \"}\n            <Label>Login </Label>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Box type=\"row\" justifyContent=\"center\" m={6}>\n              <form\n                onSubmit={handleSubmit(handleSignup)}\n                style={{ width: \"35vw\" }}\n              >\n                {fields}\n                <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                  {\"Login\"}\n                </Button>\n              </form>\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default BaseJwtLogin;\n","/Users/nishantrana/Desktop/doga-frontend/src/components/Modal/AwsDeploy.js",["764","765","766","767","768","769","770","771","772","773","774","775","776","777","778"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport Select from \"react-select\";\n\nconst AwsDeploy = ({\n  isOpen,\n  onOpen,\n  onClose,\n  //   app,\n  //   columns,\n  //   table,\n  //   editDataId,\n  //   basejwt,\n  //   restrictByJwt,\n}) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  // const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  //   const { data } = useQuery([APIURLS.getContentType], {\n  //     enabled: !!token,\n  //   });\n\n  //   let contentTypeApps = null;\n  let selectAppName = [];\n  //   if (data) {\n  //     for (let key in data) {\n  //       selectAppName.push({\n  //         value: key,\n  //         label: key,\n  //       });\n  //     }\n  //   }\n  //   const columnTypes = useQuery(APIURLS.getColumnTypes);\n  //   const contentType = useQuery([APIURLS.getContentType], {\n  //     enabled: !!token,\n  //   });\n  //   const { data } = useQuery(\n  //     [APIURLS.getTableContentById({ app, table, editDataId }), basejwt],\n  //     {\n  //       enabled: !!token,\n  //     }\n  //   );\n  //   console.log(data?.result);\n  //   const [loading, setLoading] = useState(false);\n  //   const [success, setSuccess] = useState(false);\n  //   const [apiErr, setApiErr] = useState(null);\n  //   const queryClient = useQueryClient();\n  //   const toast = createStandaloneToast();\n  //   console.log(restrictByJwt);\n\n  async function handleSignup(params) {\n    try {\n      //   let obj = {\n      //     app_name: params.app_name,\n      //     user_credentials: {\n      //       aws_username: params.aws_username,\n      //       aws_secret_key: params.aws_secret_key,\n      //       aws_access_key: params.aws_access_key,\n      //     },\n      //     config: {\n      //       region_name: params.region_name,\n      //       signature_version: params.signature_version,\n      //       //  \"retries\": {\n      //       //      \"max_attempts\":\"string\",\n      //       //      \"mode\": \"string\"\n      //       //      }\n      //     },\n      //     rds_config: {\n      //       Engine: params.Engine,\n      //       AllocatedStorage: params.AllocatedStorage,\n      //       DBInstanceIdentifier: params.DBInstanceIdentifier,\n      //       DBInstanceClass: params.DBInstanceClass,\n      //       MasterUsername: params.MasterUsername,\n      //       MasterUserPassword: params.MasterUserPassword,\n      //       MaxAllocatedStorage: params.MaxAllocatedStorage,\n      //     },\n      //     ec2_config: {\n      //       BlockDeviceMappings: [\n      //         {\n      //           DeviceName: params.DeviceName,\n      //           Ebs: {\n      //             DeleteOnTermination: params.DeleteOnTermination,\n      //             VolumeSize: params.VolumeSize,\n      //             VolumeType: params.VolumeType,\n      //           },\n      //         },\n      //       ],\n      //       InstanceType: params.InstanceType,\n      //       ImageId: params.ImageId,\n      //     },\n      //   };\n      //   let { data } = await Api.post(APIURLS.awsExport(), obj);\n      let obj = {\n        app_name: \"value\",\n        provision_db: false,\n        // \"tier\": \"hobby-dev\"\n      };\n      let { data } = await Api.post(APIURLS.herokuExport(), obj);\n\n      toast({\n        title: \"Success\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      //   await queryClient.refetchQueries([\n      //     APIURLS.getTableContent({ app, table }),\n      //     \"jwt_info\",\n      //   ]);\n\n      onClose();\n    } catch ({ response }) {}\n  }\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose} size={\"large\"}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            {\" \"}\n            <Label>DEPLOY </Label>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Box type=\"row\" justifyContent=\"center\">\n              <Button\n                type=\"toggleTable\"\n                style={{\n                  width: \"20vw\",\n                  color: toggle ? \"white\" : \"purple\",\n                  backgroundImage: toggle\n                    ? \"linear-gradient(to right, #7f00ff, #8b008bd4)\"\n                    : \"none\",\n                }}\n                onClick={() => {\n                  setToggle(true);\n                }}\n              >\n                <Icon\n                  as={SiAmazonaws}\n                  w={\"2.5rem\"}\n                  h={\"1.5rem\"}\n                  color={toggle ? \"white\" : \"purple\"}\n                  mr={2}\n                />\n                AWS\n              </Button>\n              <Button\n                type=\"toggleTable\"\n                style={{\n                  width: \"20vw\",\n                  color: !toggle ? \"white\" : \"purple\",\n                  backgroundImage: !toggle\n                    ? \"linear-gradient(to right, #7f00ff, #8b008bd4)\"\n                    : \"none\",\n                }}\n                onClick={() => {\n                  setToggle(false);\n                }}\n              >\n                <Icon\n                  as={SiHeroku}\n                  w={\"2.5rem\"}\n                  h={\"1.5rem\"}\n                  color={!toggle ? \"white\" : \"purple\"}\n                  mr={2}\n                />{\" \"}\n                Heroku\n              </Button>{\" \"}\n            </Box>\n            <Box type=\"row\" justifyContent=\"center\" m={6}>\n              {toggle ? (\n                <form\n                  onSubmit={handleSubmit(handleSignup)}\n                  style={{ width: \"35vw\" }}\n                >\n                  <Label>App name</Label>\n                  <Box\n                    style={{\n                      marginBottom: \"1.5rem\",\n                      color: \"#6E798C\",\n                      fontSize: \"1.25rem\",\n                    }}\n                  >\n                    <Select\n                      key={1}\n                      required\n                      theme={CARD_ELEMENT_OPTIONS}\n                      placeholder=\"Select App \"\n                      options={selectAppName}\n                    />\n                  </Box>\n                  <H5 m={2} ml=\"0px\">\n                    Credentials\n                  </H5>\n                  <Label>AWS Username</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"aws_username\"}\n                      color=\"grey\"\n                      required\n                      fontSize={3}\n                      p={2}\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>AWS Secret Key</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"aws_secret_key\"}\n                      color=\"grey\"\n                      required\n                      fontSize={3}\n                      p={2}\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>AWS Access Key</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"aws_access_key\"}\n                      color=\"grey\"\n                      required\n                      fontSize={3}\n                      p={2}\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <H5 m={2} ml=\"0px\">\n                    Config\n                  </H5>\n\n                  <Label>Region Name</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"region_name\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>Signature Version</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"signature_version\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <H5 m={2} ml=\"0px\">\n                    RDS Config\n                  </H5>\n                  <Label>Engine</Label>\n                  <Box\n                    style={{\n                      marginBottom: \"1.5rem\",\n                      color: \"#6E798C\",\n                      fontSize: \"1.25rem\",\n                    }}\n                  >\n                    <Select\n                      key={1}\n                      required\n                      theme={CARD_ELEMENT_OPTIONS}\n                      placeholder=\"Select Engine type\"\n                      options={[\n                        {\n                          value: \"MySQL\",\n                          label: \"MySQL\",\n                        },\n                        {\n                          value: \"SQLite\",\n                          label: \"SQLite\",\n                        },\n                        {\n                          value: \"Postgres\",\n                          label: \"Postgres\",\n                        },\n                      ]}\n                    />\n                  </Box>\n                  <Label>Allocated Storage </Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"AllocatedStorage\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>DB Instance Identifier </Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"DBInstanceIdentifier\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>DB Instance Class </Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"DBInstanceClass\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>Master Username </Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"MasterUsername\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>Master User Password </Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"MasterUserPassword\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>MaxAllocatedStorage</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"MaxAllocatedStorage\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      // defaultValue={editDataId ? data?.result[val.name] : null}\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <H5 m={2} ml=\"0px\">\n                    EC2 Config\n                  </H5>\n                  <Label>Device Name</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"DeviceName\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>Delete On Termination</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"DeleteOnTermination\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>VolumeSize</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"VolumeSize\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>Volume Type</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"VolumeType\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  <Label>Instance Type</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"InstanceType\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n\n                  <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                    {\"Deploy\"}\n                  </Button>\n                </form>\n              ) : (\n                <form\n                  onSubmit={handleSubmit(handleSignup)}\n                  style={{ width: \"35vw\" }}\n                >\n                  <Label>App name</Label>\n                  <Box\n                    style={{\n                      marginBottom: \"1.5rem\",\n                      color: \"#6E798C\",\n                      fontSize: \"1.25rem\",\n                    }}\n                  >\n                    <Select\n                      key={1}\n                      required\n                      theme={CARD_ELEMENT_OPTIONS}\n                      placeholder=\"Select App \"\n                      options={selectAppName}\n                    />\n                  </Box>\n                  <Label>provision DB</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"provision_db\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box>\n                  {/* <Label>Tier</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"tier\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box> */}\n                  <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                    {\"Deploy\"}\n                  </Button>\n                </form>\n              )}\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default AwsDeploy;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/AppHome/AppHome.js",["779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n  H5,\n  Para,\n} from \"../../styles\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { FaUserAlt, FaDatabase } from \"react-icons/fa\";\nimport { FcAcceptDatabase } from \"react-icons/fc\";\nimport { IoAppsSharp } from \"react-icons/io5\";\nimport { SiAmazonaws } from \"react-icons/si\";\nimport { BsFillLockFill } from \"react-icons/bs\";\nimport { BsAppIndicator, BsTable } from \"react-icons/bs\";\nimport { TiExport } from \"react-icons/ti\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport { AiOutlineCloudServer } from \"react-icons/ai\";\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport CreateDatabase from \"../CreateDatabase/CreateDatabase\";\nimport Application from \"../Application/Application\";\nimport AwsDeploy from \"../../components/Modal/AwsDeploy\";\nimport { useIsFetching } from \"react-query\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { Chart } from \"chart.js\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport { useParams } from \"react-router\";\nimport AppTableCreation from \"../../components/Modal/AppTableCreation\";\nconst AppHome = () => {\n  let { app } = useParams();\n  const queryClient = useQueryClient();\n  const userProfile = useQuery(APIURLS.userInfo);\n  const toast = createStandaloneToast();\n  //   const appsCreated = useQuery(APIURLS.dashboardInfo(app, all));\n  const { data, isLoading } = useQuery(APIURLS.appStats(app));\n  const appDocs = useQuery(APIURLS.appDocs(app));\n  console.log(appDocs?.data?.unrestricted_tables[0]);\n  const appData = useQuery(APIURLS.getContentType);\n\n  const dbConnections = useQuery(APIURLS.getDbConnections);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [openModal, setOpenModal] = useState();\n  const openModalHandler = (key) => {\n    setOpenModal(key);\n    onOpen();\n  };\n  const isFetching = useIsFetching();\n  let labels = [];\n  let dataset = [];\n  let totalFields = 0;\n  for (let key in data?.tables) {\n    labels.push(data?.tables[key].table_name);\n    dataset.push(data?.tables[key].no_fields);\n    totalFields += data?.tables[key].no_fields;\n  }\n\n  const dataDoughnut = {\n    labels: [\"Tables\", \"Relations\", \"Fields\", \"Exported\"],\n    datasets: [\n      {\n        data: [\n          data?.number_of_tables,\n          data?.relationships.length || 0,\n          totalFields,\n          data?.deployment_info?.total_no_exports,\n        ],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"purple\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"purple\"],\n      },\n    ],\n    text: \"23%\",\n  };\n  //    dataLine = null;\n\n  const dataLine = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Number Of Fields Per Table\",\n        data: dataset,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\",\n      },\n      //   {\n      //     label: \"Fields dataset\",\n      //     data: [5, 7, 6, 10],\n      //     fill: true,\n      //     borderColor: \"#742774\",\n      //   },\n    ],\n  };\n\n  async function exportAppHandler() {\n    console.log(app);\n    try {\n      let { data } = await Api.post(APIURLS.exportApp(), {\n        app_name: app,\n      });\n\n      toast({\n        title: \"Data Added.\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      // onClose();\n      console.log(\"there\", data);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n    }\n  }\n\n  let relation = null;\n  //   console.log(data?.relationships);\n\n  if (data != null && data.relationships) {\n    relation = data?.relationships.map((key) => {\n      console.log(key);\n      return (\n        <>\n          <Box\n            type=\"row\"\n            style={{ borderRight: \"1px solid gray\", paddingRight: \"30px\" }}\n          >\n            <Box\n              type=\"column\"\n              style={{\n                textAlign: \"center\",\n                padding: \"12px\",\n              }}\n            >\n              <H5 color={\"#6E798C\"} style={{ fontSize: \"1.15rem\" }}>\n                {/* {\"table Name: \"} */}\n                {key.relation_from.table_name}\n              </H5>\n              <H5 color={\"#6E798C\"} style={{ fontSize: \"1.15rem\" }}>\n                {/* {\"Field: \"} */}\n                {key.relation_from.column_name}\n              </H5>\n              <Para\n                color={\"#6E798C\"}\n                style={{\n                  fontWeight: \"600\",\n                  color: \"purple\",\n                  whiteSpace: \"nowrap\",\n                  fontSize: \"1.15rem\",\n                }}\n              >\n                {\"Relation From\"}\n              </Para>\n            </Box>\n            <Box type=\"column\" style={{ alignItems: \"center\" }}>\n              <Para style={{ paddinLeft: \"45px\" }}>{key.relation_type}</Para>\n              <Image src={`/${key.relation_type}.png`}></Image>\n            </Box>\n            <Box\n              type=\"column\"\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <H5 color={\"#6E798C\"} style={{ fontSize: \"1.15rem\" }}>\n                {/* {\"table Name: \"} */}\n                {key.relation_to.table_name}\n              </H5>\n              <H5 color={\"#6E798C\"} style={{ fontSize: \"1.15rem\" }}>\n                {/* {\"Field: \"} */}\n                {key.relation_to.column_name}\n              </H5>\n              <Para\n                color={\"#6E798C\"}\n                style={{\n                  fontWeight: \"600\",\n                  color: \"purple\",\n                  whiteSpace: \"nowrap\",\n                  fontSize: \"1.15rem\",\n                }}\n              >\n                {\"Relation To\"}\n              </Para>\n            </Box>\n          </Box>\n        </>\n      );\n    });\n  }\n  return isLoading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      {openModal === 3 ? (\n        <AppTableCreation\n          isOpen={isOpen}\n          onOpen={onOpen}\n          onClose={onClose}\n          appName={app}\n          basejwtPresent={\n            appData.data != null &&\n            appData.data[app][\"jwt_info\"] &&\n            appData.data[app][\"jwt_info\"]\n              ? appData.data[app][\"jwt_info\"]\n              : null\n          }\n          // connectionSelected={data[id].connection_name}\n          // columns={data[id].columns}\n        />\n      ) : null}\n      <Box type=\"heading\" textAlign=\"center\">\n        <Box type=\"row\" justifyContent=\"spacing-around\">\n          <H2> {app}</H2>\n          <Box type=\"row\" width={\"45%\"}>\n            <Button onClick={() => openModalHandler(3)}>\n              Create New Table\n            </Button>\n            <Button onClick={() => exportAppHandler()}>Export Your App</Button>\n            {/* <Button>Deploy Your App</Button> */}\n            <NavLink to={`/application/docs/${app}`}>\n              <Button>App Docs</Button>\n            </NavLink>\n          </Box>\n        </Box>\n      </Box>\n\n      <Box\n        display=\"grid\"\n        gridTemplateColumns={[\"1fr 1fr\", \"1fr 1fr 1fr \"]}\n        // mb={8}\n        gridGap={4}\n        style={{\n          margin: \"30px\",\n          marginLeft: \"70px\",\n          marginRight: \"70px\",\n          marginBottom: \"8px\",\n        }}\n      >\n        <MotionBox\n          transition={{ ease: \"easeOut\", duration: 0.3 }}\n          whileHover={{\n            boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n          }}\n          initial={{ y: 50, opacity: 0 }}\n          animate={{\n            y: 0,\n            opacity: 1,\n          }}\n          type=\"column\"\n          boxShadow=\"card\"\n          // bg={\"#800080\"}\n          p={3}\n          borderRadius=\"15px\"\n          alignItems=\"center\"\n          style={{\n            cursor: \"pointer\",\n            backgroundColor: \"white\",\n            border: \"2px solid rgb(110, 121, 140)\",\n          }}\n          // onClick={onClick}\n        >\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={[\"1fr 2fr\"]}\n            m={\"10px\"}\n            gridGap={\"2.25rem\"}\n            style={{\n              \"&:hover\": {\n                opacity: \".2\",\n              },\n            }}\n          >\n            <Box type=\"row\" justifyContent=\"center\">\n              <Icon as={BsTable} w={\"4rem\"} h={\"4rem\"} color={\"#4B0082\"} />\n            </Box>\n            <Box\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <H5 fontSize={10} color={\"#6E798C\"} lineHeight={10}>\n                {data?.number_of_tables}\n              </H5>\n              <Para\n                fontSize={6}\n                color={\"#6E798C\"}\n                style={{ fontWeight: \"600\" }}\n              >\n                {\"Tables\"}\n              </Para>\n            </Box>\n          </Box>\n        </MotionBox>\n        <MotionBox\n          transition={{ ease: \"easeOut\", duration: 0.3 }}\n          whileHover={{\n            boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n          }}\n          initial={{ y: 50, opacity: 0 }}\n          animate={{\n            y: 0,\n            opacity: 1,\n          }}\n          type=\"column\"\n          boxShadow=\"card\"\n          // bg={\"#800080\"}\n          p={3}\n          borderRadius=\"15px\"\n          alignItems=\"center\"\n          style={{\n            cursor: \"pointer\",\n            backgroundColor: \"white\",\n            border: \"2px solid rgb(110, 121, 140)\",\n          }}\n          // onClick={onClick}\n        >\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={[\"1fr 2fr\"]}\n            m={\"10px\"}\n            gridGap={\"2.25rem\"}\n          >\n            <Box type=\"row\" justifyContent=\"center\">\n              <Icon\n                as={BsFillLockFill}\n                w={\"4rem\"}\n                h={\"4rem\"}\n                color={\"#4B0082\"}\n              />\n            </Box>\n            <Box\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <H5 fontSize={10} color={\"#6E798C\"} lineHeight={10}>\n                {data?.relationships.length || 0}\n              </H5>\n              <Para\n                fontSize={6}\n                color={\"#6E798C\"}\n                style={{ fontWeight: \"600\" }}\n              >\n                {\"Relations\"}\n              </Para>\n            </Box>\n          </Box>\n        </MotionBox>\n        <MotionBox\n          transition={{ ease: \"easeOut\", duration: 0.3 }}\n          whileHover={{\n            boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n          }}\n          initial={{ y: 50, opacity: 0 }}\n          animate={{\n            y: 0,\n            opacity: 1,\n          }}\n          type=\"column\"\n          boxShadow=\"card\"\n          // bg={\"#800080\"}\n          p={3}\n          borderRadius=\"15px\"\n          alignItems=\"center\"\n          style={{\n            cursor: \"pointer\",\n            backgroundColor: \"white\",\n            border: \"2px solid rgb(110, 121, 140)\",\n          }}\n          // onClick={onClick}\n        >\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={[\"1fr 2fr\"]}\n            m={\"10px\"}\n            gridGap={\"2.25rem\"}\n          >\n            <Box type=\"row\" justifyContent=\"center\">\n              <Icon as={SiAmazonaws} w={\"4rem\"} h={\"4rem\"} color={\"#4B0082\"} />\n            </Box>\n            <Box\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <H5 fontSize={10} color={\"#6E798C\"} lineHeight={10}>\n                {data?.deployment_info?.total_no_exports}\n              </H5>\n              <Para\n                fontSize={6}\n                color={\"#6E798C\"}\n                style={{ fontWeight: \"600\" }}\n              >\n                {\"Deployed\"}\n              </Para>\n            </Box>\n          </Box>\n        </MotionBox>\n      </Box>\n\n      <Box\n        display=\"grid\"\n        gridTemplateColumns={[\"1fr\", \"1fr 1fr\"]}\n        // mb={8}\n        gridGap={4}\n        style={{\n          margin: \"30px\",\n          marginLeft: \"70px\",\n          marginRight: \"70px\",\n          marginTop: \"20px\",\n        }}\n      >\n        <MotionBox\n          transition={{ ease: \"easeOut\", duration: 0.3 }}\n          whileHover={{\n            boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n          }}\n          initial={{ y: 50, opacity: 0 }}\n          animate={{\n            y: 0,\n            opacity: 1,\n          }}\n          type=\"column\"\n          boxShadow=\"card\"\n          p={3}\n          borderRadius=\"15px\"\n          alignItems=\"center\"\n          style={{\n            cursor: \"pointer\",\n            backgroundColor: \"white\",\n            border: \"2px solid rgb(110, 121, 140)\",\n          }}\n          mb={5}\n        >\n          <H2\n            type=\"centerBorder\"\n            color={\"#6E798C\"}\n            style={{\n              width: \"100%\",\n              textAlign: \"left\",\n            }}\n          >\n            {\" \"}\n            {app}\n          </H2>\n\n          <Box\n            type=\"row\"\n            style={{\n              justifyContent: \"flex-start\",\n              margin: \"10px\",\n              width: \"100%\",\n            }}\n          >\n            <H5>Type Of Application: </H5>\n            <H5\n              ml={2}\n              style={{\n                color: \"#6E798C\",\n              }}\n            >\n              {data?.type}\n            </H5>\n          </Box>\n          <Box\n            type=\"row\"\n            style={{\n              justifyContent: \"flex-start\",\n              margin: \"10px\",\n              width: \"100%\",\n            }}\n          >\n            <H5>Database Type: </H5>\n            <H5\n              ml={2}\n              style={{\n                color: \"#6E798C\",\n              }}\n            >\n              {data?.db_type}\n            </H5>\n          </Box>\n\n          <Box\n            type=\"row\"\n            style={{\n              justifyContent: \"flex-start\",\n              margin: \"10px\",\n              width: \"100%\",\n            }}\n          >\n            <H5> Exported At: </H5>\n            <H5\n              ml={2}\n              style={{\n                color: \"#6E798C\",\n              }}\n            >\n              {data?.deployment_info?.most_recent_deployment ||\n                \"Not exported Yet!\"}\n            </H5>\n          </Box>\n          <Box\n            type=\"row\"\n            style={{\n              justifyContent: \"flex-start\",\n              margin: \"10px\",\n              width: \"100%\",\n            }}\n          >\n            <H5> Deployed At: </H5>\n            <H5\n              ml={2}\n              style={{\n                color: \"#6E798C\",\n              }}\n            >\n              {data?.deployment_info?.most_recent_deployment ||\n                \"Not deployed yet!\"}\n            </H5>\n          </Box>\n          <Box\n            type=\"row\"\n            style={{\n              justifyContent: \"flex-start\",\n              margin: \"10px\",\n              width: \"100%\",\n            }}\n          >\n            <H5> Deployment Platform: </H5>\n            <H5\n              ml={2}\n              style={{\n                color: \"#6E798C\",\n              }}\n            >\n              {data?.deployment_info?.platform || \"Not deployed yet!\"}\n            </H5>\n          </Box>\n        </MotionBox>\n\n        <MotionBox\n          transition={{ ease: \"easeOut\", duration: 0.3 }}\n          whileHover={{\n            boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n          }}\n          initial={{ y: 50, opacity: 0 }}\n          animate={{\n            y: 0,\n            opacity: 1,\n          }}\n          type=\"column\"\n          boxShadow=\"card\"\n          p={3}\n          borderRadius=\"15px\"\n          alignItems=\"center\"\n          style={{\n            cursor: \"pointer\",\n            backgroundColor: \"white\",\n            border: \"2px solid rgb(110, 121, 140)\",\n          }}\n          mb={5}\n        >\n          <Doughnut data={dataDoughnut} />\n          {/* <Box type=\"column\">\n            <Box style={{ marginTop: \"65px\" }}>\n              {\" \"}\n             \n            </Box> */}\n          {/* </Box> */}\n        </MotionBox>\n      </Box>\n      <Box\n        display=\"grid\"\n        gridTemplateColumns={[\"1fr\", \"1fr\"]}\n        // mb={8}\n        gridGap={4}\n        style={{\n          margin: \"30px\",\n          marginLeft: \"70px\",\n          marginRight: \"70px\",\n          marginTop: \"20px\",\n        }}\n      >\n        <MotionBox\n          transition={{ ease: \"easeOut\", duration: 0.3 }}\n          whileHover={{\n            boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n          }}\n          initial={{ y: 50, opacity: 0 }}\n          animate={{\n            y: 0,\n            opacity: 1,\n          }}\n          type=\"column\"\n          boxShadow=\"card\"\n          // bg={\"#800080\"}\n          p={3}\n          borderRadius=\"15px\"\n          alignItems=\"center\"\n          style={{\n            cursor: \"pointer\",\n            backgroundColor: \"white\",\n            border: \"2px solid rgb(110, 121, 140)\",\n          }}\n          // onClick={onClick}\n        >\n          <Line data={dataLine} height={80} />\n        </MotionBox>\n      </Box>\n\n      <MotionBox\n        transition={{ ease: \"easeOut\", duration: 0.3 }}\n        whileHover={{\n          boxShadow: \"0 4px 25px 0 rgba(0,0,0,.5)\",\n        }}\n        initial={{ y: 50, opacity: 0 }}\n        animate={{\n          y: 0,\n          opacity: 1,\n        }}\n        type=\"column\"\n        boxShadow=\"card\"\n        p={3}\n        borderRadius=\"15px\"\n        alignItems=\"center\"\n        style={{\n          cursor: \"pointer\",\n          backgroundColor: \"white\",\n          border: \"2px solid rgb(110, 121, 140)\",\n          margin: \"30px\",\n          marginLeft: \"70px\",\n          marginRight: \"70px\",\n          marginTop: \"20px\",\n        }}\n        mb={5}\n      >\n        <H2\n          type=\"centerBorder\"\n          color={\"#6E798C\"}\n          style={{\n            width: \"100%\",\n            textAlign: \"left\",\n          }}\n        >\n          {app} {\"Relationships\"}\n        </H2>\n        {data?.relationships?.length ? (\n          <Box\n            display=\"grid\"\n            gridTemplateColumns={[\"1fr\", \"1fr 1fr\"]}\n            // mb={8}\n            gridGap={4}\n            style={{}}\n          >\n            {relation}\n          </Box>\n        ) : (\n          <Para> Relationships have not defined between any tables yet!</Para>\n        )}\n      </MotionBox>\n      {/* <Box>\n       \n      </Box> */}\n    </>\n  );\n};\n\nexport default AppHome;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/AppDocs/AppDocs.js",["805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n  H5,\n  Para,\n} from \"../../styles\";\nimport { Icon } from \"@chakra-ui/react\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n} from \"@chakra-ui/react\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport { AiOutlineCloudServer } from \"react-icons/ai\";\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport CreateDatabase from \"../CreateDatabase/CreateDatabase\";\nimport Application from \"../Application/Application\";\nimport AwsDeploy from \"../../components/Modal/AwsDeploy\";\nimport { useIsFetching } from \"react-query\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { Chart } from \"chart.js\";\nimport { Doughnut, Line } from \"react-chartjs-2\";\nimport { useParams } from \"react-router\";\nimport AppTableCreation from \"../../components/Modal/AppTableCreation\";\nconst AppDocs = () => {\n  let { app } = useParams();\n  const queryClient = useQueryClient();\n  const userProfile = useQuery(APIURLS.userInfo);\n  const toast = createStandaloneToast();\n  //   const appsCreated = useQuery(APIURLS.dashboardInfo(app, all));\n\n  const { data, isLoading } = useQuery(APIURLS.appDocs(app));\n  console.log(data?.locked_tables[0]);\n\n  const isFetching = useIsFetching();\n\n  return isLoading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">App Docs </Span>\n      </Box>\n      {/* <H5 type=\"heading\" style={{ padding: \"20px\", marginTop: \"5px\" }}>\n        Unrestricted Tables\n      </H5> */}\n      <Accordion allowToggle style={{ padding: \"20px\" }}>\n        {data.app_type == \"JWT Authenticated\" ? (\n          <>\n            {/* <H5 type=\"heading\" style={{ padding: \"20px\", marginTop: \"5px\" }}>\n              Base Table\n            </H5> */}\n\n            {data?.base_table.map((key) => {\n              console.log(key.end_points);\n              return (\n                <>\n                  <Para fontSize={\"1.2rem\"} m={3}>\n                    {key?.name}\n                  </Para>\n                  {key?.end_points.map((api) => {\n                    console.log(\"aoi\", api.request_body);\n                    return (\n                      <AccordionItem>\n                        <h2>\n                          <AccordionButton>\n                            <Box type=\"row\" justifyContent=\"start\" width=\"100%\">\n                              {\" \"}\n                              <Button\n                                type=\"primary\"\n                                backgroundColor={\n                                  api.request_type === \"GET\"\n                                    ? \"#7bbef3\"\n                                    : api.request_type === \"POST\"\n                                    ? \"#48a58d\"\n                                    : api.request_type === \"PUT\"\n                                    ? \"#da9a5a\"\n                                    : api.request_type === \"DELETE\"\n                                    ? \"#c36666\"\n                                    : null\n                                }\n                              >\n                                {api.request_type}\n                              </Button>\n                              <Para ml={4} color={\"#2a3950\"}>\n                                {api.end_point}\n                              </Para>\n                            </Box>\n\n                            <AccordionIcon />\n                          </AccordionButton>\n                        </h2>\n                        <AccordionPanel\n                          pb={4}\n                          style={{ backgroundColor: \"#f7f8fb\" }}\n                        >\n                          <Box mb={2}>\n                            <H5 fontSize=\"1.1rem\">{\"Request Body\"}</H5>\n                          </Box>\n                          <Box type=\"column\">\n                            {key.request_body}\n                            {api?.request_body?.map((body) => {\n                              return (\n                                <>\n                                  <Box\n                                    style={{\n                                      borderBottom:\n                                        \"2px solid rgb(226 232 240)\",\n                                    }}\n                                  >\n                                    {\" \"}\n                                    <Para>Name: {body.prop_name}</Para>\n                                    <Para>Type: {body.prop_type}</Para>\n                                    <Para>\n                                      default: {body.prop_default || \"null\"}\n                                    </Para>\n                                  </Box>\n                                </>\n                              );\n                            })}\n                          </Box>\n                          <Box mb={2} mt={5}>\n                            <H5 fontSize=\"1.1rem\">{\"Response Body\"}</H5>\n                          </Box>\n                          <Box\n                            type=\"row\"\n                            justifyContent=\"start\"\n                            style={{ borderBottom: \"2px solid #8071b399\" }}\n                          >\n                            {\" \"}\n                            <Para>Code</Para>\n                            <Para ml={10}>Description</Para>\n                          </Box>\n                          <Box type=\"column\">\n                            {\" \"}\n                            {api?.response_body?.map((res) => {\n                              return (\n                                <>\n                                  <Box type=\"row\" justifyContent=\"start\">\n                                    <Para>{res.code}</Para>\n                                    {res.code == 200 &&\n                                    api.request_type == \"DELETE\" ? (\n                                      <Para ml={11}>{res.body}</Para>\n                                    ) : res.code == 200 &&\n                                      api.request_type != \"DELETE\" ? (\n                                      <Box type=\"coumn\">\n                                        <Box ml={11}>\n                                          <Para>\n                                            {\" \"}\n                                            Result: {res.body.result}\n                                          </Para>\n                                          <Para>id: {res.body.id}</Para>\n                                          <Para>\n                                            access_token:{\" \"}\n                                            {res.body.access_token}\n                                          </Para>\n                                          <Para>\n                                            refresh_token:{\" \"}\n                                            {res.body.refresh_token}\n                                          </Para>\n                                        </Box>\n                                      </Box>\n                                    ) : res.code === 400 ? (\n                                      <Para ml={11}> Error </Para>\n                                    ) : res.code === 500 ? (\n                                      <Para ml={11}> Server Error </Para>\n                                    ) : null}\n                                  </Box>\n                                </>\n                              );\n                            })}\n                          </Box>\n                        </AccordionPanel>\n                      </AccordionItem>\n                    );\n                  })}\n                </>\n              );\n            })}\n          </>\n        ) : null}\n        {/* <H5 type=\"heading\" style={{ padding: \"20px\", marginTop: \"5px\" }}>\n          Unrestricted Tables\n        </H5> */}\n\n        {data?.unrestricted_tables[0].map((key) => {\n          return (\n            <>\n              <Para fontSize={\"1.2rem\"} m={3}>\n                {key?.table_name}\n              </Para>\n              {key?.end_points.map((api) => {\n                console.log(\"aoi\", api);\n                return (\n                  <AccordionItem>\n                    <h2>\n                      <AccordionButton>\n                        <Box type=\"row\" justifyContent=\"start\" width=\"100%\">\n                          {\" \"}\n                          <Button\n                            type=\"primary\"\n                            backgroundColor={\n                              api.request_type === \"GET\"\n                                ? \"#7bbef3\"\n                                : api.request_type === \"POST\"\n                                ? \"#48a58d\"\n                                : api.request_type === \"PUT\"\n                                ? \"#da9a5a\"\n                                : api.request_type === \"DELETE\"\n                                ? \"#c36666\"\n                                : null\n                            }\n                          >\n                            {api.request_type}\n                          </Button>\n                          <Para ml={4} color={\"#2a3950\"}>\n                            {api.end_point}\n                          </Para>\n                        </Box>\n\n                        <AccordionIcon />\n                      </AccordionButton>\n                    </h2>\n                    <AccordionPanel\n                      pb={4}\n                      style={{ backgroundColor: \"#f7f8fb\" }}\n                    >\n                      <Box mb={2}>\n                        <H5 fontSize=\"1.1rem\">{\"Request Body\"}</H5>\n                      </Box>\n                      <Box type=\"column\">\n                        {\" \"}\n                        {api.request_body.map((body) => {\n                          return (\n                            <>\n                              <Box\n                                style={{\n                                  borderBottom: \"2px solid rgb(226 232 240)\",\n                                }}\n                              >\n                                {\" \"}\n                                <Para>Name: {body.prop_name}</Para>\n                                <Para>Type: {body.prop_type}</Para>\n                                <Para>\n                                  default: {body.prop_default || \"null\"}\n                                </Para>\n                              </Box>\n                            </>\n                          );\n                        })}\n                      </Box>\n                      <Box mb={2} mt={5}>\n                        <H5 fontSize=\"1.1rem\">{\"Response Body\"}</H5>\n                      </Box>\n                      <Box\n                        type=\"row\"\n                        justifyContent=\"start\"\n                        style={{ borderBottom: \"2px solid #8071b399\" }}\n                      >\n                        {\" \"}\n                        <Para>Code</Para>\n                        <Para ml={10}>Description</Para>\n                      </Box>\n                      <Box type=\"column\">\n                        {\" \"}\n                        {api.response_body.map((res) => {\n                          return (\n                            <>\n                              <Box type=\"row\" justifyContent=\"start\">\n                                <Para>{res.code}</Para>\n                                {res.code == 200 &&\n                                api.request_type == \"DELETE\" ? (\n                                  <Para ml={11}>{res.body}</Para>\n                                ) : res.code == 200 &&\n                                  api.request_type != \"DELETE\" ? (\n                                  <Box type=\"coumn\">\n                                    {res?.body?.map((body) => {\n                                      return (\n                                        <>\n                                          <Box ml={11}>\n                                            <Para>Name: {body.prop_name}</Para>\n                                            <Para>Type: {body.prop_type}</Para>\n                                            <Para>\n                                              default:{\" \"}\n                                              {body.prop_default || \"null\"}\n                                            </Para>\n                                          </Box>\n                                        </>\n                                      );\n                                    })}\n                                  </Box>\n                                ) : res.code === 400 ? (\n                                  <Para ml={11}> Error </Para>\n                                ) : res.code === 500 ? (\n                                  <Para ml={11}> Server Error </Para>\n                                ) : null}\n                              </Box>\n                            </>\n                          );\n                        })}\n                      </Box>\n                    </AccordionPanel>\n                  </AccordionItem>\n                );\n              })}\n            </>\n          );\n        })}\n        {data.app_type == \"JWT Authenticated\" ? (\n          <>\n            {\" \"}\n            {/* <H5 type=\"heading\" style={{ padding: \"20px\", marginTop: \"5px\" }}>\n              Locked Tables\n            </H5> */}\n            {data?.locked_tables[0].map((key) => {\n              return (\n                <>\n                  <Para fontSize={\"1.2rem\"} m={3} ml={4}>\n                    {key?.table_name}\n                  </Para>\n                  {key?.end_points.map((api) => {\n                    console.log(\"aoi\", api);\n                    return (\n                      <AccordionItem>\n                        <h2>\n                          <AccordionButton>\n                            <Box type=\"row\" justifyContent=\"start\" width=\"100%\">\n                              {\" \"}\n                              <Button\n                                type=\"primary\"\n                                backgroundColor={\n                                  api.request_type === \"GET\"\n                                    ? \"#7bbef3\"\n                                    : api.request_type === \"POST\"\n                                    ? \"#48a58d\"\n                                    : api.request_type === \"PUT\"\n                                    ? \"#da9a5a\"\n                                    : api.request_type === \"DELETE\"\n                                    ? \"#c36666\"\n                                    : null\n                                }\n                              >\n                                {api.request_type}\n                              </Button>\n                              <Para ml={4} color={\"#2a3950\"}>\n                                {api.end_point}\n                              </Para>\n                            </Box>\n\n                            <AccordionIcon />\n                          </AccordionButton>\n                        </h2>\n                        <AccordionPanel\n                          pb={4}\n                          style={{ backgroundColor: \"#f7f8fb\" }}\n                        >\n                          <Box mb={2}>\n                            <H5 fontSize=\"1.1rem\">{\"Request Body\"}</H5>\n                          </Box>\n                          <Box type=\"column\">\n                            {\" \"}\n                            {api.request_body.map((body) => {\n                              return (\n                                <>\n                                  <Box\n                                    style={{\n                                      borderBottom:\n                                        \"2px solid rgb(226 232 240)\",\n                                    }}\n                                  >\n                                    {\" \"}\n                                    <Para>Name: {body.prop_name}</Para>\n                                    <Para>Type: {body.prop_type}</Para>\n                                    <Para>\n                                      default: {body.prop_default || \"null\"}\n                                    </Para>\n                                  </Box>\n                                </>\n                              );\n                            })}\n                          </Box>\n                          <Box mb={2} mt={5}>\n                            <H5 fontSize=\"1.1rem\">{\"Response Body\"}</H5>\n                          </Box>\n                          <Box\n                            type=\"row\"\n                            justifyContent=\"start\"\n                            style={{ borderBottom: \"2px solid #8071b399\" }}\n                          >\n                            {\" \"}\n                            <Para>Code</Para>\n                            <Para ml={10}>Description</Para>\n                          </Box>\n                          <Box type=\"column\">\n                            {\" \"}\n                            {api.response_body.map((res) => {\n                              return (\n                                <>\n                                  <Box type=\"row\" justifyContent=\"start\">\n                                    <Para>{res.code}</Para>\n                                    {res.code == 200 &&\n                                    api.request_type == \"DELETE\" ? (\n                                      <Para ml={11}>{res.body}</Para>\n                                    ) : res.code == 200 &&\n                                      api.request_type != \"DELETE\" ? (\n                                      <Box type=\"coumn\">\n                                        {res?.body?.map((body) => {\n                                          return (\n                                            <>\n                                              <Box ml={11}>\n                                                <Para>\n                                                  Name: {body.prop_name}\n                                                </Para>\n                                                <Para>\n                                                  Type: {body.prop_type}\n                                                </Para>\n                                                <Para>\n                                                  default:{\" \"}\n                                                  {body.prop_default || \"null\"}\n                                                </Para>\n                                              </Box>\n                                            </>\n                                          );\n                                        })}\n                                      </Box>\n                                    ) : res.code === 400 ? (\n                                      <Para ml={11}> Error </Para>\n                                    ) : res.code === 500 ? (\n                                      <Para ml={11}> Server Error </Para>\n                                    ) : null}\n                                  </Box>\n                                </>\n                              );\n                            })}\n                          </Box>\n                        </AccordionPanel>\n                      </AccordionItem>\n                    );\n                  })}\n                </>\n              );\n            })}\n          </>\n        ) : null}\n      </Accordion>\n    </>\n  );\n};\n\nexport default AppDocs;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/AwsDeploy.js",["849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaAws } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport { useIsFetching } from \"react-query\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst AwsDeploy = (\n  userCredential,\n  setStep,\n  userConfig,\n  setUserCredential,\n  rdsConfig\n  // ec\n) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [selectedApp, setSelectedApp] = useState();\n  const [loading, setLoading] = useState(false);\n  const [provisionDb, setProvisionDb] = useState();\n  // const queryClient = useQueryClient();\n  const isFetching = useIsFetching();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n\n  const [deviceList, setDeviceList] = useState([]);\n  const [instanceType, setInstanceType] = useState();\n  const [imageId, setImageId] = useState();\n  const [deviceName, setDeviceName] = useState();\n  const [engineType, setEngineType] = useState();\n  const [volumeType, setVolumeType] = useState();\n  const [volumeSize, setVolumeSize] = useState();\n  const [deleteOnTermination, setDeleteOnTermination] = useState();\n\n  async function handleSignup(params) {\n    setLoading(true);\n    let obj = {\n      app_name: userCredential.app_name,\n      user_credentials: {\n        aws_username: userCredential.user_credentials.aws_username,\n        aws_secret_key: userCredential.user_credentials.aws_secret_key,\n        aws_access_key: userCredential.user_credentials.aws_access_key,\n      },\n      config: {\n        region_name: userCredential.config.region_name,\n        signature_version: userCredential.config.signature_version,\n        //  \"retries\": {\n        //      \"max_attempts\":\"string\",\n        //      \"mode\": \"string\"\n        //      }\n      },\n      rds_config: {\n        Engine: userCredential.rds_config.Engine,\n        AllocatedStorage: userCredential.rds_config.AllocatedStorage,\n        DBInstanceIdentifier: userCredential.rds_config.DBInstanceIdentifier,\n        DBInstanceClass: userCredential.rds_config.DBInstanceClass,\n        MasterUsername: userCredential.rds_config.MasterUsername,\n        MasterUserPassword: userCredential.rds_config.MasterUserPassword,\n        MaxAllocatedStorage: userCredential.rds_config.MaxAllocatedStorage,\n      },\n      ec2_config: {\n        BlockDeviceMappings: deviceList,\n        InstanceType: params.InstanceType,\n        ImageId: params.ImageId,\n        // \"ami-0885b1f6bd170450c\"\n      },\n    };\n    console.log(obj);\n    try {\n      console.log(params);\n\n      console.log(\"Obj\", obj);\n      // setUserCredential();\n      console.log(obj);\n      let { data } = await Api.post(APIURLS.awsExport1(), obj);\n      // toast({\n      //   title: \"Success\",\n      //   description: data?.result,\n      //   status: \"success\",\n      //   duration: 9000,\n      //   isClosable: false,\n      // });\n\n      // console.log(data);\n\n      setLoading(false);\n    } catch ({ response }) {\n      setLoading(false);\n    }\n  }\n\n  const addDeviceHandler = () => {\n    setDeviceList([\n      ...deviceList,\n      {\n        DeviceName: deviceName,\n        Ebs: {\n          DeleteOnTermination: deleteOnTermination,\n          VolumeSize: volumeSize,\n          VolumeType: volumeType,\n        },\n      },\n    ]);\n    // setUsername();\n    // setUserEmail();\n  };\n  const removeDeviceHandler = (index) => {\n    let newDeviceList = [];\n    for (let key in deviceList) {\n      console.log(deviceList[key], \"key\", key);\n      if (key != index) {\n        newDeviceList.push(deviceList[key]);\n      }\n    }\n    //  userList.slice(0, index).concat(userList.slice(-index));\n    console.log(newDeviceList);\n    setDeviceList(newDeviceList);\n    // console.log(userList.splice(index, 1))\n  };\n\n  return loading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">Deploy Your App on AWS</Span>\n      </Box>\n      <Box type=\"row\" justifyContent=\"center\">\n        <Box\n          type=\"row\"\n          justifyContent=\"center\"\n          mt={8}\n          style={{ width: \"34vw\" }}\n        >\n          <Box>\n            <H5 m={2} ml=\"0px\">\n              EC2 Config\n            </H5>\n            <Para type=\"info\">\n              This specifies values that need to be configured for the instances\n              storage, each block device needs to be added to the list\n              separately. the defaults provided:\n            </Para>\n            <Label>Device Name</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"DeviceName\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                // value={ec2Config.ec2_config.BlockDeviceMappings[0].DeviceName}\n                width=\"100%\"\n                // ref={register}\n                mb={2}\n                onChange={(e) => setDeviceName(e.target.value)}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>Delete On Termination</Label>\n            <Para type=\"info\">\n              if true all backed up sotrage and snapshots of volume are lost and\n              instance cannot be reverted to it's initial AMI state.\n            </Para>\n            <Box type=\"relative\">\n              <Input\n                name={\"DeleteOnTermination\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                // ref={register}\n                mb={2}\n                onChange={(e) => setDeleteOnTermination(e.target.value)}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>VolumeSize</Label>\n            <Para type=\"info\">\n              VolumeSize specifies the size of the attached block device in GBs\n            </Para>\n            <Box type=\"relative\">\n              <Input\n                name={\"VolumeSize\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                // ref={register}\n                mb={2}\n                onChange={(e) => setVolumeSize(e.target.value)}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>Volume Type</Label>\n            <Para type=\"info\">\n              VolumeType can be one of gp3, gp2 for General purpose SSD and one\n              of io2, io1 for a Provisioned IOPS SSD, more information can be\n              found [at]\n              <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html\">\n                https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html\n              </a>\n            </Para>\n            <Box type=\"relative\">\n              <Input\n                name={\"VolumeType\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                // ref={register}\n                mb={2}\n                onChange={(e) => setVolumeType(e.target.value)}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n\n            <Box style={{ textAlign: \"center\" }}>\n              <Icon\n                as={BsPlusCircleFill}\n                w={\"3.5rem\"}\n                h={\"3.5rem\"}\n                color={\"rgb(56 46 108 / 92%)\"}\n                mt={5}\n                onClick={addDeviceHandler}\n              />\n            </Box>\n            <Box>\n              {deviceList.map((key, index) => {\n                // let user = Object.keys(key)[0];\n                console.log(index);\n                return (\n                  <Box\n                    boxShadow=\"card\"\n                    type=\"row\"\n                    justifyContent=\"space-between\"\n                    style={{\n                      height: \"50px\",\n                      backgroundColor: \"rgb(241 218 249)\",\n                    }}\n                    m={4}\n                    p={2}\n                  >\n                    <Box type=\"row\" justifyContent=\"flex-start\">\n                      <Icon\n                        as={FaAws}\n                        w={\"1.5rem\"}\n                        h={\"1.5rem\"}\n                        color={\"rgb(157 57 160 / 87%)\"}\n                      />\n                      {/* <Para ml={2}> {user}</Para> */}\n                      <Para ml={2}> {key.DeviceName}</Para>\n                    </Box>\n                    <Box>\n                      <Icon\n                        as={AiOutlineDelete}\n                        w={\"1.5rem\"}\n                        h={\"1.5rem\"}\n                        color={\"red\"}\n                        onClick={() => removeDeviceHandler(index)}\n                      />\n                    </Box>\n                  </Box>\n                );\n              })}\n            </Box>\n            <form\n              onSubmit={handleSubmit(handleSignup)}\n              style={{ width: \"34vw\" }}\n            >\n              <Label>Instance Type</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"InstanceType\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setInstanceType(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>ImageId</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"ImageId\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setImageId(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {\"Deploy\"}\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default AwsDeploy;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/HerokuDeploy.js",["880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaAws } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport { useIsFetching } from \"react-query\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst HerokuDeploy = () => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [selectedApp, setSelectedApp] = useState();\n  const [loading, setLoading] = useState(false);\n  const [provisionDb, setProvisionDb] = useState();\n  // const queryClient = useQueryClient();\n  const isFetching = useIsFetching();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  const { data } = useQuery([APIURLS.getContentType], {\n    enabled: !!token,\n  });\n\n  let selectAppName = [];\n  if (data) {\n    for (let key in data) {\n      selectAppName.push({\n        value: key,\n        label: key,\n      });\n    }\n  }\n\n  async function handleSignup(params) {\n    setLoading(true);\n    try {\n      let obj = {\n        app_name: selectedApp,\n        provision_db: provisionDb,\n        // \"tier\": \"hobby-dev\"\n      };\n      let { data } = await Api.post(APIURLS.herokuExport(), obj);\n\n      toast({\n        title: \"Success\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      //   await queryClient.refetchQueries([\n      //     APIURLS.getTableContent({ app, table }),\n      //     \"jwt_info\",\n      //   ]);\n      setLoading(false);\n    } catch ({ response }) {\n      setLoading(false);\n    }\n  }\n\n  return loading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">Deploy Your App on Heroku</Span>\n      </Box>\n      <Box type=\"row\" justifyContent=\"center\" mt={8}>\n        <form onSubmit={handleSubmit(handleSignup)} style={{ width: \"35vw\" }}>\n          <Label>App name</Label>\n          <Box\n            style={{\n              marginBottom: \"1.5rem\",\n              color: \"#6E798C\",\n              fontSize: \"1.25rem\",\n            }}\n          >\n            <Select\n              key={1}\n              required\n              onChange={({ value }) => setSelectedApp(value)}\n              theme={CARD_ELEMENT_OPTIONS}\n              placeholder=\"Select App \"\n              options={selectAppName}\n            />\n          </Box>\n          <Label>provision DB</Label>\n\n          <Box\n            style={{\n              marginBottom: \"1.5rem\",\n              color: \"#6E798C\",\n              fontSize: \"1.25rem\",\n            }}\n          >\n            <Select\n              key={1}\n              required\n              onChange={({ value }) => setProvisionDb(value)}\n              theme={CARD_ELEMENT_OPTIONS}\n              placeholder=\"provision DB\"\n              options={[\n                {\n                  value: true,\n                  label: \"True\",\n                },\n                {\n                  value: false,\n                  label: \"False\",\n                },\n              ]}\n            />\n          </Box>\n\n          {/* <Label>Tier</Label>\n                  <Box type=\"relative\">\n                    <Input\n                      name={\"tier\"}\n                      color=\"grey\"\n                      fontSize={3}\n                      p={2}\n                      required\n                      width=\"100%\"\n                      ref={register}\n                      mb={2}\n                    />\n\n                    {errors?.name && (\n                      <Span color=\"orange\" mb={4}>\n                        {errors?.name?.message}\n                      </Span>\n                    )}\n                  </Box> */}\n          <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n            {\"Deploy\"}\n          </Button>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default HerokuDeploy;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/Deploy.js",["905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920"],"/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/UserCredentials.js",["921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaAws } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport { useIsFetching } from \"react-query\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Deploy = ({ setStep, setUserConfig, setUserCredential }) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [selectedApp, setSelectedApp] = useState();\n  const [loading, setLoading] = useState(false);\n  const [provisionDb, setProvisionDb] = useState();\n  // const queryClient = useQueryClient();\n  const isFetching = useIsFetching();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  const { data } = useQuery([APIURLS.getContentType], {\n    enabled: !!token,\n  });\n\n  let selectAppName = [];\n  if (data) {\n    for (let key in data) {\n      selectAppName.push({\n        value: key,\n        label: key,\n      });\n    }\n  }\n\n  async function handleSignup(params) {\n    // setLoading(true);\n    try {\n      let obj = {\n        app_name: selectedApp,\n        aws_username: params.aws_username,\n        aws_secret_key: params.aws_secret_key,\n        aws_access_key: params.aws_access_key,\n      };\n\n      //   let { data } = await Api.post(APIURLS.awsExport(), obj);\n      setUserCredential(obj);\n      let { data } = await Api.post(APIURLS.getUserCongif(), {\n        aws_username: params.aws_username,\n        aws_secret_key: params.aws_secret_key,\n        aws_access_key: params.aws_access_key,\n      });\n      console.log(data);\n      setUserConfig(data);\n      setStep(2);\n\n      //   toast({\n      //     title: \"Success\",\n      //     description: data?.result,\n      //     status: \"success\",\n      //     duration: 9000,\n      //     isClosable: false,\n      //   });\n\n      //   setLoading(false);\n      //   onClose();\n    } catch ({ response }) {\n      //   setLoading(false);\n    }\n  }\n\n  return loading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">Deploy Your App on AWS</Span>\n      </Box>\n      <Box type=\"row\" justifyContent=\"center\" mt={8}>\n        <form onSubmit={handleSubmit(handleSignup)} style={{ width: \"34vw\" }}>\n          <Box>\n            <Box>\n              <Label mt={8}>App name</Label>\n              <Box\n                style={{\n                  marginBottom: \"1.5rem\",\n                  color: \"#6E798C\",\n                  fontSize: \"1.25rem\",\n                }}\n              >\n                <Select\n                  key={1}\n                  required\n                  onChange={({ value }) => setSelectedApp(value)}\n                  theme={CARD_ELEMENT_OPTIONS}\n                  placeholder=\"Select App \"\n                  options={selectAppName}\n                />\n              </Box>\n              <H5 m={2} ml=\"0px\">\n                Credentials\n              </H5>\n              <Label>AWS Username</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"aws_username\"}\n                  color=\"grey\"\n                  required\n                  fontSize={3}\n                  p={2}\n                  // defaultValue={editDataId ? data?.result[val.name] : null}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>AWS Secret Key</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"aws_secret_key\"}\n                  color=\"grey\"\n                  required\n                  fontSize={3}\n                  p={2}\n                  // defaultValue={editDataId ? data?.result[val.name] : null}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>AWS Access Key</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"aws_access_key\"}\n                  color=\"grey\"\n                  required\n                  fontSize={3}\n                  p={2}\n                  // defaultValue={editDataId ? data?.result[val.name] : null}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {\"Next\"}\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default Deploy;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/UserConfig.js",["946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaAws } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport { useIsFetching } from \"react-query\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Deploy = ({\n  userCredential,\n  setStep,\n  userConfig,\n  setUserCredential,\n  setRdsConfig,\n}) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [selectedApp, setSelectedApp] = useState();\n  const [selectedRegion, setSelectedRegion] = useState();\n  const [loading, setLoading] = useState(false);\n  const [provisionDb, setProvisionDb] = useState();\n  // const queryClient = useQueryClient();\n  const isFetching = useIsFetching();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  const { data } = useQuery([APIURLS.getContentType], {\n    enabled: !!token,\n  });\n\n  console.log(userConfig.config, \"userConfig\");\n  const [deviceList, setDeviceList] = useState([]);\n  const [instanceType, setInstanceType] = useState();\n  const [imageId, setImageId] = useState();\n  const [deviceName, setDeviceName] = useState();\n  const [engineType, setEngineType] = useState();\n  const [volumeType, setVolumeType] = useState();\n  const [volumeSize, setVolumeSize] = useState();\n  const [deleteOnTermination, setDeleteOnTermination] = useState();\n  console.log(userCredential);\n  let selectAppName = [];\n  if (data) {\n    for (let key in data) {\n      selectAppName.push({\n        value: key,\n        label: key,\n      });\n    }\n  }\n  let selectRegion = [];\n  if (userConfig.config) {\n    let data = userConfig.config.region_name;\n    for (let key in data) {\n      selectRegion.push({\n        value: data[key],\n        label: data[key],\n      });\n    }\n  }\n  console.log(\"selectRegion\", selectRegion);\n  //   const columnTypes = useQuery(APIURLS.getColumnTypes);\n  //   const contentType = useQuery([APIURLS.getContentType], {\n  //     enabled: !!token,\n  //   });\n  //   const { data } = useQuery(\n  //     [APIURLS.getTableContentById({ app, table, editDataId }), basejwt],\n  //     {\n  //       enabled: !!token,\n  //     }\n  //   );\n  //   console.log(data?.result);\n  //   const [loading, setLoading] = useState(false);\n  //   const [success, setSuccess] = useState(false);\n  //   const [apiErr, setApiErr] = useState(null);\n  //   const queryClient = useQueryClient();\n  //   const toast = createStandaloneToast();\n  //   console.log(restrictByJwt);\n\n  async function handleSignup(params) {\n    setLoading(true);\n    try {\n      let obj = {\n        app_name: userCredential.app_name,\n        user_credentials: {\n          aws_username: userCredential.aws_username,\n          aws_secret_key: userCredential.aws_secret_key,\n          aws_access_key: userCredential.aws_access_key,\n        },\n        config: {\n          region_name: selectedRegion,\n          signature_version: params.signature_version,\n          //  \"retries\": {\n          //      \"max_attempts\":\"string\",\n          //      \"mode\": \"string\"\n          //      }\n        },\n      };\n      console.log(obj);\n      setUserCredential(obj);\n      let { data } = await Api.post(APIURLS.getUserRdsCongif(), {\n        aws_username: params.aws_username,\n        aws_secret_key: params.aws_secret_key,\n        aws_access_key: params.aws_access_key,\n      });\n      console.log(data);\n      setRdsConfig(data);\n      setStep(3);\n      setLoading(false);\n      //   let { data } = await Api.post(APIURLS.awsExport(), obj);\n    } catch ({ response }) {\n      setLoading(false);\n    }\n  }\n\n  return loading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">Deploy Your App on AWS</Span>\n      </Box>\n      <Box type=\"row\" justifyContent=\"center\" mt={8}>\n        <form onSubmit={handleSubmit(handleSignup)} style={{ width: \"34vw\" }}>\n          <Box>\n            <Box>\n              <H5 m={2} ml=\"0px\">\n                Config\n              </H5>\n\n              <Label>Region Name</Label>\n              <Para type=\"info\">\n                This indicates the region where the EC2 instance as well as RDS\n                will be created in, please ensure you choose a region that has\n                SSM, RDS and EC2 services.\n                {/* Detialed information of the services can be found\n[on amazons webpage](https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/]) */}\n              </Para>\n\n              <Box\n                style={{\n                  marginBottom: \"1.5rem\",\n                  color: \"#6E798C\",\n                  fontSize: \"1.25rem\",\n                }}\n              >\n                <Select\n                  key={1}\n                  required\n                  onChange={({ value }) => setSelectedRegion(value)}\n                  theme={CARD_ELEMENT_OPTIONS}\n                  placeholder=\"Select App \"\n                  options={selectRegion}\n                />\n              </Box>\n\n              <Label>Signature Version</Label>\n              <Para type=\"info\">\n                This outlines the method used by AWS for authenticating\n                requests. Version 4 is the most stable and reccomended protocol.\n                {/* Detialed information of the services can be found\n[on amazons webpage](https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/]) */}\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"signature_version\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  defaultValue={userConfig.config.signature_version}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {\"Next\"}\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default Deploy;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Plugins/Twilio.js",["987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { MdEmail, MdTextsms } from \"react-icons/md\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaUser } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport Select from \"react-select\";\n\nconst Notify = (props) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [username, setUsername] = useState();\n  const [userEmail, setUserEmail] = useState();\n  const [userList, setUserList] = useState([]);\n  // const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  const { data } = useQuery([APIURLS.getContentType], {\n    enabled: !!token,\n  });\n  console.log(username, \"user\", userEmail);\n  //   let contentTypeApps = null;\n  let selectAppName = [];\n  if (data) {\n    for (let key in data) {\n      selectAppName.push({\n        value: key,\n        label: key,\n      });\n    }\n  }\n\n  async function handleSignup(params) {\n    try {\n      if (toggle) {\n        let obj = {\n          _from: params._from,\n          api_key: params.api_key,\n          to_emails: userList,\n          template_key: params.template_key,\n          subject: params.subject,\n          content: params.content,\n        };\n        let { data } = await Api.post(APIURLS.emailNotify(), obj);\n      } else {\n        let obj = {\n          account_sid: params.account_sid,\n          auth_token: params.auth_token,\n          _from: params._from,\n          to_emails: userList,\n          message: params.message,\n          // \"tier\": \"hobby-dev\"\n        };\n        let { data } = await Api.post(APIURLS.smsNotify(), obj);\n      }\n\n      toast({\n        title: \"Success\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      //   await queryClient.refetchQueries([\n      //     APIURLS.getTableContent({ app, table }),\n      //     \"jwt_info\",\n      //   ]);\n\n      //   onClose();\n    } catch ({ response }) {}\n  }\n  const addUserHandler = () => {\n    setUserList([...userList, { [username]: userEmail }]);\n    setUsername();\n    setUserEmail();\n  };\n  const removeUserHandler = (index) => {\n    let newUserList = [];\n    for (let key in userList) {\n      console.log(userList[key], \"key\", key);\n      if (key != index) {\n        newUserList.push(userList[key]);\n      }\n    }\n    //  userList.slice(0, index).concat(userList.slice(-index));\n    console.log(newUserList);\n    setUserList(newUserList);\n    // console.log(userList.splice(index, 1))\n  };\n\n  console.log(\"list\", userList);\n  return (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">TWILIO</Span>\n      </Box>\n\n      <Box\n        display=\"grid\"\n        gridTemplateColumns={[\"1fr\", \"1fr 1fr\"]}\n        // mb={8}\n        gridGap={4}\n        style={{\n          padding: \"40px\",\n        }}\n      >\n        <Box type=\"row\" justifyContent=\"center\" m={6}>\n          <form onSubmit={handleSubmit(handleSignup)} style={{ width: \"35vw\" }}>\n            <Label>Twilio's Account Sid</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"account_sid\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>Twilio's Auth Token</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"auth_token\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>SMS From</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"_from\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>Message</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"message\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n              {\"Send\"}\n            </Button>\n          </form>\n        </Box>\n        <Box>\n          <Label mt={6}>Username</Label>\n          <Box type=\"relative\">\n            <Input\n              name={\"_from\"}\n              color=\"grey\"\n              fontSize={3}\n              p={2}\n              required\n              width=\"100%\"\n              ref={register}\n              mb={2}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n\n            {errors?.name && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.name?.message}\n              </Span>\n            )}\n          </Box>\n          <Label>User Email ID</Label>\n          <Box type=\"relative\">\n            <Input\n              name={\"message\"}\n              color=\"grey\"\n              fontSize={3}\n              p={2}\n              required\n              width=\"100%\"\n              ref={register}\n              mb={2}\n              onChange={(e) => setUserEmail(e.target.value)}\n            />\n\n            {errors?.name && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.name?.message}\n              </Span>\n            )}\n          </Box>\n          <Box style={{ textAlign: \"center\" }}>\n            <Icon\n              as={BsPlusCircleFill}\n              w={\"3.5rem\"}\n              h={\"3.5rem\"}\n              color={\"rgb(56 46 108 / 92%)\"}\n              mt={5}\n              onClick={addUserHandler}\n            />\n          </Box>\n          <Box>\n            {userList.map((key, index) => {\n              let user = Object.keys(key)[0];\n              console.log(index);\n              return (\n                <Box\n                  boxShadow=\"card\"\n                  type=\"row\"\n                  justifyContent=\"space-between\"\n                  style={{\n                    height: \"50px\",\n                    backgroundColor: \"rgb(241 218 249)\",\n                  }}\n                  m={4}\n                  p={2}\n                >\n                  <Box type=\"row\" justifyContent=\"flex-start\">\n                    <Icon\n                      as={FaUser}\n                      w={\"1.5rem\"}\n                      h={\"1.5rem\"}\n                      color={\"rgb(157 57 160 / 87%)\"}\n                    />\n                    {/* <Para ml={2}> {user}</Para> */}\n                    <Para ml={2}> {key[user]}</Para>\n                  </Box>\n                  <Box>\n                    <Icon\n                      as={AiOutlineDelete}\n                      w={\"1.5rem\"}\n                      h={\"1.5rem\"}\n                      color={\"red\"}\n                      onClick={() => removeUserHandler(index)}\n                    />\n                  </Box>\n                </Box>\n              );\n            })}\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default Notify;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Plugins/Sendgrid.js",["1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { MdEmail, MdTextsms } from \"react-icons/md\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaUser } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport Select from \"react-select\";\n\nconst Sendgrid = (props) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [username, setUsername] = useState();\n  const [userEmail, setUserEmail] = useState();\n  const [userList, setUserList] = useState([]);\n  // const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  const { data } = useQuery([APIURLS.getContentType], {\n    enabled: !!token,\n  });\n  console.log(username, \"user\", userEmail);\n  //   let contentTypeApps = null;\n  let selectAppName = [];\n  if (data) {\n    for (let key in data) {\n      selectAppName.push({\n        value: key,\n        label: key,\n      });\n    }\n  }\n\n  async function handleSignup(params) {\n    try {\n      if (toggle) {\n        let obj = {\n          _from: params._from,\n          api_key: params.api_key,\n          to_emails: userList,\n          template_key: params.template_key,\n          subject: params.subject,\n          content: params.content,\n        };\n        let { data } = await Api.post(APIURLS.emailNotify(), obj);\n      } else {\n        let obj = {\n          account_sid: params.account_sid,\n          auth_token: params.auth_token,\n          _from: params._from,\n          to_emails: userList,\n          message: params.message,\n          // \"tier\": \"hobby-dev\"\n        };\n        let { data } = await Api.post(APIURLS.smsNotify(), obj);\n      }\n\n      toast({\n        title: \"Success\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      //   await queryClient.refetchQueries([\n      //     APIURLS.getTableContent({ app, table }),\n      //     \"jwt_info\",\n      //   ]);\n\n      //   onClose();\n    } catch ({ response }) {}\n  }\n  const addUserHandler = () => {\n    setUserList([...userList, { [username]: userEmail }]);\n    setUsername();\n    setUserEmail();\n  };\n  const removeUserHandler = (index) => {\n    let newUserList = [];\n    for (let key in userList) {\n      console.log(userList[key], \"key\", key);\n      if (key != index) {\n        newUserList.push(userList[key]);\n      }\n    }\n    //  userList.slice(0, index).concat(userList.slice(-index));\n    console.log(newUserList);\n    setUserList(newUserList);\n    // console.log(userList.splice(index, 1))\n  };\n\n  console.log(\"list\", userList);\n  return (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">SENDGRID</Span>\n      </Box>\n      <Box\n        display=\"grid\"\n        gridTemplateColumns={[\"1fr\", \"1fr 1fr\"]}\n        // mb={8}\n        gridGap={4}\n        style={{\n          padding: \"40px\",\n        }}\n      >\n        <Box type=\"row\" justifyContent=\"center\" m={6}>\n          <form onSubmit={handleSubmit(handleSignup)} style={{ width: \"35vw\" }}>\n            <Label>Sendgrid's Email ID</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"_from\"}\n                color=\"grey\"\n                required\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>Sendgrid's Api key</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"api_key\"}\n                color=\"grey\"\n                required\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>Sendgrid's Template key</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"template_key\"}\n                color=\"grey\"\n                required\n                fontSize={3}\n                p={2}\n                // defaultValue={editDataId ? data?.result[val.name] : null}\n                width=\"100%\"\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n\n            <Label>Subject</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"region_name\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>Content</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"content\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                // defaultValue={editDataId ? data?.result[val.name] : null}\n                width=\"100%\"\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n\n            <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n              {\"Send\"}\n            </Button>\n          </form>\n        </Box>\n\n        <Box>\n          <Label mt={6}>Username</Label>\n          <Box type=\"relative\">\n            <Input\n              name={\"_from\"}\n              color=\"grey\"\n              fontSize={3}\n              p={2}\n              required\n              width=\"100%\"\n              ref={register}\n              mb={2}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n\n            {errors?.name && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.name?.message}\n              </Span>\n            )}\n          </Box>\n          <Label>User Email ID</Label>\n          <Box type=\"relative\">\n            <Input\n              name={\"message\"}\n              color=\"grey\"\n              fontSize={3}\n              p={2}\n              required\n              width=\"100%\"\n              ref={register}\n              mb={2}\n              onChange={(e) => setUserEmail(e.target.value)}\n            />\n\n            {errors?.name && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.name?.message}\n              </Span>\n            )}\n          </Box>\n          <Box style={{ textAlign: \"center\" }}>\n            <Icon\n              as={BsPlusCircleFill}\n              w={\"3.5rem\"}\n              h={\"3.5rem\"}\n              color={\"rgb(56 46 108 / 92%)\"}\n              mt={5}\n              onClick={addUserHandler}\n            />\n          </Box>\n          <Box>\n            {userList.map((key, index) => {\n              let user = Object.keys(key)[0];\n              console.log(index);\n              return (\n                <Box\n                  boxShadow=\"card\"\n                  type=\"row\"\n                  justifyContent=\"space-between\"\n                  style={{\n                    height: \"50px\",\n                    backgroundColor: \"rgb(241 218 249)\",\n                  }}\n                  m={4}\n                  p={2}\n                >\n                  <Box type=\"row\" justifyContent=\"flex-start\">\n                    <Icon\n                      as={FaUser}\n                      w={\"1.5rem\"}\n                      h={\"1.5rem\"}\n                      color={\"rgb(157 57 160 / 87%)\"}\n                    />\n                    {/* <Para ml={2}> {user}</Para> */}\n                    <Para ml={2}> {key[user]}</Para>\n                  </Box>\n                  <Box>\n                    <Icon\n                      as={AiOutlineDelete}\n                      w={\"1.5rem\"}\n                      h={\"1.5rem\"}\n                      color={\"red\"}\n                      onClick={() => removeUserHandler(index)}\n                    />\n                  </Box>\n                </Box>\n              );\n            })}\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default Sendgrid;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/RdsConfig.js",["1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaAws } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport { useIsFetching } from \"react-query\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst RdsConfig = ({\n  userCredential,\n  setStep,\n  userConfig,\n  setUserCredential,\n  rdsConfig,\n  setEc2Config,\n}) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [selectedApp, setSelectedApp] = useState();\n  const [selectedRds, setSelectedRds] = useState();\n  const [loading, setLoading] = useState(false);\n  const [provisionDb, setProvisionDb] = useState();\n  // const queryClient = useQueryClient();\n  const isFetching = useIsFetching();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  //   const { data } = useQuery([APIURLS.getContentType], {\n  //     enabled: !!token,\n  //   });\n\n  console.log(userConfig.config, \"userConfig\");\n  const [deviceList, setDeviceList] = useState([]);\n  const [instanceType, setInstanceType] = useState();\n  const [imageId, setImageId] = useState();\n  const [deviceName, setDeviceName] = useState();\n  const [engineType, setEngineType] = useState();\n  const [volumeType, setVolumeType] = useState();\n  const [volumeSize, setVolumeSize] = useState();\n  const [deleteOnTermination, setDeleteOnTermination] = useState();\n  console.log(userCredential);\n  //   let selectAppName = [];\n  //   if (data) {\n  //     for (let key in data) {\n  //       selectAppName.push({\n  //         value: key,\n  //         label: key,\n  //       });\n  //     }\n  //   }\n  let selectRds = [];\n  if (rdsConfig.rds_config) {\n    let data = rdsConfig.rds_config.Engine;\n    for (let key in data) {\n      selectRds.push({\n        value: data[key],\n        label: data[key],\n      });\n    }\n  }\n  console.log(\"selectRegion\", selectRds);\n  //   const columnTypes = useQuery(APIURLS.getColumnTypes);\n  //   const contentType = useQuery([APIURLS.getContentType], {\n  //     enabled: !!token,\n  //   });\n  //   const { data } = useQuery(\n  //     [APIURLS.getTableContentById({ app, table, editDataId }), basejwt],\n  //     {\n  //       enabled: !!token,\n  //     }\n  //   );\n  //   console.log(data?.result);\n  //   const [loading, setLoading] = useState(false);\n  //   const [success, setSuccess] = useState(false);\n  //   const [apiErr, setApiErr] = useState(null);\n  //   const queryClient = useQueryClient();\n  //   const toast = createStandaloneToast();\n  //   console.log(restrictByJwt);\n\n  async function handleSignup(params) {\n    setLoading(true);\n    try {\n      let obj = {\n        app_name: userCredential.app_name,\n        user_credentials: {\n          aws_username: userCredential.user_credentials.aws_username,\n          aws_secret_key: userCredential.user_credentials.aws_secret_key,\n          aws_access_key: userCredential.user_credentials.aws_access_key,\n        },\n        config: {\n          region_name: userCredential.config.region_name,\n          signature_version: userCredential.config.signature_version,\n          //  \"retries\": {\n          //      \"max_attempts\":\"string\",\n          //      \"mode\": \"string\"\n          //      }\n        },\n        rds_config: {\n          Engine: selectedRds,\n          AllocatedStorage: parseInt(params.AllocatedStorage),\n          DBInstanceIdentifier: params.DBInstanceIdentifier,\n          DBInstanceClass: params.DBInstanceClass,\n          MasterUsername: params.MasterUsername,\n          MasterUserPassword: params.MasterUserPassword,\n          MaxAllocatedStorage: parseInt(params.MaxAllocatedStorage),\n        },\n      };\n      console.log(obj);\n      setUserCredential(obj);\n      //   let { data } = await Api.post(APIURLS.getUserEc2Congif(), {\n      //     aws_username: params.aws_username,\n      //     aws_secret_key: params.aws_secret_key,\n      //     aws_access_key: params.aws_access_key,\n      //   });\n      //   console.log(data);\n      //   setEc2Config(data);\n      setStep(4);\n      setLoading(false);\n      //   let { data } = await Api.post(APIURLS.awsExport(), obj);\n    } catch ({ response }) {\n      setLoading(false);\n    }\n  }\n\n  return loading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">Deploy Your App on AWS</Span>\n      </Box>\n      <Box type=\"row\" justifyContent=\"center\" mt={8}>\n        <form onSubmit={handleSubmit(handleSignup)} style={{ width: \"34vw\" }}>\n          <Box>\n            <Box>\n              <H5 m={2} ml=\"0px\">\n                RDS Config\n              </H5>\n\n              <Label>Engine</Label>\n              <Para type=\"info\">\n                AWS provides users a hassle free way to configure remote data\n                storage for relational database stores through this service. The\n                users may chose from an array of options.\n              </Para>\n\n              <Box\n                style={{\n                  marginBottom: \"1.5rem\",\n                  color: \"#6E798C\",\n                  fontSize: \"1.25rem\",\n                }}\n              >\n                <Select\n                  key={1}\n                  required\n                  onChange={({ value }) => setSelectedRds(value)}\n                  theme={CARD_ELEMENT_OPTIONS}\n                  placeholder=\"Select Engine\"\n                  options={selectRds}\n                />\n              </Box>\n\n              <Label>Allocated Storage </Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"AllocatedStorage\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.AllocatedStorage}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>DB Instance Identifier </Label>\n              <Para type=\"info\">\n                Name of the DB to be given by the user the default should be app\n                name\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"DBInstanceIdentifier\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>DB Instance Class </Label>\n              <Para type=\"info\">\n                depending on the region and the engine chosen, AWS will allow\n                userschose form an array different machines with different\n                hardware configurations. Refer to this doc for further details.\n                <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html\">\n                  https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html\n                </a>\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"DBInstanceClass\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.DBInstanceClass}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n\n              <Label>Master Username </Label>\n              <Para type=\"info\">\n                The admin username for the master user of the RDS instace.\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"MasterUsername\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.MasterUsername}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>Master User Password </Label>\n              <Para type=\"info\">\n                The admin password for the master user of the RDS instace.\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"MasterUserPassword\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.MasterUserPassword}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>Max Allocated Storage</Label>\n              <Para type=\"info\">\n                Minimum storage allocated in GB's minimum is 20 similarly max is\n                1634\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"MaxAllocatedStorage\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.MaxAllocatedStorage}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n\n              {/* </Box> */}\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {\"Next\"}\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default RdsConfig;\n","/Users/nishantrana/Desktop/doga-frontend/src/containers/Deploy/Aws.js",["1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117"],"/Users/nishantrana/Desktop/doga-frontend/src/containers/Application/CreateTableName.js",["1118","1119","1120","1121","1122","1123","1124","1125"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport { useForm } from \"react-hook-form\";\n\nconst CreateTableName = ({ setStep, setTableName, setNewStep, step }) => {\n  const { handleSubmit, register, errors } = useForm();\n\n  async function handleSignup(params) {\n    setTableName(params.tableName);\n    if (step) {\n      setStep(4);\n    } else {\n      setNewStep(2);\n    }\n  }\n\n  return (\n    <>\n      <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={8} height=\"100%\">\n        <Box type=\"row\" flexDirection=\"column\" justifyContent=\"center\">\n          <Box type=\"heading\" textAlign=\"center\">\n            <Span type=\"heading\">Create New Table </Span>\n            {/* <Box my={2} borderBottom=\"4px solid\" borderColor=\"orange\"></Box> */}\n          </Box>\n\n          <Box\n            type=\"row\"\n            justifyContent=\"center\"\n            m={6}\n            mt={\"50px\"}\n            mb={\"500px\"}\n          >\n            <form\n              onSubmit={handleSubmit(handleSignup)}\n              style={{ width: \"35vw\" }}\n            >\n              <Label>Table Name </Label>\n              <Box type=\"relative\">\n                <Input\n                  name=\"tableName\"\n                  color=\"grey\"\n                  required\n                  pattern=\"^([a-z]+[0-9_]*)*$\"\n                  fontSize={3}\n                  p={2}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {\"Next\"}\n              </Button>\n            </form>\n          </Box>\n          {/* </Box> */}\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default CreateTableName;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/index.js",[],["1126","1127"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/reportWebVitals.js",[],"/Users/nishantrana/Desktop/doga/doga-frontend/src/App.js",["1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143"],"import React, { useEffect, Suspense, useState } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport { setGlobal, useGlobal } from \"reactn\";\nimport { setHeader, defaultQueryFn, setJwtHeader } from \"./Api\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Header from \"./components/Header/Header\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Footer from \"./components/Footer/Footer\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport theme from \"./styles/theme\";\nimport { Box, H1 } from \"./styles\";\nimport \"./styles/globals.css\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { io } from \"socket.io-client\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: defaultQueryFn,\n      refetchOnWindowFocus: false,\n      // suspense: true,\n    },\n  },\n});\n// const queryClient = new QueryClient();\n\nsetGlobal({\n  token: null,\n  baseURL: {},\n});\n\nconst myTheme = {\n  backgroundColor: \"#F1EFF8\",\n};\n\nconst Login = React.lazy(() => {\n  return import(\"./containers/Login/Login\");\n});\nconst Signup = React.lazy(() => {\n  return import(\"./containers/Signup/Signup\");\n});\nconst Dashboard = React.lazy(() => {\n  return import(\"./containers/Dashboard/Dashboard\");\n});\nconst CreateDatabase = React.lazy(() => {\n  return import(\"./containers/CreateDatabase/CreateDatabase\");\n});\nconst Database = React.lazy(() => {\n  return import(\"./containers/Database/Database\");\n});\nconst Mysql = React.lazy(() => {\n  return import(\"./containers/Mysql/Mysql\");\n});\nconst Content = React.lazy(() => {\n  return import(\"./containers/Application/Content\");\n});\nconst AppHome = React.lazy(() => {\n  return import(\"./containers/AppHome/AppHome\");\n});\nconst HerokuDeploy = React.lazy(() => {\n  return import(\"./containers/Deploy/HerokuDeploy\");\n});\nconst AwsDeploy = React.lazy(() => {\n  return import(\"./containers/Deploy/Deploy\");\n});\nconst Twilio = React.lazy(() => {\n  return import(\"./containers/Plugins/Twilio\");\n});\nconst Sendgrid = React.lazy(() => {\n  return import(\"./containers/Plugins/Sendgrid\");\n});\nconst Application = React.lazy(() => {\n  return import(\"./containers/Application/Application\");\n});\nconst AppDocs = React.lazy(() => {\n  return import(\"./containers/AppDocs/AppDocs\");\n});\n\nconst socket = io(\"http://127.0.0.1:8008\", {\n  query: `Authorization=${localStorage.getItem(\"token\")}`,\n});\n\n// console.log(socket);\n\n// useEffect(() => {\nsocket.on(\"connect\", () => {\n  // socket.send(\"User has connected!\");\n});\n// socket.send(localStorage.getItem(\"userEmail\"));\n// }, [localStorage.getItem(\"userEmail\")]);\n\nconst App = (props) => {\n  console.log(\"app.jsss\");\n  const [token, setToken] = useGlobal(\"token\");\n  const [deployProcessStatus, setdeployProcessStatus] = useGlobal(\"deploy\");\n  const [html, setHtml] = useGlobal(\"html\");\n  const [jwtToken, setJwtToken] = useGlobal(\"jwtToken\");\n  const toast = createStandaloneToast();\n\n  useEffect(() => {\n    if (socket.disconnected) {\n      socket.on(\"connect\", () => {\n        // socket.send(\"User has connected!\");\n      });\n    }\n  }, [socket]);\n\n  React.useEffect(() => {\n    socket.on(\"broadcast message\", function (msg) {\n      console.log(msg, \"MSG\");\n\n      if (msg.action_type === \"deploy-app\") {\n        setdeployProcessStatus({\n          status: msg.action_status,\n          message: msg.full_message,\n        });\n      }\n      toast({\n        position: \"top-right\",\n        description: msg.full_message,\n        status: \"info\",\n        duration: 3000,\n        isClosable: true,\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"token\");\n    if (token) {\n      setToken(token);\n      setHeader(token);\n    }\n  }, [token, setHeader, localStorage.getItem(\"token\")]);\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      setJwtToken(token);\n      setJwtHeader(token);\n    }\n  }, [jwtToken, setJwtHeader, localStorage.getItem(\"jwtToken\")]);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/Login\" render={(props) => <Login />} />\n      <Route path=\"/Signup\" render={(props) => <Signup />} />\n      <Redirect to=\"/Login\" />\n    </Switch>\n  );\n\n  if (localStorage.getItem(\"token\")) {\n    routes = (\n      <Switch>\n        <Route path=\"/Login\" render={(props) => <Login />} />\n        <Route path=\"/Signup\" render={(props) => <Signup />} />\n        <Route path=\"/Dashboard\" render={(props) => <Dashboard />} />\n        <Route path=\"/create-db\" render={(props) => <CreateDatabase />} />\n        <Route path=\"/mysql\" render={(props) => <Mysql />} />\n        <Route path=\"/database\" render={(props) => <Database />} />\n        <Route\n          exact\n          path=\"/deploy/heroku\"\n          render={(props) => <HerokuDeploy />}\n        />\n        <Route path=\"/deploy/aws\" render={(props) => <AwsDeploy />} />\n        <Route path=\"/plugin/twilio\" render={(props) => <Twilio />} />\n        <Route path=\"/plugin/sendgrid\" render={(props) => <Sendgrid />} />\n        <Route path=\"/create-new-app\" render={(props) => <Application />} />\n\n        <Route exact path=\"/application/:app\" render={(props) => <AppHome />} />\n        <Route path=\"/application/docs/:app\" render={(props) => <AppDocs />} />\n        <Route\n          path=\"/application/:app/:table\"\n          render={(props) => <Content />}\n        />\n      </Switch>\n    );\n  }\n\n  let show = !localStorage.getItem(\"token\") ? (\n    <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>\n  ) : (\n    <Box\n      display=\"grid\"\n      gridTemplateColumns={{ _: \"1fr\", md: \"220px auto\" }}\n      gridTemplateAreas={\n        {\n          // _: \"p-workspace__sidebar p-workspace__primary_view\",\n        }\n      }\n      maxHeight=\"100%\"\n      height=\"calc(100vh )\"\n    >\n      <Sidebar />\n      <Box\n        // width={{ _: \"100vw\", md: \"calc(100vw - 220px)\" }}\n        width=\"auto\"\n        // gridTemplateAreas={{ _: \"p-workspace__primary_view_contents\" }}\n        gridTemplateRows=\"auto\"\n        backgroundColor=\"#ffffff\"\n      >\n        <Suspense\n          fallback={\n            <Box type=\"loader\">\n              <ClipLoader color={\"#ffffff\"} size={55} />\n            </Box>\n          }\n        >\n          <Header />\n          {routes}\n        </Suspense>\n      </Box>\n      {/* <Ads /> */}\n    </Box>\n  );\n\n  return (\n    <>\n      <QueryClientProvider client={queryClient}>\n        <ChakraProvider>\n          <ThemeProvider theme={theme}>\n            <ReactQueryDevtools initialIsOpen={false} />\n\n            {/* <Box margin=\"auto\" maxWidth=\"1400px\"> */}\n            <Box>\n              {show}\n              {/* <Footer /> */}\n            </Box>\n          </ThemeProvider>\n        </ChakraProvider>\n      </QueryClientProvider>\n    </>\n  );\n};\n\nexport default App;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/styles/theme.js",[],"/Users/nishantrana/Desktop/doga/doga-frontend/src/Api.js",["1144"],"import axios from \"axios\";\nimport { useParams } from \"react-router\";\n\n// let { app, table } = useParams();\n\nconst Api = axios.create({\n  baseURL: \"http://0.0.0.0:8080/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nApi.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    console.log(error.response.status);\n    if (error.response.status === 401) {\n      localStorage.clear();\n      window.location.replace(\"/login\");\n    }\n    if (error.response.status === 403) {\n    }\n    return Promise.reject(error);\n  }\n);\nexport const ApiApp = axios.create({\n  baseURL: \"http://0.0.0.0:8080/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nApiApp.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    console.log(error.response.status);\n    if (error.response.status === 401) {\n      localStorage.clear();\n      window.location.replace(\"/login\");\n    }\n    if (error.response.status === 403) {\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const ApiJwt = axios.create({\n  baseURL: \"http://0.0.0.0:8080/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport const ApiUpload = axios.create({\n  baseURL: \"http://0.0.0.0:8080/\",\n  headers: {\n    \"Content-Type\": \"multipart/form-data\",\n  },\n});\n\n// ApiJwt.interceptors.response.use(\n//   function (response) {\n//     return response;\n//   },\n//   function (error) {\n//     console.log(error.response.status);\n//     if (error.response.status === 401) {\n//       localStorage.clear();\n//       window.location.replace(\"/login\");\n//     }\n//     if (error.response.status === 403) {\n//     }\n//     return Promise.reject(error);\n//   }\n// );\n\nexport function setHeader(token) {\n  // Api.defaults.headers.common[\"x-access-token\"] = token;\n  Api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  ApiApp.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  ApiUpload.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  console.log(\"heretoken\", \"Bearer \" + token, token);\n}\n\nexport function setDefaultBaseUrl(baseURL) {\n  // if (app || table) {\n  ApiApp.defaults.baseURL = baseURL;\n  // }\n\n  // Api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  console.log(ApiApp.defaults.baseURL);\n}\nexport function setJwtHeader(token) {\n  // Api.defaults.headers.common[\"x-access-token\"] = token;\n  ApiJwt.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  console.log(\"herejwttoken\", \"Bearer \" + token, token);\n}\n\nexport const defaultQueryFn = async ({ queryKey }) => {\n  try {\n    console.log(\"key\", queryKey);\n    console.log(\"ApiApp.defaults.baseURL\", ApiApp.defaults.baseURL);\n    const { data } =\n      queryKey[1] === \"jwt_info\"\n        ? await ApiJwt.get(queryKey[0])\n        : queryKey[1] === \"baseURL\"\n        ? await ApiApp.get(queryKey[0])\n        : await Api.get(queryKey[0]);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const APIURLS = {\n  login: \"/admin/login\",\n  signup: \"/admin/admin_profile\",\n  createDB: \"/admin/dbinit\",\n  userInfo: \"/admin/admin_profile/nishant@gmail.com\",\n  dashboardInfo: (section, filter) =>\n    `/admin/dashboard/stats/${section}/${filter}`,\n  appInfo: (app) => `/admin/dashboard/stats/${app}/all`,\n  appStats: (app) => `/admin/dashboard/stats/app/${app}`,\n  appDocs: (app) => `/admin/docs/${app}`,\n  dbInfo: (db) => `/admin/dashboard/stats/db/${db}`,\n  getDbConnections: \"/admin/dbinit\",\n  getDbDefaults: \"/admin/utils/defaults/db\",\n  getColumnTypes: \"/admin/columntypes\",\n  getContentType: \"/admin/content/types\",\n  getUserImages: \"/admin/assets/list/image\",\n  getTableContent: ({ app, table }) => `/${app}/${table}/`,\n  baseJwtLogin: ({ app, table }) => `/${app}/${table}/login`,\n  postRegisterTableData: ({ app, table }) => `/${app}/${table}/register`,\n  getUserCongif: () => `/admin/utils/aws/form/config`,\n  getUserRdsCongif: () => `/admin/utils/aws/form/rds_config`,\n  getUserEc2Congif: () => `/admin/utils/aws/form/ec2_config`,\n  getTableContentById: ({ app, table, editDataId }) =>\n    `/${app}/${table}/${editDataId}`,\n  deleteTable: ({ app, table }) => `admin/content/types/${app}/${table}`,\n  getForeignkey: \"/admin/content/relations\",\n  exportApp: () => \"/admin/export/local\",\n  awsExport: () => \"/admin/export/aws\",\n  herokuExport: () => \"/admin/export/heroku\",\n  emailNotify: () => \"/admin/notify/email\",\n  smsNotify: () => \"/admin/notify/sms\",\n  markAllNotifications: \"/admin/info/markread/all\",\n  markIndividualNotifications: ({ id }) => `/admin/info/markread/${id}`,\n  uploadImage: () => `/admin/assets/upload/image`,\n  getNotifications: \"/admin/info/allrequests\",\n  // getTableContent: \"/School/Table_app\",\n  // getTableContent: (section, filter) => `/${section}/${filter}`,\n  // forgotPassword: \"auth/forgotPassword\",\n  // activateAccount: (token) => `/auth/activateAccount/${token}`,\n  // resetPassword: (token) => `/auth/resetPassword/${token}`,\n};\nexport default Api;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Sidebar/Sidebar.js",["1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Footer/Footer.js",["1169","1170","1171","1172","1173","1174","1175"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Header/Header.js",["1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Login/Login.js",["1200","1201","1202","1203","1204","1205","1206","1207","1208"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Dashboard/Dashboard.js",["1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Signup/Signup.js",["1238","1239","1240","1241","1242","1243","1244","1245"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/CreateDatabase/CreateDatabase.js",["1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Mysql/Mysql.js",["1269","1270","1271","1272","1273","1274","1275","1276"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Database/Database.js",["1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/Application.js",["1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/Content.js",["1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/AppHome/AppHome.js",["1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Plugins/Twilio.js",["1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394","1395","1396"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/Deploy.js",["1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412"],"import { useState } from \"react\";\nimport { Box, H2, Button, Para } from \"../../styles\";\nimport { Redirect } from \"react-router-dom\";\nimport UserCredentials from \"./UserCredentials\";\nimport UserConfig from \"./UserConfig\";\n\nimport { setGlobal, useGlobal } from \"reactn\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useEffect } from \"reactn\";\nimport { useIsFetching } from \"react-query\";\nimport RdsConfig from \"./RdsConfig\";\nimport AwsDeploy from \"./AwsDeploy\";\nimport Aws from \"./Aws\";\n\nconst Deploy = () => {\n  const [step, setStep] = useState(1);\n  const [dash, setDash] = useState(false);\n  const [fetch, setFetch] = useState();\n  const [deployProcessStatus, setdeployProcessStatus] = useGlobal(\"deploy\");\n  const queryClient = useQueryClient();\n  const [connectionSelected, setConnectionSelected] = useState();\n  const [userConfig, setUserConfig] = useState();\n  const [userCredential, setUserCredential] = useState();\n  const [rdsConfig, setRdsConfig] = useState();\n  const [ec2Config, setEc2Config] = useState();\n  const [onLoading, setOnLoading] = useState(false);\n  const isFetching = useIsFetching();\n  console.log(\"deployProcessStatus\", deployProcessStatus);\n  const onCloseHandler = () => {};\n\n  useEffect(() => {\n    if (deployProcessStatus?.status === \"COMPLETED\") setdeployProcessStatus();\n  }, [deployProcessStatus]);\n\n  return (\n    <>\n      <Box width=\"100%\">\n        {step === 1 && (\n          <UserCredentials\n            setStep={setStep}\n            setUserConfig={setUserConfig}\n            setUserCredential={setUserCredential}\n          />\n        )}\n        {step === 2 && (\n          <UserConfig\n            setStep={setStep}\n            userConfig={userConfig}\n            setUserCredential={setUserCredential}\n            setRdsConfig={setRdsConfig}\n            userCredential={userCredential}\n          />\n        )}\n        {step === 3 && (\n          <>\n            <RdsConfig\n              setStep={setStep}\n              userConfig={userConfig}\n              setUserCredential={setUserCredential}\n              setEc2Config={setEc2Config}\n              rdsConfig={rdsConfig}\n              userCredential={userCredential}\n            />\n          </>\n        )}\n        {step === 4 && (\n          <>\n            <Aws\n              setStep={setStep}\n              userConfig={userConfig}\n              ec2Config={ec2Config}\n              setUserCredential={setUserCredential}\n              rdsConfig={rdsConfig}\n              userCredential={userCredential}\n            />\n          </>\n        )}\n\n        {step === 5 ? (\n          <>\n            {deployProcessStatus?.status === \"INITIATED\" ||\n            deployProcessStatus?.status === \"PROCESSING\" ? (\n              <>\n                <Box type=\"heading\" textAlign=\"center\">\n                  {/* <Span type=\"heading\">{table}</Span> */}\n                  <H2>Status: {deployProcessStatus?.status.toLowerCase()}</H2>\n                  <br />\n                  <Para>{deployProcessStatus?.message}</Para>\n                </Box>\n                <Box type=\"loader\">\n                  <ClipLoader color={\"#ffffff\"} size={55} />\n                </Box>\n              </>\n            ) : deployProcessStatus?.status === \"COMPLETED\" ? (\n              <Redirect to=\"/dashboard\" />\n            ) : deployProcessStatus?.status === \"ERROR\" ? (\n              <>\n                <Box type=\"heading\" textAlign=\"center\">\n                  {/* <Span type=\"heading\">{table}</Span> */}\n                  <H2>Status: {deployProcessStatus?.status.toLowerCase()}</H2>\n                  <br />\n                  <Para>{deployProcessStatus?.message}</Para>\n                </Box>\n              </>\n            ) : (\n              <Box type=\"loader\">\n                <ClipLoader color={\"#ffffff\"} size={55} />\n              </Box>\n            )}\n          </>\n        ) : null}\n      </Box>\n    </>\n  );\n};\n\nexport default Deploy;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/HerokuDeploy.js",["1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/AppDocs/AppDocs.js",["1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Plugins/Sendgrid.js",["1482","1483","1484","1485"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/styles/index.js",["1486","1487","1488"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Header/AdminProfile.js",["1489"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/Aws.js",["1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\n// import { setGlobal, useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaAws } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport { useIsFetching } from \"react-query\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Aws = ({\n  userCredential,\n  setStep,\n  userConfig,\n  setUserCredential,\n  rdsConfig,\n  ec2Config,\n}) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [selectedApp, setSelectedApp] = useState();\n  const [loading, setLoading] = useState(false);\n  const [provisionDb, setProvisionDb] = useState();\n  // const queryClient = useQueryClient();\n  const isFetching = useIsFetching();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n\n  const [deviceList, setDeviceList] = useState([]);\n  const [instanceType, setInstanceType] = useState();\n  const [imageId, setImageId] = useState();\n  const [deviceName, setDeviceName] = useState(\n    ec2Config.ec2_config.BlockDeviceMappings[0].DeviceName\n  );\n  const [engineType, setEngineType] = useState();\n  const [volumeType, setVolumeType] = useState(\n    ec2Config.ec2_config.BlockDeviceMappings[0].Ebs.VolumeType\n  );\n  const [volumeSize, setVolumeSize] = useState(\n    ec2Config.ec2_config.BlockDeviceMappings[0].Ebs.VolumeSize\n  );\n  const [deleteOnTermination, setDeleteOnTermination] = useState(\n    ec2Config.ec2_config.BlockDeviceMappings[0].Ebs.DeleteOnTermination\n  );\n  const addDeviceHandler = () => {\n    setDeviceList([\n      ...deviceList,\n      {\n        DeviceName: deviceName,\n        Ebs: {\n          DeleteOnTermination: deleteOnTermination,\n          VolumeSize: volumeSize,\n          VolumeType: volumeType,\n        },\n      },\n    ]);\n    setDeviceName(\"\");\n    setDeleteOnTermination(\"\");\n    setVolumeSize(\"\");\n    setVolumeType(\"\");\n\n    // setUserEmail(\"\");\n    // reset();\n  };\n  const removeDeviceHandler = (index) => {\n    let newDeviceList = [];\n    for (let key in deviceList) {\n      console.log(deviceList[key], \"key\", key);\n      if (key != index) {\n        newDeviceList.push(deviceList[key]);\n      }\n    }\n    //  userList.slice(0, index).concat(userList.slice(-index));\n    console.log(newDeviceList);\n    setDeviceList(newDeviceList);\n    // console.log(userList.splice(index, 1))\n  };\n  console.log(ec2Config.ec2_config.BlockDeviceMappings[0].DeviceName, \"here\");\n  async function handleSignup(params) {\n    setLoading(true);\n    try {\n      let obj = {\n        app_name: userCredential.app_name,\n        user_credentials: {\n          aws_username: userCredential.user_credentials.aws_username,\n          aws_secret_key: userCredential.user_credentials.aws_secret_key,\n          aws_access_key: userCredential.user_credentials.aws_access_key,\n        },\n        config: {\n          region_name: userCredential.config.region_name,\n          signature_version: userCredential.config.signature_version,\n          //  \"retries\": {\n          //      \"max_attempts\":\"string\",\n          //      \"mode\": \"string\"\n          //      }\n        },\n        rds_config: {\n          Engine: userCredential.rds_config.Engine,\n          AllocatedStorage: userCredential.rds_config.AllocatedStorage,\n          DBInstanceIdentifier: userCredential.rds_config.DBInstanceIdentifier,\n          DBInstanceClass: userCredential.rds_config.DBInstanceClass,\n          MasterUsername: userCredential.rds_config.MasterUsername,\n          MasterUserPassword: userCredential.rds_config.MasterUserPassword,\n          MaxAllocatedStorage: userCredential.rds_config.MaxAllocatedStorage,\n        },\n        ec2_config: {\n          BlockDeviceMappings: deviceList,\n          InstanceType: params.InstanceType,\n          ImageId: params.ImageId,\n          // \"ami-0885b1f6bd170450c\"\n        },\n      };\n      console.log(obj);\n      setUserCredential();\n      let { data } = await Api.post(APIURLS.awsExport(), obj);\n      setStep(5);\n      setLoading(false);\n      //   let { data } = await Api.post(APIURLS.awsExport(), obj);\n    } catch ({ response }) {\n      setLoading(false);\n    }\n  }\n\n  return loading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">Deploy Your App on AWS</Span>\n      </Box>\n      <Box type=\"row\" justifyContent=\"center\" mt={8}>\n        <form onSubmit={handleSubmit(handleSignup)} style={{ width: \"34vw\" }}>\n          <Box>\n            <Box>\n              <H5 m={2} ml=\"0px\">\n                EC2 Config\n              </H5>\n              <Para type=\"info\">\n                This specifies values that need to be configured for the\n                instances storage, each block device needs to be added to the\n                list separately. the defaults provided:\n              </Para>\n              <Label>Device Name</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"DeviceName\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  value={deviceName}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setDeviceName(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>Delete On Termination</Label>\n              <Para type=\"info\">\n                if true all backed up sotrage and snapshots of volume are lost\n                and instance cannot be reverted to it's initial AMI state.\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"DeleteOnTermination\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  width=\"100%\"\n                  value={deleteOnTermination}\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setDeleteOnTermination(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>VolumeSize</Label>\n              <Para type=\"info\">\n                VolumeSize specifies the size of the attached block device in\n                GBs\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"VolumeSize\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  width=\"100%\"\n                  value={volumeSize}\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setVolumeSize(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>Volume Type</Label>\n              <Para type=\"info\">\n                VolumeType can be one of gp3, gp2 for General purpose SSD and\n                one of io2, io1 for a Provisioned IOPS SSD, more information can\n                be found [at]\n                <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html\">\n                  https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html\n                </a>\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"VolumeType\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  width=\"100%\"\n                  value={volumeType}\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setVolumeType(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n\n              <Box style={{ textAlign: \"center\" }}>\n                <Icon\n                  as={BsPlusCircleFill}\n                  w={\"3.5rem\"}\n                  h={\"3.5rem\"}\n                  color={\"rgb(56 46 108 / 92%)\"}\n                  mt={5}\n                  onClick={addDeviceHandler}\n                />\n              </Box>\n              <Box>\n                {deviceList.map((key, index) => {\n                  // let user = Object.keys(key)[0];\n                  console.log(index);\n                  return (\n                    <Box\n                      boxShadow=\"card\"\n                      type=\"row\"\n                      justifyContent=\"space-between\"\n                      style={{\n                        height: \"50px\",\n                        backgroundColor: \"rgb(241 218 249)\",\n                      }}\n                      m={4}\n                      p={2}\n                    >\n                      <Box type=\"row\" justifyContent=\"flex-start\">\n                        <Icon\n                          as={FaAws}\n                          w={\"1.5rem\"}\n                          h={\"1.5rem\"}\n                          color={\"rgb(157 57 160 / 87%)\"}\n                        />\n                        {/* <Para ml={2}> {user}</Para> */}\n                        <Para ml={2}> {key.DeviceName}</Para>\n                      </Box>\n                      <Box>\n                        <Icon\n                          as={AiOutlineDelete}\n                          w={\"1.5rem\"}\n                          h={\"1.5rem\"}\n                          color={\"red\"}\n                          onClick={() => removeDeviceHandler(index)}\n                        />\n                      </Box>\n                    </Box>\n                  );\n                })}\n              </Box>\n              <Label>Instance Type</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"InstanceType\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  width=\"100%\"\n                  defaultValue={ec2Config.ec2_config.InstanceType}\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setInstanceType(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>ImageId</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"ImageId\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={ec2Config.ec2_config.ImageId}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setImageId(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {\"Deploy\"}\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default Aws;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/AwsDeploy.js",["1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaAws } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport { useIsFetching } from \"react-query\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst AwsDeploy = (\n  userCredential,\n  setStep,\n  userConfig,\n  setUserCredential,\n  rdsConfig\n  // ec\n) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [selectedApp, setSelectedApp] = useState();\n  const [loading, setLoading] = useState(false);\n  const [provisionDb, setProvisionDb] = useState();\n  // const queryClient = useQueryClient();\n  const isFetching = useIsFetching();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n\n  const [deviceList, setDeviceList] = useState([]);\n  const [instanceType, setInstanceType] = useState();\n  const [imageId, setImageId] = useState();\n  const [deviceName, setDeviceName] = useState();\n  const [engineType, setEngineType] = useState();\n  const [volumeType, setVolumeType] = useState();\n  const [volumeSize, setVolumeSize] = useState();\n  const [deleteOnTermination, setDeleteOnTermination] = useState();\n\n  async function handleSignup(params) {\n    setLoading(true);\n    let obj = {\n      app_name: userCredential.app_name,\n      user_credentials: {\n        aws_username: userCredential.user_credentials.aws_username,\n        aws_secret_key: userCredential.user_credentials.aws_secret_key,\n        aws_access_key: userCredential.user_credentials.aws_access_key,\n      },\n      config: {\n        region_name: userCredential.config.region_name,\n        signature_version: userCredential.config.signature_version,\n        //  \"retries\": {\n        //      \"max_attempts\":\"string\",\n        //      \"mode\": \"string\"\n        //      }\n      },\n      rds_config: {\n        Engine: userCredential.rds_config.Engine,\n        AllocatedStorage: userCredential.rds_config.AllocatedStorage,\n        DBInstanceIdentifier: userCredential.rds_config.DBInstanceIdentifier,\n        DBInstanceClass: userCredential.rds_config.DBInstanceClass,\n        MasterUsername: userCredential.rds_config.MasterUsername,\n        MasterUserPassword: userCredential.rds_config.MasterUserPassword,\n        MaxAllocatedStorage: userCredential.rds_config.MaxAllocatedStorage,\n      },\n      ec2_config: {\n        BlockDeviceMappings: deviceList,\n        InstanceType: params.InstanceType,\n        ImageId: params.ImageId,\n        // \"ami-0885b1f6bd170450c\"\n      },\n    };\n    console.log(obj);\n    try {\n      console.log(params);\n\n      console.log(\"Obj\", obj);\n      // setUserCredential();\n      console.log(obj);\n\n      // toast({\n      //   title: \"Success\",\n      //   description: data?.result,\n      //   status: \"success\",\n      //   duration: 9000,\n      //   isClosable: false,\n      // });\n\n      // console.log(data);\n\n      setLoading(false);\n    } catch ({ response }) {\n      setLoading(false);\n    }\n  }\n\n  const addDeviceHandler = () => {\n    setDeviceList([\n      ...deviceList,\n      {\n        DeviceName: deviceName,\n        Ebs: {\n          DeleteOnTermination: deleteOnTermination,\n          VolumeSize: volumeSize,\n          VolumeType: volumeType,\n        },\n      },\n    ]);\n    // setUsername();\n    // setUserEmail();\n  };\n  const removeDeviceHandler = (index) => {\n    let newDeviceList = [];\n    for (let key in deviceList) {\n      console.log(deviceList[key], \"key\", key);\n      if (key != index) {\n        newDeviceList.push(deviceList[key]);\n      }\n    }\n    //  userList.slice(0, index).concat(userList.slice(-index));\n    console.log(newDeviceList);\n    setDeviceList(newDeviceList);\n    // console.log(userList.splice(index, 1))\n  };\n\n  return loading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">Deploy Your App on AWS</Span>\n      </Box>\n      <Box type=\"row\" justifyContent=\"center\">\n        <Box\n          type=\"row\"\n          justifyContent=\"center\"\n          mt={8}\n          style={{ width: \"34vw\" }}\n        >\n          <Box>\n            <H5 m={2} ml=\"0px\">\n              EC2 Config\n            </H5>\n            <Para type=\"info\">\n              This specifies values that need to be configured for the instances\n              storage, each block device needs to be added to the list\n              separately. the defaults provided:\n            </Para>\n            <Label>Device Name</Label>\n            <Box type=\"relative\">\n              <Input\n                name={\"DeviceName\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                // value={ec2Config.ec2_config.BlockDeviceMappings[0].DeviceName}\n                width=\"100%\"\n                // ref={register}\n                mb={2}\n                onChange={(e) => setDeviceName(e.target.value)}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>Delete On Termination</Label>\n            <Para type=\"info\">\n              if true all backed up sotrage and snapshots of volume are lost and\n              instance cannot be reverted to it's initial AMI state.\n            </Para>\n            <Box type=\"relative\">\n              <Input\n                name={\"DeleteOnTermination\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                // ref={register}\n                mb={2}\n                onChange={(e) => setDeleteOnTermination(e.target.value)}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>VolumeSize</Label>\n            <Para type=\"info\">\n              VolumeSize specifies the size of the attached block device in GBs\n            </Para>\n            <Box type=\"relative\">\n              <Input\n                name={\"VolumeSize\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                // ref={register}\n                mb={2}\n                onChange={(e) => setVolumeSize(e.target.value)}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n            <Label>Volume Type</Label>\n            <Para type=\"info\">\n              VolumeType can be one of gp3, gp2 for General purpose SSD and one\n              of io2, io1 for a Provisioned IOPS SSD, more information can be\n              found [at]\n              <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html\">\n                https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html\n              </a>\n            </Para>\n            <Box type=\"relative\">\n              <Input\n                name={\"VolumeType\"}\n                color=\"grey\"\n                fontSize={3}\n                p={2}\n                required\n                width=\"100%\"\n                // ref={register}\n                mb={2}\n                onChange={(e) => setVolumeType(e.target.value)}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n\n            <Box style={{ textAlign: \"center\" }}>\n              <Icon\n                as={BsPlusCircleFill}\n                w={\"3.5rem\"}\n                h={\"3.5rem\"}\n                color={\"rgb(56 46 108 / 92%)\"}\n                mt={5}\n                onClick={addDeviceHandler}\n              />\n            </Box>\n            <Box>\n              {deviceList.map((key, index) => {\n                // let user = Object.keys(key)[0];\n                console.log(index);\n                return (\n                  <Box\n                    boxShadow=\"card\"\n                    type=\"row\"\n                    justifyContent=\"space-between\"\n                    style={{\n                      height: \"50px\",\n                      backgroundColor: \"rgb(241 218 249)\",\n                    }}\n                    m={4}\n                    p={2}\n                  >\n                    <Box type=\"row\" justifyContent=\"flex-start\">\n                      <Icon\n                        as={FaAws}\n                        w={\"1.5rem\"}\n                        h={\"1.5rem\"}\n                        color={\"rgb(157 57 160 / 87%)\"}\n                      />\n                      {/* <Para ml={2}> {user}</Para> */}\n                      <Para ml={2}> {key.DeviceName}</Para>\n                    </Box>\n                    <Box>\n                      <Icon\n                        as={AiOutlineDelete}\n                        w={\"1.5rem\"}\n                        h={\"1.5rem\"}\n                        color={\"red\"}\n                        onClick={() => removeDeviceHandler(index)}\n                      />\n                    </Box>\n                  </Box>\n                );\n              })}\n            </Box>\n            <form\n              onSubmit={handleSubmit(handleSignup)}\n              style={{ width: \"34vw\" }}\n            >\n              <Label>Instance Type</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"InstanceType\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setInstanceType(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>ImageId</Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"ImageId\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                  onChange={(e) => setImageId(e.target.value)}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {\"Deploy\"}\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default AwsDeploy;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/UserCredentials.js",["1554","1555","1556","1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575","1576","1577","1578"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/RdsConfig.js",["1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H5,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { FaAws } from \"react-icons/fa\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { SiAmazonaws, SiHeroku } from \"react-icons/si\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS, ApiJwt } from \"../../Api\";\nimport { useIsFetching } from \"react-query\";\nimport Select from \"react-select\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst RdsConfig = ({\n  userCredential,\n  setStep,\n  userConfig,\n  setUserCredential,\n  rdsConfig,\n  setEc2Config,\n}) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [toggle, setToggle] = useState(true);\n  const [selectedApp, setSelectedApp] = useState();\n  const [selectedRds, setSelectedRds] = useState();\n  const [loading, setLoading] = useState(false);\n  const [provisionDb, setProvisionDb] = useState();\n  // const queryClient = useQueryClient();\n  const isFetching = useIsFetching();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  //   const { data } = useQuery([APIURLS.getContentType], {\n  //     enabled: !!token,\n  //   });\n\n  console.log(userConfig.config, \"userConfig\");\n  const [deviceList, setDeviceList] = useState([]);\n  const [instanceType, setInstanceType] = useState();\n  const [imageId, setImageId] = useState();\n  const [deviceName, setDeviceName] = useState();\n  const [engineType, setEngineType] = useState();\n  const [volumeType, setVolumeType] = useState();\n  const [volumeSize, setVolumeSize] = useState();\n  const [deleteOnTermination, setDeleteOnTermination] = useState();\n  console.log(userCredential);\n  //   let selectAppName = [];\n  //   if (data) {\n  //     for (let key in data) {\n  //       selectAppName.push({\n  //         value: key,\n  //         label: key,\n  //       });\n  //     }\n  //   }\n  let selectRds = [];\n  if (rdsConfig.rds_config) {\n    let data = rdsConfig.rds_config.Engine;\n    for (let key in data) {\n      selectRds.push({\n        value: data[key],\n        label: data[key],\n      });\n    }\n  }\n  console.log(\"selectRegion\", selectRds);\n  //   const columnTypes = useQuery(APIURLS.getColumnTypes);\n  //   const contentType = useQuery([APIURLS.getContentType], {\n  //     enabled: !!token,\n  //   });\n  //   const { data } = useQuery(\n  //     [APIURLS.getTableContentById({ app, table, editDataId }), basejwt],\n  //     {\n  //       enabled: !!token,\n  //     }\n  //   );\n  //   console.log(data?.result);\n  //   const [loading, setLoading] = useState(false);\n  //   const [success, setSuccess] = useState(false);\n  //   const [apiErr, setApiErr] = useState(null);\n  //   const queryClient = useQueryClient();\n  //   const toast = createStandaloneToast();\n  //   console.log(restrictByJwt);\n\n  async function handleSignup(params) {\n    setLoading(true);\n    try {\n      let obj = {\n        app_name: userCredential.app_name,\n        user_credentials: {\n          aws_username: userCredential.user_credentials.aws_username,\n          aws_secret_key: userCredential.user_credentials.aws_secret_key,\n          aws_access_key: userCredential.user_credentials.aws_access_key,\n        },\n        config: {\n          region_name: userCredential.config.region_name,\n          signature_version: userCredential.config.signature_version,\n          //  \"retries\": {\n          //      \"max_attempts\":\"string\",\n          //      \"mode\": \"string\"\n          //      }\n        },\n        rds_config: {\n          Engine: selectedRds,\n          AllocatedStorage: parseInt(params.AllocatedStorage),\n          DBInstanceIdentifier: params.DBInstanceIdentifier,\n          DBInstanceClass: params.DBInstanceClass,\n          MasterUsername: params.MasterUsername,\n          MasterUserPassword: params.MasterUserPassword,\n          MaxAllocatedStorage: parseInt(params.MaxAllocatedStorage),\n        },\n      };\n      console.log(obj);\n      setUserCredential(obj);\n      let { data } = await Api.post(APIURLS.getUserEc2Congif(), {\n        aws_username: params.aws_username,\n        aws_secret_key: params.aws_secret_key,\n        aws_access_key: params.aws_access_key,\n      });\n      console.log(data);\n      setEc2Config(data);\n      setStep(4);\n      setLoading(false);\n      //   let { data } = await Api.post(APIURLS.awsExport(), obj);\n    } catch ({ response }) {\n      setLoading(false);\n    }\n  }\n\n  return loading ? (\n    <Box type=\"loader\">\n      <ClipLoader color={\"#ffffff\"} size={55} />\n    </Box>\n  ) : (\n    <>\n      <Box type=\"heading\" textAlign=\"center\">\n        <Span type=\"heading\">Deploy Your App on AWS</Span>\n      </Box>\n      <Box type=\"row\" justifyContent=\"center\" mt={8}>\n        <form onSubmit={handleSubmit(handleSignup)} style={{ width: \"34vw\" }}>\n          <Box>\n            <Box>\n              <H5 m={2} ml=\"0px\">\n                RDS Config\n              </H5>\n\n              <Label>Engine</Label>\n              <Para type=\"info\">\n                AWS provides users a hassle free way to configure remote data\n                storage for relational database stores through this service. The\n                users may chose from an array of options.\n              </Para>\n\n              <Box\n                style={{\n                  marginBottom: \"1.5rem\",\n                  color: \"#6E798C\",\n                  fontSize: \"1.25rem\",\n                }}\n              >\n                <Select\n                  key={1}\n                  required\n                  onChange={({ value }) => setSelectedRds(value)}\n                  theme={CARD_ELEMENT_OPTIONS}\n                  placeholder=\"Select Engine\"\n                  options={selectRds}\n                />\n              </Box>\n\n              <Label>Allocated Storage </Label>\n              <Box type=\"relative\">\n                <Input\n                  name={\"AllocatedStorage\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.AllocatedStorage}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>DB Instance Identifier </Label>\n              <Para type=\"info\">\n                Name of the DB to be given by the user the default should be app\n                name\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"DBInstanceIdentifier\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>DB Instance Class </Label>\n              <Para type=\"info\">\n                depending on the region and the engine chosen, AWS will allow\n                userschose form an array different machines with different\n                hardware configurations. Refer to this doc for further details.\n                <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html\">\n                  https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html\n                </a>\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"DBInstanceClass\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.DBInstanceClass}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n\n              <Label>Master Username </Label>\n              <Para type=\"info\">\n                The admin username for the master user of the RDS instace.\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"MasterUsername\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.MasterUsername}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>Master User Password </Label>\n              <Para type=\"info\">\n                The admin password for the master user of the RDS instace.\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"MasterUserPassword\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.MasterUserPassword}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n              <Label>Max Allocated Storage</Label>\n              <Para type=\"info\">\n                Minimum storage allocated in GB's minimum is 20 similarly max is\n                1634\n              </Para>\n              <Box type=\"relative\">\n                <Input\n                  name={\"MaxAllocatedStorage\"}\n                  color=\"grey\"\n                  fontSize={3}\n                  p={2}\n                  required\n                  defaultValue={rdsConfig.rds_config.MaxAllocatedStorage}\n                  width=\"100%\"\n                  ref={register}\n                  mb={2}\n                />\n\n                {errors?.name && (\n                  <Span color=\"orange\" mb={4}>\n                    {errors?.name?.message}\n                  </Span>\n                )}\n              </Box>\n\n              {/* </Box> */}\n              <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                {\"Next\"}\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </Box>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default RdsConfig;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Deploy/UserConfig.js",["1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/AppTableCreation.js",["1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686","1687","1688"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/BaseJwtLogin.js",["1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705","1706"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/AwsDeploy.js",["1707","1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720","1721"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/ContentField.js",["1722","1723","1724","1725","1726","1727","1728","1729","1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/CreateTableName.js",["1743","1744","1745","1746","1747","1748","1749","1750"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/CreateTable.js",["1751","1752","1753","1754","1755","1756","1757","1758","1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/AppTableData.js",["1777","1778","1779","1780","1781","1782","1783","1784","1785","1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1796","1797","1798"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, {\n  setHeader,\n  setJwtHeader,\n  APIURLS,\n  ApiJwt,\n  ApiApp,\n} from \"../../Api\";\nimport Select from \"react-select\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport ImageUploadSelect from \"../ImageUploadSelect/ImageUploadSelect\";\n\nconst AppTableData = ({\n  isOpen,\n  onOpen,\n  onClose,\n  app,\n  columns,\n  table,\n  editDataId,\n  basejwt,\n  restrictByJwt,\n}) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [selectedFieldType, setSelectedFieldType] = useState();\n  const [value, setValue] = useState({});\n  const [selectedBooleanType, setSelectedBooleanType] = useState({});\n  const [selectedBinaryType, setSelectedBinaryType] = useState({});\n  const [jwtToken, setJwtToken] = useGlobal(\"jwtToken\");\n  const [markedImage, setMarkedImage] = useState();\n  const [html, setHtml] = useState();\n  const toast = createStandaloneToast();\n  const queryClient = useQueryClient();\n  const columnTypes = useQuery(APIURLS.getColumnTypes);\n  const contentType = useQuery([APIURLS.getContentType], {\n    enabled: !!token,\n  });\n  const { data, isFetching } = useQuery(\n    [APIURLS.getTableContentById({ app, table, editDataId }), basejwt],\n    {\n      enabled: !!token,\n    }\n  );\n  console.log(data?.result);\n  //   const [loading, setLoading] = useState(false);\n  //   const [success, setSuccess] = useState(false);\n  //   const [apiErr, setApiErr] = useState(null);\n  //   const queryClient = useQueryClient();\n  //   const toast = createStandaloneToast();\n  console.log(markedImage, \"Hereeeeeee\");\n  useEffect(() => {\n    let token = Object.entries(columns).map(([prop, val]) => {\n      console.log(val);\n      console.log(\"here\", value, [val?.type], val?.name);\n      if (\n        val.type === \"DATETIME\" ||\n        val.type === \"TIME\" ||\n        val.type === \"DATE\"\n      ) {\n        let obj = value;\n        obj[val?.name] = new Date();\n        setValue(obj);\n      }\n      if (val.type === \"BOOLEAN\") {\n        let obj = selectedBooleanType;\n        obj[val?.name] = \"\";\n\n        setSelectedBooleanType(obj);\n      }\n      if (val.type === \"BLOB\") {\n        let obj = selectedBinaryType;\n        obj[val?.name] = \"\";\n        console.log(obj, \"setSelectedBinaryType\");\n        setSelectedBinaryType(obj);\n      }\n    });\n  }, []);\n\n  console.log(selectedBooleanType, \"selectedBooleanType\");\n  const richTextHandler = (event, editor) => {\n    const data = editor.getData();\n    console.log(data);\n    setHtml(data);\n  };\n\n  let booleanTypesOptions = [\n    {\n      value: \"true\",\n      label: \"true\",\n    },\n    {\n      value: \"false\",\n      label: \"false\",\n    },\n    {\n      value: 1,\n      label: 1,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  let binaryTypesOptions = [\n    {\n      value: 1,\n      label: 1,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  const setValueHandler = (e, name) => {\n    let obj = value;\n    obj[name] = e;\n    setValue(obj);\n\n    console.log(name);\n    console.log(obj);\n    console.log(e);\n  };\n  console.log(value);\n  let fields = null;\n  fields = Object.entries(columns).map(([prop, val]) => {\n    console.log(val);\n    console.log(\"here\", val.name);\n\n    // if (val.type === \"DATETIME\" || val.type === \"TIME\" || val.type === \"DATE\") {\n    //   setValue({ ...value, [val?.type]: val?.name });\n    // }\n    return (\n      <>\n        <Label>{val.name}</Label>\n        <Box type=\"relative\">\n          {val.type === \"INTEGER\" ||\n          val.type === \"Integer\" ||\n          val.type === \"INT\" ? (\n            <Input\n              type=\"number\"\n              name={val.name}\n              color=\"grey\"\n              required\n              fontSize={3}\n              p={2}\n              defaultValue={editDataId ? data?.result[val.name] : null}\n              width=\"100%\"\n              ref={register}\n              mb={2}\n            />\n          ) : val.type === \"Enum\" ? (\n            <>\n              {/* <Box\n                    style={{\n                      marginBottom: \"1.5rem\",\n                      color: \"#6E798C\",\n                      fontSize: \"1.25rem\",\n                      paddingTop: \"10px\",\n                    }}\n                  >\n                    <Select\n                      key={0}\n                      // value={edit ? `${columns[edit]?.type}` : selectedFieldType}\n                      value={arrayDefaultList.filter((option) =>\n                        edit\n                          ? option.label === selectedEnumTypeEdit\n                          : option.label === selectedEnumType\n                      )}\n                      onChange={({ value }) =>\n                        edit\n                          ? setSelectedEnumTypeEdit(value)\n                          : setSelectedEnumType(value)\n                      }\n                      defaultValue={edit ? `${columns[edit]?.default}` : null}\n                      required\n                      theme={CARD_ELEMENT_OPTIONS}\n                      placeholder=\"Select Type\"\n                      options={arrayDefaultList}\n                    />\n                  </Box> */}\n            </>\n          ) : val.type === \"DATE\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              {\" \"}\n              <DateTimePicker\n                value={value[val.name]}\n                onChange={(e) => setValue({ ...value, [val.name]: e })}\n                // parseDate={(str) => new Date(str)}\n                format={\"y-MM-d\"}\n              />{\" \"}\n            </Box>\n          ) : val.type === \"DATETIME\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              {\" \"}\n              <DateTimePicker\n                value={value[val.name]}\n                onChange={(e) => setValue({ ...value, [val.name]: e })}\n                format={\"y-MM-dd h:m:s\"}\n                parseDate={(str) => new Date(str)}\n              />{\" \"}\n            </Box>\n          ) : val.type === \"TIME\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              {\" \"}\n              <DateTimePicker\n                value={value[val.name]}\n                onChange={(e) => setValue({ ...value, [val.name]: e })}\n                // parseDate={(str) => new Date(str)}\n                format={\"y-MM-dd h:m:s\"}\n              />{\" \"}\n            </Box>\n          ) : val.type === \"BIGINT\" ? (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                pattern=\"^[1-9][0-9]*$\"\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          ) : val.type === \"NUMERIC\" ? (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                pattern=\"^[0-9]+$\"\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          ) : val.type === \"DECIMAL\" ? (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                pattern=\"^(\\d+\\.?\\d*|\\.\\d+)$\"\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          ) : val.type === \"FLOAT\" ? (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                pattern=\"[+-]?([0-9]*[.])?[0-9]+\"\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          ) : val.type === \"BOOLEAN\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              <Select\n                key={0}\n                // value={selectedBooleanType[val.name]}\n                // onChange={(e) => setValue()}\n                // value={selectedBooleanType}\n                value={booleanTypesOptions.filter(\n                  (option) => option.label === selectedBooleanType[val.name]\n                )}\n                onChange={({ value }) =>\n                  setSelectedBooleanType({\n                    ...selectedBooleanType,\n                    [val.name]: value,\n                  })\n                }\n                required\n                theme={CARD_ELEMENT_OPTIONS}\n                placeholder=\"Select Type\"\n                options={booleanTypesOptions}\n              />\n            </Box>\n          ) : val.type === \"BLOB\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              <Select\n                key={0}\n                value={binaryTypesOptions.filter(\n                  (option) => option.label === selectedBinaryType[val.name]\n                )}\n                onChange={({ value }) =>\n                  setSelectedBinaryType({\n                    ...selectedBinaryType,\n                    [val.name]: value,\n                  })\n                }\n                required\n                theme={CARD_ELEMENT_OPTIONS}\n                placeholder=\"Select Type\"\n                options={binaryTypesOptions}\n              />\n            </Box>\n          ) : val.type === \"VARCHAR(123)\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              <div className=\"App\">\n                <CKEditor\n                  editor={ClassicEditor}\n                  onReady={(editor) => {\n                    // You can store the \"editor\" and use when it is needed.\n                    console.log(\"Editor is ready to use!\", editor);\n                  }}\n                  onChange={richTextHandler}\n\n                  // onBlur={(event, editor) => {\n                  //   console.log(\"Blur.\", editor);\n                  // }}\n                  // onFocus={(event, editor) => {\n                  //   console.log(\"Focus.\", editor);\n                  // }}\n                />\n              </div>\n            </Box>\n          ) : val.type === \"ImageType\" ? (\n            <Box\n              style={{\n                marginBottom: \"1.5rem\",\n                color: \"#6E798C\",\n                fontSize: \"1.25rem\",\n                paddingTop: \"10px\",\n              }}\n            >\n              <ImageUploadSelect\n                setMarkedImage={setMarkedImage}\n                markedImage={markedImage}\n              />\n            </Box>\n          ) : (\n            <Box type=\"relative\">\n              <Input\n                name={val.name}\n                color=\"grey\"\n                required\n                fontSize={3}\n                p={2}\n                width=\"100%\"\n                // defaultValue={edit ? `${columns[edit]?.default}` : null}\n                ref={register}\n                mb={2}\n              />\n\n              {errors?.name && (\n                <Span color=\"orange\" mb={4}>\n                  {errors?.name?.message}\n                </Span>\n              )}\n            </Box>\n          )}\n          {/* {errors?.name && (\n            <Span color=\"orange\" mb={4}>\n              {errors?.name?.message}\n            </Span>\n          )} */}\n        </Box>{\" \"}\n      </>\n    );\n  });\n\n  function convert(str, type) {\n    var mnths = {\n        Jan: \"01\",\n        Feb: \"02\",\n        Mar: \"03\",\n        Apr: \"04\",\n        May: \"05\",\n        Jun: \"06\",\n        Jul: \"07\",\n        Aug: \"08\",\n        Sep: \"09\",\n        Oct: \"10\",\n        Nov: \"11\",\n        Dec: \"12\",\n      },\n      date = str.split(\" \");\n    console.log(type, \"inside\", str);\n    if (type === \"DATETIME\") {\n      return [[date[3], mnths[date[1]], date[2]].join(\"-\"), date[4]].join(\" \");\n    } else if (type === \"DATE\") {\n      return [date[3], mnths[date[1]], date[2]].join(\"-\");\n    } else {\n      return `${date[4]}`;\n    }\n  }\n\n  async function handleSignup(params) {\n    console.log(params);\n    console.log(\"see1\", selectedBooleanType);\n    for (let key in columns) {\n      console.log(key, columns, columns[key][\"type\"]);\n      if (\n        columns[key][\"type\"] === \"INTEGER\" ||\n        columns[key][\"type\"] === \"Integer\" ||\n        columns[key][\"type\"] === \"INT\" ||\n        columns[key][\"type\"] === \"BIGINT\" ||\n        columns[key][\"type\"] === \"NUMERIC\"\n      ) {\n        let name = columns[key][\"name\"];\n        params[name] = parseInt(params[name]);\n      } else if (\n        columns[key][\"type\"] === \"DECIMAL\" ||\n        columns[key][\"type\"] === \"FLOAT\"\n      ) {\n        let name = columns[key][\"name\"];\n        params[name] = parseFloat(params[name]);\n      } else if (columns[key][\"type\"] === \"TIME\") {\n        let name = columns[key][\"name\"];\n        params[name] = convert(`${value[name]}`, columns[key][\"type\"]);\n      } else if (columns[key][\"type\"] === \"DATETIME\") {\n        let name = columns[key][\"name\"];\n        console.log(\"def1\", value.name);\n        params[name] = convert(`${value[name]}`, columns[key][\"type\"]);\n      } else if (columns[key][\"type\"] === \"DATE\") {\n        let name = columns[key][\"name\"];\n        params[name] = convert(`${value[name]}`, columns[key][\"type\"]);\n      } else if (columns[key][\"type\"] === \"BOOLEAN\") {\n        let name = columns[key][\"name\"];\n        params[name] =\n          selectedBooleanType[name] === \"true\"\n            ? true\n            : selectedBooleanType[name] === \"false\"\n            ? false\n            : selectedBooleanType[name];\n      } else if (columns[key][\"type\"] === \"BLOB\") {\n        let name = columns[key][\"name\"];\n        params[name] = selectedBinaryType[name];\n      } else if (columns[key][\"type\"] === \"VARCHAR(123)\") {\n        let name = columns[key][\"name\"];\n        params[name] = html;\n      } else if (columns[key][\"type\"] === \"ImageType\") {\n        let name = columns[key][\"name\"];\n        params[name] = markedImage;\n      }\n    }\n    console.log(params, value);\n    try {\n      let { data } =\n        basejwt && restrictByJwt && editDataId\n          ? await ApiJwt.put(\n              APIURLS.getTableContentById({ app, table, editDataId }),\n              {\n                ...params,\n              }\n            )\n          : basejwt && editDataId\n          ? await ApiJwt.put(\n              APIURLS.getTableContentById({ app, table, editDataId }),\n              {\n                ...params,\n              }\n            )\n          : basejwt && restrictByJwt\n          ? await ApiJwt.post(APIURLS.getTableContent({ app, table }), {\n              ...params,\n            })\n          : basejwt && basejwt.base_table === table\n          ? await ApiApp.post(APIURLS.postRegisterTableData({ app, table }), {\n              ...params,\n            })\n          : editDataId\n          ? await ApiApp.put(\n              APIURLS.getTableContentById({ app, table, editDataId }),\n              {\n                ...params,\n              }\n            )\n          : await ApiApp.post(APIURLS.getTableContent({ app, table }), {\n              ...params,\n            });\n      if (basejwt) {\n        let jwtToken = data?.access_token;\n        localStorage.setItem(\"jwtToken\", jwtToken);\n        setJwtHeader(jwtToken);\n        setJwtToken(jwtToken);\n        await queryClient.refetchQueries([\n          APIURLS.getTableContent({ app, table }),\n          \"jwt_info\",\n        ]);\n      } else {\n        await queryClient.refetchQueries([\n          APIURLS.getTableContent({ app, table }),\n        ]);\n      }\n      console.log(\"see2\", queryClient.isFetching());\n      toast({\n        title: \"Data Added.\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      setMarkedImage();\n      onClose();\n      console.log(\"there\", data);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n    }\n  }\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose} size={\"xl\"}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            {\" \"}\n            <Label>Create Field </Label>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Box type=\"row\" justifyContent=\"center\" m={6}>\n              <form\n                onSubmit={handleSubmit(handleSignup)}\n                style={{ width: \"35vw\" }}\n              >\n                {fields}\n                <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                  {\"Create\"}\n                </Button>\n              </form>\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default AppTableData;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/CreateAppName.js",["1799","1800","1801","1802","1803","1804","1805","1806"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/Application/ApplicationNext.js",["1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","1831","1832","1833"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/EditDatabase.js",["1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862"],"/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/RichTextView.js",["1863","1864","1865","1866","1867","1868","1869","1870","1871","1872","1873","1874","1875","1876","1877","1878","1879","1880","1881","1882","1883","1884","1885","1886","1887"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\n// import { useQueryClient } from \"react-query\";\n// import { useToast, createStandaloneToast } from \"@chakra-ui/react\";\n// import Api, { setHeader, APIURLS } from \"../../Api\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\n\nconst RichTextView = ({ isOpen, onOpen, onClose, richText }) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [selectedFieldType, setSelectedFieldType] = useState();\n\n  const queryClient = useQueryClient();\n\n  const onCloseHandler = () => {\n    onClose();\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onCloseHandler} size={\"10xl\"}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            {\" \"}\n            <Label></Label>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Box type=\"heading\" textAlign=\"center\">\n              {/* <Span type=\"heading\">{table}</Span> */}\n              <H2>Your Rich Text View</H2>\n            </Box>\n            <Box m={11} mt={8}>\n              <div\n                key=\"some_unique_key\"\n                class=\"ck-content\"\n                dangerouslySetInnerHTML={{\n                  __html: richText,\n                }}\n              />\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default RichTextView;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/ImageUploadSelect/ImageUploadSelect.js",["1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898","1899","1900","1901","1902","1903","1904","1905","1906","1907","1908"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NavLink } from \"react-router-dom\";\nimport { useGlobal } from \"reactn\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n  Para,\n} from \"../../styles\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n} from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setJwtHeader, APIURLS, ApiUpload } from \"../../Api\";\nimport Select from \"react-select\";\n\nconst ImageUploadSelect = ({ setMarkedImage, markedImage }) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [selectedImage, setSelectedImage] = useState();\n\n  const queryClient = useQueryClient();\n  const toast = createStandaloneToast();\n  const { data, isLoading } = useQuery(APIURLS.getUserImages);\n  console.log(\"here are our images\", data);\n  async function fileUpload() {\n    // e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"image\", selectedImage);\n      let { data } = await ApiUpload.post(APIURLS.uploadImage(), formData);\n      console.log(data);\n      toast({\n        title: \"Success\",\n        description: data?.result,\n        status: \"success\",\n        duration: 9000,\n        isClosable: false,\n      });\n      await queryClient.refetchQueries(APIURLS.getUserImages);\n    } catch ({ response }) {\n      toast({\n        title: \"An error occurred.\",\n        // description: response?.data?.result,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n      console.log(response);\n    }\n  }\n\n  const fileSelectHandler = (event) => {\n    setSelectedImage(event.target.files[0]);\n  };\n\n  return (\n    <>\n      <Box type=\"row\">\n        {/* <Button ></Button> */}\n        <Box type=\"relative\">\n          <Input\n            id=\"fileButton\"\n            color=\"grey\"\n            type=\"file\"\n            accept=\".jpeg, .png, .jpg\"\n            fontSize={3}\n            p={2}\n            // defaultValue={editDataId ? data?.result[val.name] : null}\n            onChange={fileSelectHandler}\n            width=\"100%\"\n            mb={2}\n          />\n        </Box>\n        <Button type=\"button\" onClick={fileUpload} mb={\"10px\"}>\n          Add\n        </Button>\n        {/* <Button onClick={fileUploadButton}>Image Upload</Button> */}\n      </Box>\n      <Accordion allowToggle style={{ padding: \"20px\" }}>\n        <AccordionItem>\n          <AccordionButton>\n            <Box type=\"row\" justifyContent=\"start\" width=\"100%\">\n              {\" \"}\n              <Para ml={4} color={\"#2a3950\"}>\n                {\"Select Image\"}\n              </Para>\n            </Box>\n            <AccordionIcon />\n          </AccordionButton>\n          <AccordionPanel pb={4} style={{ backgroundColor: \"#f7f8fb\" }}>\n            <Box\n              display=\"grid\"\n              gridTemplateColumns={[\"1fr 1fr\", \"1fr 1fr 1fr \"]}\n              // mb={8}\n              gridGap={4}\n              style={{\n                height: \"245px\",\n                overflowY: \"scroll\",\n              }}\n            >\n              {data &&\n                Object.entries(data).map(([index, val]) => {\n                  console.log(index, val);\n                  console.log(val[\"image\"]);\n                  return (\n                    <Box>\n                      {\" \"}\n                      <Image\n                        src={`data:image/png;base64, ${val[\"image\"]}`}\n                        onClick={() => setMarkedImage(val[\"image\"])}\n                        style={{\n                          border:\n                            markedImage == val[\"image\"]\n                              ? \"3px solid #8071b3\"\n                              : null,\n                          padding: \"2px\",\n                        }}\n                        // src=\"/Users/nishantrana/Desktop/doga/doga-frontend/public/uploads/654fdb5dc9eab375a46bdd1c17f4f051.jpg\"\n                      ></Image>\n                    </Box>\n                  );\n                })}\n            </Box>\n          </AccordionPanel>\n        </AccordionItem>\n      </Accordion>\n\n      {/* <Box type=\"row\" justifyContent=\"center\" m={6}>\n              <form\n                onSubmit={handleSubmit(handleSignup)}\n                style={{ width: \"35vw\" }}\n              >\n                 //   <Label>{val}</Label>\n          <Box type=\"relative\">\n          <Input\n              name={val}\n              color=\"grey\"\n              required\n              fontSize={3}\n              p={2}\n              // defaultValue={editDataId ? data?.result[val.name] : null}\n              width=\"100%\"\n              ref={register}\n              mb={2}\n            />\n\n            {errors?.name && (\n              <Span color=\"orange\" mb={4}>\n                {errors?.name?.message}\n              </Span>\n            )}\n          </Box>\n                <Button mt={4} width=\"100%\" fontSize={18} type=\"submit\">\n                  {\"Login\"}\n                </Button>\n              </form>\n            </Box>\n          */}\n    </>\n  );\n};\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"18px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nexport default ImageUploadSelect;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/components/Modal/ImageView.js",["1909","1910","1911","1912","1913","1914","1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932","1933"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useGlobal } from \"reactn\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Box,\n  ResponsiveImage,\n  Image,\n  Button,\n  StyledLink,\n  Span,\n  MotionBox,\n  H2,\n  H1,\n  Input,\n  Label,\n} from \"../../styles\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\n// import { useQueryClient } from \"react-query\";\n// import { useToast, createStandaloneToast } from \"@chakra-ui/react\";\n// import Api, { setHeader, APIURLS } from \"../../Api\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { useQuery, useQueryClient } from \"react-query\";\nimport { useToast, createStandaloneToast } from \"@chakra-ui/react\";\nimport Api, { setHeader, APIURLS } from \"../../Api\";\n\nconst ImageView = ({ isOpen, onOpen, onClose, imageView }) => {\n  const [token] = useGlobal(\"token\");\n  const { handleSubmit, register, errors } = useForm();\n  const [selectedFieldType, setSelectedFieldType] = useState();\n\n  const queryClient = useQueryClient();\n\n  const onCloseHandler = () => {\n    onClose();\n  };\n  console.log(\"iamgesrc\", imageView);\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onCloseHandler} size={\"10xl\"}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            {\" \"}\n            <Label></Label>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Box>\n              {\" \"}\n              <Image\n                src={`data:image/png;base64, ${imageView}`}\n\n                // src=\"/Users/nishantrana/Desktop/doga/doga-frontend/public/uploads/654fdb5dc9eab375a46bdd1c17f4f051.jpg\"\n              ></Image>\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ImageView;\n","/Users/nishantrana/Desktop/doga/doga-frontend/src/containers/AppHome/DoughnutChart.js",[],{"ruleId":"1934","replacedBy":"1935"},{"ruleId":"1936","replacedBy":"1937"},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":38,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":46},{"ruleId":"1938","severity":1,"message":"1942","line":2,"column":25,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":35},{"ruleId":"1938","severity":1,"message":"1943","line":6,"column":44,"nodeType":"1940","messageId":"1941","endLine":6,"endColumn":52},{"ruleId":"1938","severity":1,"message":"1944","line":10,"column":8,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1945","line":13,"column":15,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1946","line":17,"column":10,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1947","line":34,"column":7,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":14},{"ruleId":"1948","severity":1,"message":"1949","line":126,"column":6,"nodeType":"1950","endLine":126,"endColumn":8,"suggestions":"1951"},{"ruleId":"1948","severity":1,"message":"1952","line":135,"column":6,"nodeType":"1950","endLine":135,"endColumn":55,"suggestions":"1953"},{"ruleId":"1948","severity":1,"message":"1954","line":135,"column":25,"nodeType":"1955","endLine":135,"endColumn":54},{"ruleId":"1948","severity":1,"message":"1956","line":143,"column":6,"nodeType":"1950","endLine":143,"endColumn":64,"suggestions":"1957"},{"ruleId":"1948","severity":1,"message":"1954","line":143,"column":31,"nodeType":"1955","endLine":143,"endColumn":63},{"ruleId":"1938","severity":1,"message":"1958","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":18},{"ruleId":"1959","severity":1,"message":"1960","line":116,"column":9,"nodeType":"1961","messageId":"1962","endLine":116,"endColumn":16},{"ruleId":"1959","severity":1,"message":"1963","line":347,"column":5,"nodeType":"1961","messageId":"1962","endLine":347,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":26},{"ruleId":"1938","severity":1,"message":"1965","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1966","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1945","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1970","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1971","line":28,"column":16,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1972","line":30,"column":8,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1973","line":36,"column":3,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1974","line":38,"column":3,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1975","line":39,"column":3,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1976","line":40,"column":3,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1946","line":44,"column":10,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":45,"column":15,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1978","line":50,"column":3,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":22},{"ruleId":"1938","severity":1,"message":"1979","line":59,"column":11,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1980","line":59,"column":19,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1981","line":59,"column":27,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":34},{"ruleId":"1938","severity":1,"message":"1982","line":63,"column":17,"nodeType":"1940","messageId":"1941","endLine":63,"endColumn":24},{"ruleId":"1983","severity":1,"message":"1984","line":355,"column":23,"nodeType":"1985","endLine":355,"endColumn":44},{"ruleId":"1938","severity":1,"message":"1986","line":480,"column":10,"nodeType":"1940","messageId":"1941","endLine":480,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1987","line":482,"column":10,"nodeType":"1940","messageId":"1941","endLine":482,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":26},{"ruleId":"1938","severity":1,"message":"1966","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":6,"column":3,"nodeType":"1940","messageId":"1941","endLine":6,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1988","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1987","line":13,"column":10,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1977","line":18,"column":15,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1987","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1989","line":30,"column":18,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1945","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1990","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1943","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1991","line":26,"column":20,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":34},{"ruleId":"1938","severity":1,"message":"1968","line":1,"column":40,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":50},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1994","line":5,"column":8,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":5,"column":15,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1966","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1945","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1997","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1998","line":19,"column":3,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1990","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2000","line":23,"column":21,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"2001","line":24,"column":10,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2002","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2003","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2004","line":28,"column":8,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2005","line":29,"column":8,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2006","line":30,"column":8,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2007","line":35,"column":9,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1979","line":41,"column":11,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1981","line":41,"column":27,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":34},{"ruleId":"1938","severity":1,"message":"2008","line":43,"column":10,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2009","line":44,"column":9,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2010","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2012","line":19,"column":3,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2013","line":20,"column":3,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2014","line":21,"column":3,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2015","line":22,"column":3,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2016","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2017","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":12},{"ruleId":"1938","severity":1,"message":"2018","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1946","line":29,"column":10,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":30,"column":15,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1987","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2019","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2020","line":37,"column":19,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":29},{"ruleId":"1938","severity":1,"message":"1989","line":38,"column":18,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2021","line":43,"column":17,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2022","line":48,"column":13,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":26},{"ruleId":"1938","severity":1,"message":"1990","line":5,"column":10,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2023","line":5,"column":21,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2024","line":7,"column":22,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2025","line":8,"column":10,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2026","line":9,"column":10,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2027","line":11,"column":10,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2028","line":11,"column":16,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2029","line":12,"column":10,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2030","line":12,"column":18,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2031","line":15,"column":10,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1966","line":22,"column":3,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1988","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":26,"column":3,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1945","line":27,"column":3,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1970","line":28,"column":3,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":29,"column":3,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1991","line":33,"column":20,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":34},{"ruleId":"1938","severity":1,"message":"2032","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2033","line":34,"column":18,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1994","line":35,"column":8,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":11},{"ruleId":"1938","severity":1,"message":"2034","line":50,"column":9,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":29},{"ruleId":"2035","severity":1,"message":"2036","line":59,"column":63,"nodeType":"2037","messageId":"1962","endLine":59,"endColumn":65},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2038","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1994","line":15,"column":8,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":15,"column":15,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2038","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1966","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1988","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":19,"column":3,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":20,"column":3,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1945","line":21,"column":3,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1995","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1973","line":32,"column":3,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2039","line":33,"column":3,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1974","line":34,"column":3,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1975","line":35,"column":3,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1976","line":36,"column":3,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2040","line":37,"column":3,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2004","line":40,"column":8,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":22},{"ruleId":"1938","severity":1,"message":"1999","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2041","line":42,"column":10,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":16},{"ruleId":"1938","severity":1,"message":"1994","line":45,"column":8,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":45,"column":15,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2042","line":46,"column":8,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2043","line":50,"column":10,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":26},{"ruleId":"1938","severity":1,"message":"1979","line":51,"column":11,"nodeType":"1940","messageId":"1941","endLine":51,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2044","line":56,"column":9,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2045","line":60,"column":9,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":23},{"ruleId":"2035","severity":1,"message":"2036","line":151,"column":53,"nodeType":"2037","messageId":"1962","endLine":151,"endColumn":55},{"ruleId":"1938","severity":1,"message":"1970","line":2,"column":15,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1988","line":2,"column":19,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2046","line":2,"column":27,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":31},{"ruleId":"1938","severity":1,"message":"2047","line":4,"column":8,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":23},{"ruleId":"1938","severity":1,"message":"1943","line":8,"column":10,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1964","line":10,"column":10,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2048","line":16,"column":10,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2049","line":16,"column":16,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2050","line":17,"column":10,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2051","line":17,"column":17,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2007","line":18,"column":9,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2052","line":19,"column":30,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":51},{"ruleId":"1938","severity":1,"message":"2053","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2054","line":22,"column":21,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":33},{"ruleId":"1938","severity":1,"message":"1970","line":2,"column":15,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2012","line":4,"column":3,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2013","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2014","line":6,"column":3,"nodeType":"1940","messageId":"1941","endLine":6,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2015","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2016","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2017","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":12},{"ruleId":"1938","severity":1,"message":"2018","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1994","line":13,"column":8,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":13,"column":15,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2055","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":7},{"ruleId":"1938","severity":1,"message":"2056","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":13},{"ruleId":"1938","severity":1,"message":"2057","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":11},{"ruleId":"1938","severity":1,"message":"2058","line":19,"column":3,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1973","line":20,"column":3,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2039","line":21,"column":3,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1974","line":22,"column":3,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1975","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1976","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2040","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2059","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2060","line":30,"column":19,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":29},{"ruleId":"1938","severity":1,"message":"1982","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2061","line":31,"column":19,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":29},{"ruleId":"2062","severity":1,"message":"2063","line":43,"column":5,"nodeType":"2064","messageId":"2065","endLine":48,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":52,"column":5,"nodeType":"2064","messageId":"2065","endLine":57,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":61,"column":5,"nodeType":"2064","messageId":"2065","endLine":66,"endColumn":6},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1946","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":38,"column":15,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2066","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2019","line":58,"column":10,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2020","line":58,"column":19,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2067","line":60,"column":10,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2068","line":60,"column":21,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":33},{"ruleId":"2062","severity":1,"message":"2063","line":125,"column":5,"nodeType":"2064","messageId":"2065","endLine":130,"endColumn":6},{"ruleId":"1938","severity":1,"message":"2069","line":191,"column":9,"nodeType":"1940","messageId":"1941","endLine":191,"endColumn":26},{"ruleId":"2035","severity":1,"message":"2036","line":259,"column":36,"nodeType":"2037","messageId":"1962","endLine":259,"endColumn":38},{"ruleId":"2035","severity":1,"message":"2036","line":276,"column":36,"nodeType":"2037","messageId":"1962","endLine":276,"endColumn":38},{"ruleId":"2035","severity":1,"message":"2036","line":285,"column":51,"nodeType":"2037","messageId":"1962","endLine":285,"endColumn":53},{"ruleId":"2062","severity":1,"message":"2063","line":429,"column":5,"nodeType":"2064","messageId":"2065","endLine":435,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":488,"column":5,"nodeType":"2064","messageId":"2065","endLine":499,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":503,"column":5,"nodeType":"2064","messageId":"2065","endLine":508,"endColumn":6},{"ruleId":"1938","severity":1,"message":"2070","line":590,"column":9,"nodeType":"1940","messageId":"1941","endLine":590,"endColumn":26},{"ruleId":"2035","severity":1,"message":"2036","line":637,"column":15,"nodeType":"2037","messageId":"1962","endLine":637,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1966","line":4,"column":3,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1945","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1970","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"2046","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1946","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2071","line":52,"column":9,"nodeType":"1940","messageId":"1941","endLine":52,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2072","line":67,"column":18,"nodeType":"1940","messageId":"1941","endLine":67,"endColumn":34},{"ruleId":"1938","severity":1,"message":"2073","line":167,"column":9,"nodeType":"1940","messageId":"1941","endLine":167,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2022","line":171,"column":15,"nodeType":"1940","messageId":"1941","endLine":171,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2022","line":175,"column":15,"nodeType":"1940","messageId":"1941","endLine":175,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2074","line":335,"column":7,"nodeType":"1940","messageId":"1941","endLine":335,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2075","line":336,"column":5,"nodeType":"1940","messageId":"1941","endLine":336,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2076","line":347,"column":7,"nodeType":"1940","messageId":"1941","endLine":347,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2077","line":353,"column":7,"nodeType":"1940","messageId":"1941","endLine":353,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1966","line":4,"column":3,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2078","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2079","line":4,"column":20,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2011","line":5,"column":10,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2016","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":33,"column":10,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1946","line":35,"column":10,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":36,"column":15,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1987","line":48,"column":10,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2080","line":60,"column":10,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2081","line":60,"column":17,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2082","line":65,"column":9,"nodeType":"1940","messageId":"1941","endLine":65,"endColumn":20},{"ruleId":"2062","severity":1,"message":"2063","line":104,"column":5,"nodeType":"2064","messageId":"2065","endLine":109,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":114,"column":5,"nodeType":"2064","messageId":"2065","endLine":119,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":134,"column":5,"nodeType":"2064","messageId":"2065","endLine":139,"endColumn":6},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1988","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2016","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":28,"column":10,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":29,"column":10,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2083","line":30,"column":20,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1994","line":31,"column":8,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":31,"column":15,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2084","line":31,"column":26,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2085","line":32,"column":8,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1987","line":48,"column":10,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2086","line":49,"column":11,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2087","line":49,"column":25,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2088","line":49,"column":35,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2089","line":50,"column":10,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":50,"column":29,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2007","line":53,"column":9,"nodeType":"1940","messageId":"1941","endLine":53,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2016","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":28,"column":10,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1946","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":31,"column":15,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2089","line":47,"column":10,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":47,"column":29,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2091","line":51,"column":10,"nodeType":"1940","messageId":"1941","endLine":51,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2092","line":54,"column":9,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2082","line":55,"column":9,"nodeType":"1940","messageId":"1941","endLine":55,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2010","line":58,"column":17,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1987","line":71,"column":9,"nodeType":"1940","messageId":"1941","endLine":71,"endColumn":14},{"ruleId":"2093","severity":1,"message":"2094","line":71,"column":59,"nodeType":"2095","messageId":"2096","endLine":71,"endColumn":61},{"ruleId":"1948","severity":1,"message":"2097","line":96,"column":6,"nodeType":"1950","endLine":96,"endColumn":8,"suggestions":"2098"},{"ruleId":"1938","severity":1,"message":"2099","line":128,"column":9,"nodeType":"1940","messageId":"1941","endLine":128,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2100","line":6,"column":3,"nodeType":"1940","messageId":"1941","endLine":6,"endColumn":6},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1988","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2016","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":32,"column":10,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2083","line":32,"column":20,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1994","line":33,"column":8,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":33,"column":15,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2084","line":33,"column":26,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2085","line":34,"column":8,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2074","line":35,"column":8,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1987","line":39,"column":10,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2086","line":40,"column":11,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2087","line":40,"column":25,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2088","line":40,"column":35,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2089","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":41,"column":29,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2007","line":43,"column":9,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2016","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":28,"column":10,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":29,"column":10,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2085","line":32,"column":8,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1987","line":35,"column":10,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2089","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":37,"column":29,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2091","line":38,"column":10,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2101","line":141,"column":7,"nodeType":"1940","messageId":"1941","endLine":141,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2046","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":7},{"ruleId":"1938","severity":1,"message":"2016","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":32,"column":15,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":32,"column":35,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1987","line":46,"column":10,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2007","line":51,"column":9,"nodeType":"1940","messageId":"1941","endLine":51,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1977","line":5,"column":15,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1966","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1968","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1945","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1997","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1990","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2000","line":23,"column":21,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"2001","line":24,"column":10,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2002","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2031","line":28,"column":10,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2103","line":29,"column":10,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2104","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":30},{"ruleId":"1938","severity":1,"message":"2004","line":33,"column":8,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2005","line":34,"column":8,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2006","line":35,"column":8,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2105","line":38,"column":10,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2007","line":44,"column":9,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2106","line":45,"column":9,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2107","line":53,"column":9,"nodeType":"1940","messageId":"1941","endLine":53,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2010","line":61,"column":9,"nodeType":"1940","messageId":"1941","endLine":61,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1994","line":5,"column":8,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":5,"column":15,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1966","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1997","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1946","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2104","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":30},{"ruleId":"1938","severity":1,"message":"2108","line":32,"column":10,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2004","line":33,"column":8,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2005","line":34,"column":8,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2006","line":35,"column":8,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2105","line":38,"column":10,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2109","line":39,"column":10,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2110","line":39,"column":20,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2111","line":41,"column":8,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2007","line":44,"column":9,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2106","line":45,"column":9,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2112","line":46,"column":9,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2010","line":52,"column":9,"nodeType":"1940","messageId":"1941","endLine":52,"endColumn":19},{"ruleId":"2035","severity":1,"message":"2113","line":67,"column":24,"nodeType":"2037","messageId":"1962","endLine":67,"endColumn":26},{"ruleId":"2035","severity":1,"message":"2113","line":160,"column":47,"nodeType":"2037","messageId":"1962","endLine":160,"endColumn":49},{"ruleId":"2035","severity":1,"message":"2113","line":161,"column":54,"nodeType":"2037","messageId":"1962","endLine":161,"endColumn":56},{"ruleId":"2035","severity":1,"message":"2113","line":163,"column":50,"nodeType":"2037","messageId":"1962","endLine":163,"endColumn":52},{"ruleId":"2035","severity":1,"message":"2036","line":164,"column":56,"nodeType":"2037","messageId":"1962","endLine":164,"endColumn":58},{"ruleId":"2035","severity":1,"message":"2113","line":290,"column":43,"nodeType":"2037","messageId":"1962","endLine":290,"endColumn":45},{"ruleId":"2035","severity":1,"message":"2113","line":291,"column":50,"nodeType":"2037","messageId":"1962","endLine":291,"endColumn":52},{"ruleId":"2035","severity":1,"message":"2113","line":293,"column":46,"nodeType":"2037","messageId":"1962","endLine":293,"endColumn":48},{"ruleId":"2035","severity":1,"message":"2036","line":294,"column":52,"nodeType":"2037","messageId":"1962","endLine":294,"endColumn":54},{"ruleId":"2035","severity":1,"message":"2113","line":328,"column":24,"nodeType":"2037","messageId":"1962","endLine":328,"endColumn":26},{"ruleId":"2035","severity":1,"message":"2113","line":420,"column":47,"nodeType":"2037","messageId":"1962","endLine":420,"endColumn":49},{"ruleId":"2035","severity":1,"message":"2113","line":421,"column":54,"nodeType":"2037","messageId":"1962","endLine":421,"endColumn":56},{"ruleId":"2035","severity":1,"message":"2113","line":423,"column":50,"nodeType":"2037","messageId":"1962","endLine":423,"endColumn":52},{"ruleId":"2035","severity":1,"message":"2036","line":424,"column":56,"nodeType":"2037","messageId":"1962","endLine":424,"endColumn":58},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1943","line":24,"column":10,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2085","line":28,"column":8,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1987","line":39,"column":10,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2115","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":41,"column":18,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2117","line":42,"column":10,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2118","line":42,"column":23,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2119","line":44,"column":10,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":44,"column":23,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":46,"column":9,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2121","line":51,"column":10,"nodeType":"1940","messageId":"1941","endLine":51,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2122","line":52,"column":10,"nodeType":"1940","messageId":"1941","endLine":52,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2123","line":54,"column":10,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2124","line":54,"column":22,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2022","line":99,"column":13,"nodeType":"1940","messageId":"1941","endLine":99,"endColumn":17},{"ruleId":"2035","severity":1,"message":"2036","line":135,"column":15,"nodeType":"2037","messageId":"1962","endLine":135,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2101","line":371,"column":7,"nodeType":"1940","messageId":"1941","endLine":371,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2046","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":7},{"ruleId":"1938","severity":1,"message":"2125","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2126","line":20,"column":10,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2127","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2087","line":33,"column":25,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2088","line":33,"column":35,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2115","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":34,"column":18,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2010","line":39,"column":9,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2007","line":41,"column":9,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1988","line":2,"column":19,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2128","line":7,"column":10,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1943","line":8,"column":10,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2006","line":13,"column":8,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2048","line":18,"column":10,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2049","line":18,"column":16,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2050","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2051","line":19,"column":17,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2007","line":21,"column":9,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2129","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":28},{"ruleId":"1938","severity":1,"message":"2052","line":22,"column":30,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":51},{"ruleId":"1938","severity":1,"message":"2053","line":27,"column":10,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2054","line":27,"column":21,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2010","line":28,"column":9,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2045","line":30,"column":9,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":23},{"ruleId":"1948","severity":1,"message":"2130","line":34,"column":6,"nodeType":"1950","endLine":34,"endColumn":27,"suggestions":"2131"},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2046","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":7},{"ruleId":"1938","severity":1,"message":"2125","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2126","line":20,"column":10,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2127","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2115","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":34,"column":18,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2061","line":36,"column":19,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2119","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":37,"column":23,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":39,"column":9,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":40,"column":9,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":41,"column":9,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2125","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2126","line":20,"column":10,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2127","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2115","line":40,"column":10,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":40,"column":18,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2117","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2118","line":41,"column":23,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2119","line":44,"column":10,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":44,"column":23,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":46,"column":9,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2132","line":54,"column":10,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2133","line":54,"column":22,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2121","line":55,"column":10,"nodeType":"1940","messageId":"1941","endLine":55,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2134","line":55,"column":24,"nodeType":"1940","messageId":"1941","endLine":55,"endColumn":39},{"ruleId":"1938","severity":1,"message":"2122","line":56,"column":10,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2135","line":56,"column":19,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2136","line":57,"column":10,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2137","line":57,"column":22,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2123","line":58,"column":10,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2124","line":58,"column":22,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2138","line":59,"column":10,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2139","line":59,"column":22,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2140","line":60,"column":10,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2141","line":60,"column":22,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2142","line":61,"column":10,"nodeType":"1940","messageId":"1941","endLine":61,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2143","line":61,"column":31,"nodeType":"1940","messageId":"1941","endLine":61,"endColumn":53},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2012","line":20,"column":3,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2013","line":21,"column":3,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2014","line":22,"column":3,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2015","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2016","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2017","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":12},{"ruleId":"1938","severity":1,"message":"2018","line":26,"column":3,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2144","line":29,"column":10,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2145","line":29,"column":19,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":28},{"ruleId":"1938","severity":1,"message":"1946","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":35,"column":15,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":35,"column":35,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2085","line":36,"column":8,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2116","line":41,"column":18,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2007","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2022","line":74,"column":15,"nodeType":"1940","messageId":"1941","endLine":74,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2022","line":84,"column":15,"nodeType":"1940","messageId":"1941","endLine":84,"endColumn":19},{"ruleId":"2035","severity":1,"message":"2036","line":111,"column":15,"nodeType":"2037","messageId":"1962","endLine":111,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2101","line":316,"column":7,"nodeType":"1940","messageId":"1941","endLine":316,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2012","line":20,"column":3,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2013","line":21,"column":3,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2014","line":22,"column":3,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2015","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2016","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2017","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":12},{"ruleId":"1938","severity":1,"message":"2018","line":26,"column":3,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2144","line":29,"column":10,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2145","line":29,"column":19,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":28},{"ruleId":"1938","severity":1,"message":"1946","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":35,"column":15,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":35,"column":35,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2085","line":36,"column":8,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2116","line":41,"column":18,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2007","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2022","line":74,"column":15,"nodeType":"1940","messageId":"1941","endLine":74,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2022","line":84,"column":15,"nodeType":"1940","messageId":"1941","endLine":84,"endColumn":19},{"ruleId":"2035","severity":1,"message":"2036","line":111,"column":15,"nodeType":"2037","messageId":"1962","endLine":111,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2101","line":337,"column":7,"nodeType":"1940","messageId":"1941","endLine":337,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2125","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2126","line":20,"column":10,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2127","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1943","line":24,"column":10,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1994","line":26,"column":8,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2084","line":26,"column":26,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1987","line":39,"column":10,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2115","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":41,"column":18,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2117","line":42,"column":10,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2118","line":42,"column":23,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2119","line":45,"column":10,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":45,"column":23,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":49,"column":9,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2132","line":55,"column":10,"nodeType":"1940","messageId":"1941","endLine":55,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2133","line":55,"column":22,"nodeType":"1940","messageId":"1941","endLine":55,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2121","line":56,"column":10,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2134","line":56,"column":24,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":39},{"ruleId":"1938","severity":1,"message":"2122","line":57,"column":10,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2135","line":57,"column":19,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2136","line":58,"column":10,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2137","line":58,"column":22,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2123","line":59,"column":10,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2124","line":59,"column":22,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2138","line":60,"column":10,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2139","line":60,"column":22,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2140","line":61,"column":10,"nodeType":"1940","messageId":"1941","endLine":61,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2141","line":61,"column":22,"nodeType":"1940","messageId":"1941","endLine":61,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2142","line":62,"column":10,"nodeType":"1940","messageId":"1941","endLine":62,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2143","line":62,"column":31,"nodeType":"1940","messageId":"1941","endLine":62,"endColumn":53},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":5,"column":10,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2003","line":24,"column":10,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":24,"column":23,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1943","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":27,"column":15,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":27,"column":35,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2085","line":29,"column":8,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1987","line":40,"column":10,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2146","line":41,"column":43,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":48},{"ruleId":"1938","severity":1,"message":"2115","line":42,"column":10,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":42,"column":18,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2117","line":43,"column":10,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2118","line":43,"column":23,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2119","line":45,"column":10,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":45,"column":23,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":49,"column":9,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2121","line":52,"column":10,"nodeType":"1940","messageId":"1941","endLine":52,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2122","line":53,"column":10,"nodeType":"1940","messageId":"1941","endLine":53,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2123","line":57,"column":10,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2124","line":57,"column":22,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":35},{"ruleId":"2035","severity":1,"message":"2036","line":91,"column":15,"nodeType":"2037","messageId":"1962","endLine":91,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2022","line":137,"column":13,"nodeType":"1940","messageId":"1941","endLine":137,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2101","line":366,"column":7,"nodeType":"1940","messageId":"1941","endLine":366,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1966","line":4,"column":3,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":5},{"ruleId":"1934","replacedBy":"2147"},{"ruleId":"1936","replacedBy":"2148"},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":38,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":46},{"ruleId":"1938","severity":1,"message":"1942","line":2,"column":25,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":35},{"ruleId":"1938","severity":1,"message":"1943","line":6,"column":44,"nodeType":"1940","messageId":"1941","endLine":6,"endColumn":52},{"ruleId":"1938","severity":1,"message":"1944","line":10,"column":8,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1945","line":13,"column":15,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1946","line":17,"column":10,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1947","line":35,"column":7,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2149","line":98,"column":10,"nodeType":"1940","messageId":"1941","endLine":98,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2150","line":99,"column":10,"nodeType":"1940","messageId":"1941","endLine":99,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2151","line":99,"column":16,"nodeType":"1940","messageId":"1941","endLine":99,"endColumn":23},{"ruleId":"1948","severity":1,"message":"2152","line":109,"column":6,"nodeType":"1950","endLine":109,"endColumn":14,"suggestions":"2153"},{"ruleId":"1948","severity":1,"message":"1949","line":129,"column":6,"nodeType":"1950","endLine":129,"endColumn":8,"suggestions":"2154"},{"ruleId":"1948","severity":1,"message":"1952","line":137,"column":6,"nodeType":"1950","endLine":137,"endColumn":55,"suggestions":"2155"},{"ruleId":"1948","severity":1,"message":"1954","line":137,"column":25,"nodeType":"1955","endLine":137,"endColumn":54},{"ruleId":"1948","severity":1,"message":"1956","line":145,"column":6,"nodeType":"1950","endLine":145,"endColumn":64,"suggestions":"2156"},{"ruleId":"1948","severity":1,"message":"1954","line":145,"column":31,"nodeType":"1955","endLine":145,"endColumn":63},{"ruleId":"1938","severity":1,"message":"1965","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":26},{"ruleId":"1938","severity":1,"message":"1990","line":5,"column":10,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2023","line":5,"column":21,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2024","line":7,"column":22,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2025","line":8,"column":10,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2026","line":9,"column":10,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2027","line":11,"column":10,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2028","line":11,"column":16,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2029","line":12,"column":10,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2030","line":12,"column":18,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2031","line":15,"column":10,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1966","line":22,"column":3,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1988","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":26,"column":3,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1945","line":27,"column":3,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1970","line":28,"column":3,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":29,"column":3,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1991","line":33,"column":20,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":34},{"ruleId":"1938","severity":1,"message":"2032","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2033","line":34,"column":18,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1994","line":35,"column":8,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":11},{"ruleId":"1938","severity":1,"message":"2034","line":50,"column":9,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":29},{"ruleId":"2035","severity":1,"message":"2036","line":59,"column":63,"nodeType":"2037","messageId":"1962","endLine":59,"endColumn":65},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":26},{"ruleId":"1938","severity":1,"message":"1966","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":6,"column":3,"nodeType":"1940","messageId":"1941","endLine":6,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1988","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1987","line":13,"column":10,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":26},{"ruleId":"1938","severity":1,"message":"1965","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1966","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1945","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1970","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1971","line":28,"column":16,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1972","line":30,"column":8,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1973","line":36,"column":3,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1974","line":38,"column":3,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1975","line":39,"column":3,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1976","line":40,"column":3,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1946","line":44,"column":10,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":45,"column":15,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1978","line":50,"column":3,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":22},{"ruleId":"1938","severity":1,"message":"1979","line":59,"column":11,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1980","line":59,"column":19,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1981","line":59,"column":27,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":34},{"ruleId":"1938","severity":1,"message":"1982","line":63,"column":17,"nodeType":"1940","messageId":"1941","endLine":63,"endColumn":24},{"ruleId":"1983","severity":1,"message":"1984","line":355,"column":23,"nodeType":"1985","endLine":355,"endColumn":44},{"ruleId":"1938","severity":1,"message":"1986","line":480,"column":10,"nodeType":"1940","messageId":"1941","endLine":480,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1987","line":482,"column":10,"nodeType":"1940","messageId":"1941","endLine":482,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1945","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1990","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1943","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1991","line":26,"column":20,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":34},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1994","line":5,"column":8,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":5,"column":15,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1966","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1945","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1997","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1998","line":19,"column":3,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1990","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2000","line":23,"column":21,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"2001","line":24,"column":10,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2002","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2003","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2004","line":28,"column":8,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2005","line":29,"column":8,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2006","line":30,"column":8,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2007","line":35,"column":9,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1979","line":41,"column":11,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1981","line":41,"column":27,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":34},{"ruleId":"1938","severity":1,"message":"2008","line":43,"column":10,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2009","line":44,"column":9,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2010","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1977","line":18,"column":15,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1987","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1989","line":30,"column":18,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2012","line":19,"column":3,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2013","line":20,"column":3,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2014","line":21,"column":3,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2015","line":22,"column":3,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2016","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2017","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":12},{"ruleId":"1938","severity":1,"message":"2018","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1946","line":29,"column":10,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":30,"column":15,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1987","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2019","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2020","line":37,"column":19,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":29},{"ruleId":"1938","severity":1,"message":"1989","line":38,"column":18,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2021","line":43,"column":17,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2022","line":48,"column":13,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2038","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1994","line":15,"column":8,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":15,"column":15,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2038","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":15},{"ruleId":"1938","severity":1,"message":"1966","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1988","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":19,"column":3,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":20,"column":3,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1945","line":21,"column":3,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1995","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1973","line":32,"column":3,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2039","line":33,"column":3,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1974","line":34,"column":3,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1975","line":35,"column":3,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1976","line":36,"column":3,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2040","line":37,"column":3,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2004","line":40,"column":8,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":22},{"ruleId":"1938","severity":1,"message":"1999","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2041","line":42,"column":10,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":16},{"ruleId":"1938","severity":1,"message":"1994","line":45,"column":8,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":45,"column":15,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2042","line":46,"column":8,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2043","line":50,"column":10,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":26},{"ruleId":"1938","severity":1,"message":"1979","line":51,"column":11,"nodeType":"1940","messageId":"1941","endLine":51,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2044","line":56,"column":9,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2045","line":60,"column":9,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":23},{"ruleId":"2035","severity":1,"message":"2036","line":151,"column":53,"nodeType":"2037","messageId":"1962","endLine":151,"endColumn":55},{"ruleId":"1938","severity":1,"message":"1970","line":2,"column":15,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1988","line":2,"column":19,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2046","line":2,"column":27,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":31},{"ruleId":"1938","severity":1,"message":"2047","line":4,"column":8,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":23},{"ruleId":"1938","severity":1,"message":"1943","line":8,"column":10,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1964","line":10,"column":10,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2048","line":16,"column":10,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2049","line":16,"column":16,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2050","line":17,"column":10,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2051","line":17,"column":17,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2007","line":18,"column":9,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2052","line":19,"column":30,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":51},{"ruleId":"1938","severity":1,"message":"2053","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2054","line":22,"column":21,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":33},{"ruleId":"1938","severity":1,"message":"1966","line":4,"column":3,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1945","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1970","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"2157","line":21,"column":3,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2030","line":23,"column":18,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2158","line":23,"column":31,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":42},{"ruleId":"1938","severity":1,"message":"1946","line":47,"column":10,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":18},{"ruleId":"1948","severity":1,"message":"2159","line":78,"column":6,"nodeType":"1950","endLine":78,"endColumn":11,"suggestions":"2160"},{"ruleId":"1938","severity":1,"message":"2071","line":89,"column":9,"nodeType":"1940","messageId":"1941","endLine":89,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2072","line":107,"column":18,"nodeType":"1940","messageId":"1941","endLine":107,"endColumn":34},{"ruleId":"1938","severity":1,"message":"2073","line":219,"column":9,"nodeType":"1940","messageId":"1941","endLine":219,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2022","line":223,"column":15,"nodeType":"1940","messageId":"1941","endLine":223,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2022","line":227,"column":15,"nodeType":"1940","messageId":"1941","endLine":227,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2074","line":555,"column":7,"nodeType":"1940","messageId":"1941","endLine":555,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2075","line":556,"column":5,"nodeType":"1940","messageId":"1941","endLine":556,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2076","line":567,"column":7,"nodeType":"1940","messageId":"1941","endLine":567,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2077","line":573,"column":7,"nodeType":"1940","messageId":"1941","endLine":573,"endColumn":12},{"ruleId":"2035","severity":1,"message":"2036","line":592,"column":50,"nodeType":"2037","messageId":"1962","endLine":592,"endColumn":52},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1977","line":5,"column":15,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1966","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1968","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1996","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1997","line":19,"column":3,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1973","line":28,"column":3,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2039","line":29,"column":3,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1974","line":30,"column":3,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1975","line":31,"column":3,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1976","line":32,"column":3,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2040","line":33,"column":3,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1990","line":36,"column":10,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2000","line":36,"column":21,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":31},{"ruleId":"1938","severity":1,"message":"2001","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2002","line":38,"column":10,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2003","line":39,"column":10,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2031","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2103","line":42,"column":10,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":43,"column":10,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2104","line":44,"column":10,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":30},{"ruleId":"1938","severity":1,"message":"2004","line":46,"column":8,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2005","line":47,"column":8,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2006","line":48,"column":8,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2105","line":53,"column":10,"nodeType":"1940","messageId":"1941","endLine":53,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2109","line":54,"column":10,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2110","line":54,"column":20,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2007","line":64,"column":9,"nodeType":"1940","messageId":"1941","endLine":64,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2106","line":65,"column":9,"nodeType":"1940","messageId":"1941","endLine":65,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2021","line":68,"column":17,"nodeType":"1940","messageId":"1941","endLine":68,"endColumn":26},{"ruleId":"1948","severity":1,"message":"2159","line":84,"column":6,"nodeType":"1950","endLine":84,"endColumn":17,"suggestions":"2161"},{"ruleId":"1938","severity":1,"message":"2162","line":86,"column":9,"nodeType":"1940","messageId":"1941","endLine":86,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2107","line":90,"column":9,"nodeType":"1940","messageId":"1941","endLine":90,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2010","line":98,"column":9,"nodeType":"1940","messageId":"1941","endLine":98,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2144","line":28,"column":10,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2145","line":28,"column":19,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":28},{"ruleId":"1938","severity":1,"message":"1946","line":33,"column":10,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":34,"column":15,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":34,"column":35,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2085","line":35,"column":8,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2115","line":40,"column":10,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":40,"column":18,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2007","line":50,"column":9,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":20},{"ruleId":"2035","severity":1,"message":"2036","line":109,"column":15,"nodeType":"2037","messageId":"1962","endLine":109,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2101","line":312,"column":7,"nodeType":"1940","messageId":"1941","endLine":312,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1988","line":2,"column":19,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2128","line":7,"column":10,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1943","line":8,"column":10,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2006","line":13,"column":8,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2048","line":18,"column":10,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2049","line":18,"column":16,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2050","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2051","line":19,"column":17,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2007","line":21,"column":9,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2129","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":28},{"ruleId":"1938","severity":1,"message":"2052","line":22,"column":30,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":51},{"ruleId":"1938","severity":1,"message":"2053","line":27,"column":10,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2054","line":27,"column":21,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2010","line":28,"column":9,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2045","line":30,"column":9,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":23},{"ruleId":"1948","severity":1,"message":"2130","line":34,"column":6,"nodeType":"1950","endLine":34,"endColumn":27,"suggestions":"2163"},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1998","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2046","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":7},{"ruleId":"1938","severity":1,"message":"2125","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2126","line":20,"column":10,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2127","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2087","line":33,"column":25,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2088","line":33,"column":35,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2115","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":34,"column":18,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2010","line":39,"column":9,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2007","line":41,"column":9,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1992","line":2,"column":10,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1994","line":5,"column":8,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":5,"column":15,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1966","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1997","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1946","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2104","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":30},{"ruleId":"1938","severity":1,"message":"2108","line":32,"column":10,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2004","line":33,"column":8,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2005","line":34,"column":8,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2006","line":35,"column":8,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2105","line":38,"column":10,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2109","line":39,"column":10,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2110","line":39,"column":20,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2111","line":41,"column":8,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2007","line":44,"column":9,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2106","line":45,"column":9,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2112","line":46,"column":9,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2010","line":52,"column":9,"nodeType":"1940","messageId":"1941","endLine":52,"endColumn":19},{"ruleId":"2035","severity":1,"message":"2113","line":67,"column":24,"nodeType":"2037","messageId":"1962","endLine":67,"endColumn":26},{"ruleId":"2035","severity":1,"message":"2113","line":160,"column":47,"nodeType":"2037","messageId":"1962","endLine":160,"endColumn":49},{"ruleId":"2035","severity":1,"message":"2113","line":161,"column":54,"nodeType":"2037","messageId":"1962","endLine":161,"endColumn":56},{"ruleId":"2035","severity":1,"message":"2113","line":163,"column":50,"nodeType":"2037","messageId":"1962","endLine":163,"endColumn":52},{"ruleId":"2035","severity":1,"message":"2036","line":164,"column":56,"nodeType":"2037","messageId":"1962","endLine":164,"endColumn":58},{"ruleId":"2035","severity":1,"message":"2113","line":290,"column":43,"nodeType":"2037","messageId":"1962","endLine":290,"endColumn":45},{"ruleId":"2035","severity":1,"message":"2113","line":291,"column":50,"nodeType":"2037","messageId":"1962","endLine":291,"endColumn":52},{"ruleId":"2035","severity":1,"message":"2113","line":293,"column":46,"nodeType":"2037","messageId":"1962","endLine":293,"endColumn":48},{"ruleId":"2035","severity":1,"message":"2036","line":294,"column":52,"nodeType":"2037","messageId":"1962","endLine":294,"endColumn":54},{"ruleId":"2035","severity":1,"message":"2113","line":328,"column":24,"nodeType":"2037","messageId":"1962","endLine":328,"endColumn":26},{"ruleId":"2035","severity":1,"message":"2113","line":420,"column":47,"nodeType":"2037","messageId":"1962","endLine":420,"endColumn":49},{"ruleId":"2035","severity":1,"message":"2113","line":421,"column":54,"nodeType":"2037","messageId":"1962","endLine":421,"endColumn":56},{"ruleId":"2035","severity":1,"message":"2113","line":423,"column":50,"nodeType":"2037","messageId":"1962","endLine":423,"endColumn":52},{"ruleId":"2035","severity":1,"message":"2036","line":424,"column":56,"nodeType":"2037","messageId":"1962","endLine":424,"endColumn":58},{"ruleId":"1938","severity":1,"message":"2115","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":26,"column":18,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2007","line":40,"column":9,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2101","line":466,"column":7,"nodeType":"1940","messageId":"1941","endLine":466,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1958","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":18},{"ruleId":"1959","severity":1,"message":"1960","line":116,"column":9,"nodeType":"1961","messageId":"1962","endLine":116,"endColumn":16},{"ruleId":"1959","severity":1,"message":"1963","line":347,"column":5,"nodeType":"1961","messageId":"1962","endLine":347,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1968","line":1,"column":40,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":50},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":5,"column":10,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2003","line":24,"column":10,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":24,"column":23,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1943","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":27,"column":15,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":27,"column":35,"nodeType":"1940","messageId":"1941","endLine":27,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2085","line":29,"column":8,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1987","line":40,"column":10,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2146","line":41,"column":43,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":48},{"ruleId":"1938","severity":1,"message":"2115","line":42,"column":10,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":42,"column":18,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2117","line":43,"column":10,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2118","line":43,"column":23,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2119","line":45,"column":10,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":45,"column":23,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":49,"column":9,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2121","line":52,"column":10,"nodeType":"1940","messageId":"1941","endLine":52,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2122","line":53,"column":10,"nodeType":"1940","messageId":"1941","endLine":53,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2123","line":57,"column":10,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2124","line":57,"column":22,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":35},{"ruleId":"2035","severity":1,"message":"2036","line":91,"column":15,"nodeType":"2037","messageId":"1962","endLine":91,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2022","line":137,"column":13,"nodeType":"1940","messageId":"1941","endLine":137,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2101","line":366,"column":7,"nodeType":"1940","messageId":"1941","endLine":366,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1943","line":24,"column":10,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1994","line":26,"column":8,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2084","line":26,"column":26,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2085","line":28,"column":8,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1987","line":39,"column":10,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2115","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":41,"column":18,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2117","line":42,"column":10,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2118","line":42,"column":23,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2119","line":44,"column":10,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":44,"column":23,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":46,"column":9,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2121","line":51,"column":10,"nodeType":"1940","messageId":"1941","endLine":51,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2122","line":52,"column":10,"nodeType":"1940","messageId":"1941","endLine":52,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2123","line":54,"column":10,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2124","line":54,"column":22,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":35},{"ruleId":"2035","severity":1,"message":"2036","line":135,"column":15,"nodeType":"2037","messageId":"1962","endLine":135,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2101","line":371,"column":7,"nodeType":"1940","messageId":"1941","endLine":371,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2046","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":7},{"ruleId":"1938","severity":1,"message":"2125","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2126","line":20,"column":10,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2127","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2115","line":34,"column":10,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":34,"column":18,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2061","line":36,"column":19,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2119","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":37,"column":23,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":39,"column":9,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":40,"column":9,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":41,"column":9,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2125","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2126","line":20,"column":10,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2127","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1943","line":24,"column":10,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1987","line":39,"column":10,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2115","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":41,"column":18,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2117","line":42,"column":10,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2118","line":42,"column":23,"nodeType":"1940","messageId":"1941","endLine":42,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2119","line":45,"column":10,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":45,"column":23,"nodeType":"1940","messageId":"1941","endLine":45,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":49,"column":9,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2132","line":55,"column":10,"nodeType":"1940","messageId":"1941","endLine":55,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2133","line":55,"column":22,"nodeType":"1940","messageId":"1941","endLine":55,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2121","line":56,"column":10,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2134","line":56,"column":24,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":39},{"ruleId":"1938","severity":1,"message":"2122","line":57,"column":10,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2135","line":57,"column":19,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2136","line":58,"column":10,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2137","line":58,"column":22,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2123","line":59,"column":10,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2124","line":59,"column":22,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2138","line":60,"column":10,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2139","line":60,"column":22,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2140","line":61,"column":10,"nodeType":"1940","messageId":"1941","endLine":61,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2141","line":61,"column":22,"nodeType":"1940","messageId":"1941","endLine":61,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2142","line":62,"column":10,"nodeType":"1940","messageId":"1941","endLine":62,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2143","line":62,"column":31,"nodeType":"1940","messageId":"1941","endLine":62,"endColumn":53},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2125","line":19,"column":10,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":26},{"ruleId":"1938","severity":1,"message":"2126","line":20,"column":10,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2127","line":21,"column":10,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1999","line":22,"column":10,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2003","line":23,"column":10,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2114","line":23,"column":23,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":31},{"ruleId":"1938","severity":1,"message":"1946","line":25,"column":10,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":26,"column":15,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":26,"column":35,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2115","line":40,"column":10,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":16},{"ruleId":"1938","severity":1,"message":"2116","line":40,"column":18,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2117","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2118","line":41,"column":23,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2119","line":44,"column":10,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":21},{"ruleId":"1938","severity":1,"message":"2120","line":44,"column":23,"nodeType":"1940","messageId":"1941","endLine":44,"endColumn":37},{"ruleId":"1938","severity":1,"message":"2010","line":46,"column":9,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2112","line":47,"column":9,"nodeType":"1940","messageId":"1941","endLine":47,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2007","line":48,"column":9,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2132","line":54,"column":10,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2133","line":54,"column":22,"nodeType":"1940","messageId":"1941","endLine":54,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2121","line":55,"column":10,"nodeType":"1940","messageId":"1941","endLine":55,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2134","line":55,"column":24,"nodeType":"1940","messageId":"1941","endLine":55,"endColumn":39},{"ruleId":"1938","severity":1,"message":"2122","line":56,"column":10,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2135","line":56,"column":19,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2136","line":57,"column":10,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2137","line":57,"column":22,"nodeType":"1940","messageId":"1941","endLine":57,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2123","line":58,"column":10,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2124","line":58,"column":22,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2138","line":59,"column":10,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2139","line":59,"column":22,"nodeType":"1940","messageId":"1941","endLine":59,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2140","line":60,"column":10,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2141","line":60,"column":22,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":35},{"ruleId":"1938","severity":1,"message":"2142","line":61,"column":10,"nodeType":"1940","messageId":"1941","endLine":61,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2143","line":61,"column":31,"nodeType":"1940","messageId":"1941","endLine":61,"endColumn":53},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1988","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2016","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":28,"column":10,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":29,"column":10,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2083","line":30,"column":20,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1994","line":31,"column":8,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":31,"column":15,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2084","line":31,"column":26,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2085","line":32,"column":8,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1987","line":48,"column":10,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2086","line":49,"column":11,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2087","line":49,"column":25,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2088","line":49,"column":35,"nodeType":"1940","messageId":"1941","endLine":49,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2089","line":50,"column":10,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":50,"column":29,"nodeType":"1940","messageId":"1941","endLine":50,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2007","line":53,"column":9,"nodeType":"1940","messageId":"1941","endLine":53,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2016","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":28,"column":10,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":29,"column":10,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2085","line":32,"column":8,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1987","line":35,"column":10,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2089","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":37,"column":29,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2091","line":38,"column":10,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2101","line":141,"column":7,"nodeType":"1940","messageId":"1941","endLine":141,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2046","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":7},{"ruleId":"1938","severity":1,"message":"2016","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":32,"column":15,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2102","line":32,"column":35,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1987","line":46,"column":10,"nodeType":"1940","messageId":"1941","endLine":46,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2007","line":51,"column":9,"nodeType":"1940","messageId":"1941","endLine":51,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2078","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2079","line":4,"column":20,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2011","line":5,"column":10,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2016","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":33,"column":10,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1946","line":35,"column":10,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":36,"column":15,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1987","line":48,"column":10,"nodeType":"1940","messageId":"1941","endLine":48,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2080","line":60,"column":10,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2081","line":60,"column":17,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":25},{"ruleId":"1938","severity":1,"message":"2082","line":65,"column":9,"nodeType":"1940","messageId":"1941","endLine":65,"endColumn":20},{"ruleId":"2062","severity":1,"message":"2063","line":104,"column":5,"nodeType":"2064","messageId":"2065","endLine":109,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":114,"column":5,"nodeType":"2064","messageId":"2065","endLine":119,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":134,"column":5,"nodeType":"2064","messageId":"2065","endLine":139,"endColumn":6},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1966","line":4,"column":3,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1993","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1946","line":37,"column":10,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1977","line":38,"column":15,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2066","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":22},{"ruleId":"1938","severity":1,"message":"2019","line":58,"column":10,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2020","line":58,"column":19,"nodeType":"1940","messageId":"1941","endLine":58,"endColumn":29},{"ruleId":"1938","severity":1,"message":"2067","line":60,"column":10,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":19},{"ruleId":"1938","severity":1,"message":"2068","line":60,"column":21,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":33},{"ruleId":"2062","severity":1,"message":"2063","line":125,"column":5,"nodeType":"2064","messageId":"2065","endLine":130,"endColumn":6},{"ruleId":"1938","severity":1,"message":"2069","line":191,"column":9,"nodeType":"1940","messageId":"1941","endLine":191,"endColumn":26},{"ruleId":"2035","severity":1,"message":"2036","line":259,"column":36,"nodeType":"2037","messageId":"1962","endLine":259,"endColumn":38},{"ruleId":"2035","severity":1,"message":"2036","line":276,"column":36,"nodeType":"2037","messageId":"1962","endLine":276,"endColumn":38},{"ruleId":"2035","severity":1,"message":"2036","line":285,"column":51,"nodeType":"2037","messageId":"1962","endLine":285,"endColumn":53},{"ruleId":"2062","severity":1,"message":"2063","line":429,"column":5,"nodeType":"2064","messageId":"2065","endLine":435,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":488,"column":5,"nodeType":"2064","messageId":"2065","endLine":499,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":503,"column":5,"nodeType":"2064","messageId":"2065","endLine":508,"endColumn":6},{"ruleId":"1938","severity":1,"message":"2070","line":590,"column":9,"nodeType":"1940","messageId":"1941","endLine":590,"endColumn":26},{"ruleId":"2035","severity":1,"message":"2036","line":637,"column":15,"nodeType":"2037","messageId":"1962","endLine":637,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"2016","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":28,"column":10,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1946","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1994","line":31,"column":8,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":32,"column":3,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":12},{"ruleId":"1938","severity":1,"message":"2089","line":56,"column":10,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":56,"column":29,"nodeType":"1940","messageId":"1941","endLine":56,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2091","line":60,"column":10,"nodeType":"1940","messageId":"1941","endLine":60,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2092","line":65,"column":9,"nodeType":"1940","messageId":"1941","endLine":65,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2082","line":66,"column":9,"nodeType":"1940","messageId":"1941","endLine":66,"endColumn":20},{"ruleId":"1938","severity":1,"message":"2010","line":69,"column":17,"nodeType":"1940","messageId":"1941","endLine":69,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1987","line":83,"column":9,"nodeType":"1940","messageId":"1941","endLine":83,"endColumn":14},{"ruleId":"2093","severity":1,"message":"2094","line":83,"column":59,"nodeType":"2095","messageId":"2096","endLine":83,"endColumn":61},{"ruleId":"1948","severity":1,"message":"2097","line":108,"column":6,"nodeType":"1950","endLine":108,"endColumn":8,"suggestions":"2164"},{"ruleId":"1938","severity":1,"message":"2099","line":145,"column":9,"nodeType":"1940","messageId":"1941","endLine":145,"endColumn":24},{"ruleId":"1938","severity":1,"message":"1939","line":1,"column":17,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":25},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"1966","line":4,"column":3,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1968","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1995","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1970","line":2,"column":15,"nodeType":"1940","messageId":"1941","endLine":2,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2012","line":4,"column":3,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2013","line":5,"column":3,"nodeType":"1940","messageId":"1941","endLine":5,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2014","line":6,"column":3,"nodeType":"1940","messageId":"1941","endLine":6,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2015","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2016","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2017","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":12},{"ruleId":"1938","severity":1,"message":"2018","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1994","line":13,"column":8,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":13,"column":15,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2055","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":7},{"ruleId":"1938","severity":1,"message":"2056","line":17,"column":3,"nodeType":"1940","messageId":"1941","endLine":17,"endColumn":13},{"ruleId":"1938","severity":1,"message":"2057","line":18,"column":3,"nodeType":"1940","messageId":"1941","endLine":18,"endColumn":11},{"ruleId":"1938","severity":1,"message":"2058","line":19,"column":3,"nodeType":"1940","messageId":"1941","endLine":19,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1973","line":20,"column":3,"nodeType":"1940","messageId":"1941","endLine":20,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2039","line":21,"column":3,"nodeType":"1940","messageId":"1941","endLine":21,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1974","line":22,"column":3,"nodeType":"1940","messageId":"1941","endLine":22,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1975","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1976","line":24,"column":3,"nodeType":"1940","messageId":"1941","endLine":24,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2040","line":25,"column":3,"nodeType":"1940","messageId":"1941","endLine":25,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2059","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2060","line":30,"column":19,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":29},{"ruleId":"1938","severity":1,"message":"1982","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2061","line":31,"column":19,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":29},{"ruleId":"2062","severity":1,"message":"2063","line":43,"column":5,"nodeType":"2064","messageId":"2065","endLine":48,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":52,"column":5,"nodeType":"2064","messageId":"2065","endLine":57,"endColumn":6},{"ruleId":"2062","severity":1,"message":"2063","line":61,"column":5,"nodeType":"2064","messageId":"2065","endLine":66,"endColumn":6},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"2100","line":6,"column":3,"nodeType":"1940","messageId":"1941","endLine":6,"endColumn":6},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1988","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2016","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":32,"column":10,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2083","line":32,"column":20,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1994","line":33,"column":8,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":33,"column":15,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2084","line":33,"column":26,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2085","line":34,"column":8,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":14},{"ruleId":"1938","severity":1,"message":"2074","line":35,"column":8,"nodeType":"1940","messageId":"1941","endLine":35,"endColumn":19},{"ruleId":"1938","severity":1,"message":"1987","line":39,"column":10,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2086","line":40,"column":11,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2087","line":40,"column":25,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2088","line":40,"column":35,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2089","line":41,"column":10,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":41,"column":29,"nodeType":"1940","messageId":"1941","endLine":41,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2007","line":43,"column":9,"nodeType":"1940","messageId":"1941","endLine":43,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1967","line":8,"column":3,"nodeType":"1940","messageId":"1941","endLine":8,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1988","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2016","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":32,"column":10,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2083","line":32,"column":20,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1994","line":33,"column":8,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":33,"column":15,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2084","line":33,"column":26,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":33},{"ruleId":"1938","severity":1,"message":"1987","line":36,"column":10,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2086","line":37,"column":11,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2087","line":37,"column":25,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2088","line":37,"column":35,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2089","line":38,"column":10,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":38,"column":29,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2007","line":40,"column":9,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":20},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":3,"column":10,"nodeType":"1940","messageId":"1941","endLine":3,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1997","line":16,"column":3,"nodeType":"1940","messageId":"1941","endLine":16,"endColumn":8},{"ruleId":"1938","severity":1,"message":"1999","line":26,"column":10,"nodeType":"1940","messageId":"1941","endLine":26,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1946","line":28,"column":10,"nodeType":"1940","messageId":"1941","endLine":28,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1994","line":29,"column":8,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":11},{"ruleId":"1938","severity":1,"message":"2165","line":29,"column":15,"nodeType":"1940","messageId":"1941","endLine":29,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2085","line":30,"column":8,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1987","line":33,"column":10,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2086","line":34,"column":11,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2087","line":34,"column":25,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2088","line":34,"column":35,"nodeType":"1940","messageId":"1941","endLine":34,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2021","line":39,"column":17,"nodeType":"1940","messageId":"1941","endLine":39,"endColumn":26},{"ruleId":"2035","severity":1,"message":"2113","line":129,"column":41,"nodeType":"2037","messageId":"1962","endLine":129,"endColumn":43},{"ruleId":"1938","severity":1,"message":"2101","line":179,"column":7,"nodeType":"1940","messageId":"1941","endLine":179,"endColumn":27},{"ruleId":"1938","severity":1,"message":"1964","line":1,"column":27,"nodeType":"1940","messageId":"1941","endLine":1,"endColumn":36},{"ruleId":"1938","severity":1,"message":"2011","line":4,"column":10,"nodeType":"1940","messageId":"1941","endLine":4,"endColumn":17},{"ruleId":"1938","severity":1,"message":"1966","line":7,"column":3,"nodeType":"1940","messageId":"1941","endLine":7,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1988","line":9,"column":3,"nodeType":"1940","messageId":"1941","endLine":9,"endColumn":9},{"ruleId":"1938","severity":1,"message":"1968","line":10,"column":3,"nodeType":"1940","messageId":"1941","endLine":10,"endColumn":13},{"ruleId":"1938","severity":1,"message":"1969","line":11,"column":3,"nodeType":"1940","messageId":"1941","endLine":11,"endColumn":7},{"ruleId":"1938","severity":1,"message":"1995","line":12,"column":3,"nodeType":"1940","messageId":"1941","endLine":12,"endColumn":12},{"ruleId":"1938","severity":1,"message":"1970","line":13,"column":3,"nodeType":"1940","messageId":"1941","endLine":13,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1945","line":14,"column":3,"nodeType":"1940","messageId":"1941","endLine":14,"endColumn":5},{"ruleId":"1938","severity":1,"message":"1996","line":15,"column":3,"nodeType":"1940","messageId":"1941","endLine":15,"endColumn":8},{"ruleId":"1938","severity":1,"message":"2016","line":23,"column":3,"nodeType":"1940","messageId":"1941","endLine":23,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1999","line":30,"column":10,"nodeType":"1940","messageId":"1941","endLine":30,"endColumn":14},{"ruleId":"1938","severity":1,"message":"1943","line":31,"column":10,"nodeType":"1940","messageId":"1941","endLine":31,"endColumn":18},{"ruleId":"1938","severity":1,"message":"1946","line":32,"column":10,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":18},{"ruleId":"1938","severity":1,"message":"2083","line":32,"column":20,"nodeType":"1940","messageId":"1941","endLine":32,"endColumn":41},{"ruleId":"1938","severity":1,"message":"1994","line":33,"column":8,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":11},{"ruleId":"1938","severity":1,"message":"1977","line":33,"column":15,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":24},{"ruleId":"1938","severity":1,"message":"2084","line":33,"column":26,"nodeType":"1940","messageId":"1941","endLine":33,"endColumn":33},{"ruleId":"1938","severity":1,"message":"1987","line":36,"column":10,"nodeType":"1940","messageId":"1941","endLine":36,"endColumn":15},{"ruleId":"1938","severity":1,"message":"2086","line":37,"column":11,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":23},{"ruleId":"1938","severity":1,"message":"2087","line":37,"column":25,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":33},{"ruleId":"1938","severity":1,"message":"2088","line":37,"column":35,"nodeType":"1940","messageId":"1941","endLine":37,"endColumn":41},{"ruleId":"1938","severity":1,"message":"2089","line":38,"column":10,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":27},{"ruleId":"1938","severity":1,"message":"2090","line":38,"column":29,"nodeType":"1940","messageId":"1941","endLine":38,"endColumn":49},{"ruleId":"1938","severity":1,"message":"2007","line":40,"column":9,"nodeType":"1940","messageId":"1941","endLine":40,"endColumn":20},"no-native-reassign",["2166"],"no-negated-in-lhs",["2167"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'useQuery' is defined but never used.","'Footer' is defined but never used.","'H1' is defined but never used.","'useToast' is defined but never used.","'myTheme' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'setdeployProcessStatus' and 'toast'. Either include them or remove the dependency array.","ArrayExpression",["2168"],"React Hook useEffect has a missing dependency: 'setToken'. Either include it or remove the dependency array. Outer scope values like 'setHeader' aren't valid dependencies because mutating them doesn't re-render the component.",["2169"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'setJwtToken'. Either include it or remove the dependency array. Outer scope values like 'setJwtHeader' aren't valid dependencies because mutating them doesn't re-render the component.",["2170"],"'backgroundImage' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","Duplicate key 'fontSize'.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'ResponsiveImage' is defined but never used.","'Image' is defined but never used.","'StyledLink' is defined but never used.","'Span' is defined but never used.","'H2' is defined but never used.","'ChevronDownIcon' is defined but never used.","'Sidebar' is defined but never used.","'MenuItemOption' is defined but never used.","'MenuOptionGroup' is defined but never used.","'MenuIcon' is defined but never used.","'MenuCommand' is defined but never used.","'setHeader' is defined but never used.","'BreadcrumbSeparator' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'loading' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'UserMenu' is defined but never used.","'token' is assigned a value but never used.","'Button' is defined but never used.","'setApiErr' is assigned a value but never used.","'FaUserAlt' is defined but never used.","'useQueryClient' is defined but never used.","'useForm' is defined but never used.","'useGlobal' is defined but never used.","'Api' is defined but never used.","'MotionBox' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'H5' is defined but never used.","'Icon' is defined but never used.","'FaDatabase' is defined but never used.","'FcAcceptDatabase' is defined but never used.","'IoAppsSharp' is defined but never used.","'SiAmazonaws' is defined but never used.","'CreateDatabase' is defined but never used.","'Application' is defined but never used.","'AwsDeploy' is defined but never used.","'queryClient' is assigned a value but never used.","'openModal' is assigned a value but never used.","'openModalHandler' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'NavLink' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'data' is assigned a value but never used.","'FaServer' is defined but never used.","'AiFillCaretDown' is defined but never used.","'GrMysql' is defined but never used.","'SiPostgresql' is defined but never used.","'Wrap' is defined but never used.","'WrapItem' is defined but never used.","'Avatar' is defined but never used.","'AvatarBadge' is defined but never used.","'BsAppIndicator' is defined but never used.","'margin' is defined but never used.","'marginTop' is defined but never used.","'showDbOptionsHandler' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'TableCaption' is defined but never used.","'MenuGroup' is defined but never used.","'MenuDivider' is defined but never used.","'FaEdit' is defined but never used.","'EditDatabase' is defined but never used.","'editDbConnection' is assigned a value but never used.","'editDbHandler' is assigned a value but never used.","'onCloseHandler' is assigned a value but never used.","'Para' is defined but never used.","'ApplicationNext' is defined but never used.","'dash' is assigned a value but never used.","'setDash' is assigned a value but never used.","'fetch' is assigned a value but never used.","'setFetch' is assigned a value but never used.","'setConnectionSelected' is assigned a value but never used.","'onLoading' is assigned a value but never used.","'setOnLoading' is assigned a value but never used.","'Menu' is defined but never used.","'MenuButton' is defined but never used.","'MenuList' is defined but never used.","'MenuItem' is defined but never used.","'classId' is assigned a value but never used.","'setClassId' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'TiRssOutline' is defined but never used.","'editValue' is assigned a value but never used.","'setEditValue' is assigned a value but never used.","'timeChangeHandler' is assigned a value but never used.","'setbaseJWTHandler' is assigned a value but never used.","'isFetchingApps' is assigned a value but never used.","'exportAppHandler' is defined but never used.","'deleteRow' is assigned a value but never used.","'CreateTable' is defined but never used.","'exportTable' is assigned a value but never used.","'editTable' is assigned a value but never used.","'modal' is assigned a value but never used.","'Checkbox' is defined but never used.","'CheckboxGroup' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'contentType' is assigned a value but never used.","'createStandaloneToast' is defined but never used.","'APIURLS' is defined but never used.","'Select' is defined but never used.","'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'selectedFieldType' is assigned a value but never used.","'setSelectedFieldType' is assigned a value but never used.","'jwtToken' is assigned a value but never used.","'columnTypes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'columns', 'selectedBinaryType', 'selectedBooleanType', and 'value'. Either include them or remove the dependency array.",["2171"],"'setValueHandler' is assigned a value but never used.","'Box' is defined but never used.","'CARD_ELEMENT_OPTIONS' is assigned a value but never used.","'ApiJwt' is defined but never used.","'TiExport' is defined but never used.","'AiOutlineCloudServer' is defined but never used.","'Chart' is defined but never used.","'userProfile' is assigned a value but never used.","'dbConnections' is assigned a value but never used.","'useDisclosure' is defined but never used.","'Doughnut' is defined but never used.","'Line' is defined but never used.","'AppTableCreation' is defined but never used.","'toast' is assigned a value but never used.","Expected '===' and instead saw '=='.","'SiHeroku' is defined but never used.","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","'selectedApp' is assigned a value but never used.","'setSelectedApp' is assigned a value but never used.","'provisionDb' is assigned a value but never used.","'setProvisionDb' is assigned a value but never used.","'instanceType' is assigned a value but never used.","'imageId' is assigned a value but never used.","'engineType' is assigned a value but never used.","'setEngineType' is assigned a value but never used.","'BsPlusCircleFill' is defined but never used.","'FaAws' is defined but never used.","'AiOutlineDelete' is defined but never used.","'setGlobal' is defined but never used.","'connectionSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setdeployProcessStatus'. Either include it or remove the dependency array.",["2172"],"'deviceList' is assigned a value but never used.","'setDeviceList' is assigned a value but never used.","'setInstanceType' is assigned a value but never used.","'setImageId' is assigned a value but never used.","'deviceName' is assigned a value but never used.","'setDeviceName' is assigned a value but never used.","'volumeType' is assigned a value but never used.","'setVolumeType' is assigned a value but never used.","'volumeSize' is assigned a value but never used.","'setVolumeSize' is assigned a value but never used.","'deleteOnTermination' is assigned a value but never used.","'setDeleteOnTermination' is assigned a value but never used.","'MdEmail' is defined but never used.","'MdTextsms' is defined but never used.","'reset' is assigned a value but never used.",["2166"],["2167"],"'deployProcessStatus' is assigned a value but never used.","'html' is assigned a value but never used.","'setHtml' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["2173"],["2174"],["2175"],["2176"],"'AccordionIcon' is defined but never used.","'AvatarGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'baseURL' and 'setBaseURL'. Either include them or remove the dependency array.",["2177"],["2178"],"'appDocs' is assigned a value but never used.",["2179"],["2180"],"'setJwtHeader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"2181","fix":"2182"},{"desc":"2183","fix":"2184"},{"desc":"2185","fix":"2186"},{"desc":"2187","fix":"2188"},{"desc":"2189","fix":"2190"},{"desc":"2191","fix":"2192"},{"desc":"2181","fix":"2193"},{"desc":"2183","fix":"2194"},{"desc":"2185","fix":"2195"},{"desc":"2196","fix":"2197"},{"desc":"2198","fix":"2199"},{"desc":"2189","fix":"2200"},{"desc":"2187","fix":"2201"},"Update the dependencies array to be: [setdeployProcessStatus, toast]",{"range":"2202","text":"2203"},"Update the dependencies array to be: [token, setToken]",{"range":"2204","text":"2205"},"Update the dependencies array to be: [jwtToken, setJwtToken]",{"range":"2206","text":"2207"},"Update the dependencies array to be: [columns, selectedBinaryType, selectedBooleanType, value]",{"range":"2208","text":"2209"},"Update the dependencies array to be: [deployProcessStatus, setdeployProcessStatus]",{"range":"2210","text":"2211"},"Update the dependencies array to be: []",{"range":"2212","text":"2213"},{"range":"2214","text":"2203"},{"range":"2215","text":"2205"},{"range":"2216","text":"2207"},"Update the dependencies array to be: [app, baseURL, setBaseURL]",{"range":"2217","text":"2218"},"Update the dependencies array to be: [app, baseURL, data, setBaseURL]",{"range":"2219","text":"2220"},{"range":"2221","text":"2211"},{"range":"2222","text":"2209"},[3764,3766],"[setdeployProcessStatus, toast]",[3984,4033],"[token, setToken]",[4188,4246],"[jwtToken, setJwtToken]",[2700,2702],"[columns, selectedBinaryType, selectedBooleanType, value]",[1380,1401],"[deployProcessStatus, setdeployProcessStatus]",[3286,3294],"[]",[3762,3764],[3910,3959],[4114,4172],[2457,2462],"[app, baseURL, setBaseURL]",[2658,2669],"[app, baseURL, data, setBaseURL]",[1380,1401],[3040,3042]]